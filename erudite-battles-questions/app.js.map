{"version":3,"file":"app.js","sources":["../../node_modules/@glimmer/di/dist/modules/es2017/src/container.ts","../../node_modules/@glimmer/di/dist/modules/es2017/src/registry.ts","../../node_modules/@glimmer/di/dist/modules/es2017/src/owner.ts","../../node_modules/@glimmer/util/dist/modules/es2017/lib/namespaces.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/platform-utils.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/assert.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/logger.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/object-utils.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/guid.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/collections.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/list-utils.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/weakmap.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/array-utils.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/opcodes.js","../../node_modules/@glimmer/reference/dist/modules/es2017/lib/validators.js","../../node_modules/@glimmer/reference/dist/modules/es2017/lib/const.js","../../node_modules/@glimmer/reference/dist/modules/es2017/lib/iterable.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/references.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/expressions/concat.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/expressions.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/arguments.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/vm.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/dom.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/component.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/bounds.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/builder.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/component/interfaces.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/upsert.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/content.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/debugger.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/partial.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/lists.js","../../node_modules/@glimmer/wire-format/dist/modules/es2017/lib/opcodes.js","../../node_modules/@glimmer/wire-format/dist/modules/es2017/index.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/syntax/client-side.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/blocks.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiler.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/syntax/raw-block.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/builder.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/syntax/functions.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/syntax/compilable-template.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/scanner.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/environment/constants.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/sanitized-values.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/props.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compat/inner-html-fix.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compat/svg-inner-html-fix.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compat/text-node-merging-fix.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/helper.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/attribute-managers.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/environment.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/update.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/render-result.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/append.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/template.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/interfaces.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/utils.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/references/path.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/references/root.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/meta.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/references/descriptors.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/object.js","../../node_modules/@glimmer/application/dist/modules/es2017/src/application-registry.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/dynamic-scope.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/iterable.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/helpers/action.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/helpers/user-helper.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/environment.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/templates/main.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/application.ts","../../node_modules/@glimmer/resolver/node_modules/@glimmer/di/dist/modules/es2017/src/owner.ts","../../node_modules/@glimmer/resolver/node_modules/@glimmer/di/dist/modules/es2017/src/specifier.ts","../../node_modules/@glimmer/resolver/dist/modules/es2017/src/utils/debug.ts","../../node_modules/@glimmer/resolver/dist/modules/es2017/src/resolver.ts","../../node_modules/@glimmer/component/dist/modules/es2017/src/tracked.ts","../../node_modules/@glimmer/component/dist/modules/es2017/src/component.ts","../../node_modules/@glimmer/component/dist/modules/es2017/src/references.ts","../../node_modules/@glimmer/component/dist/modules/es2017/src/component-manager.ts","src/ui/components/erudite-battles-questions/get-english-question.ts","src/ui/components/erudite-battles-questions/get-math-question.ts","src/ui/components/erudite-battles-questions/component.ts","src/ui/components/erudite-battles-questions/template.ts","src/ui/components/themed-question/component.ts","src/ui/components/themed-question/template.ts","config/module-map.js","config/resolver-configuration.js","src/main.ts","src/index.ts"],"sourcesContent":["import { Factory, FactoryDefinition } from './factory';\nimport { RegistryReader, Injection } from './registry';\nimport { Resolver } from './resolver';\nimport { Dict } from './dict';\n\nexport default class Container {\n  private _registry: RegistryReader;\n  private _resolver: Resolver;\n  private _lookups: Dict<any>;\n  private _factoryDefinitionLookups: Dict<FactoryDefinition<any>>;\n\n  constructor(registry: RegistryReader, resolver: Resolver = null) {\n    this._registry = registry;\n    this._resolver = resolver;\n    this._lookups = {};\n    this._factoryDefinitionLookups = {};\n  }\n\n  factoryFor(specifier: string): Factory<any> {\n    let factoryDefinition: FactoryDefinition<any> = this._factoryDefinitionLookups[specifier];\n\n    if (!factoryDefinition) {\n      if (this._resolver) {\n        factoryDefinition = this._resolver.retrieve(specifier);\n      }\n\n      if (!factoryDefinition) {\n        factoryDefinition = this._registry.registration(specifier);\n      }\n\n      if (factoryDefinition) {\n        this._factoryDefinitionLookups[specifier] = factoryDefinition;\n      }\n    }\n\n    if (!factoryDefinition) {\n      return;\n    }\n\n    return this.buildFactory(specifier, factoryDefinition);\n  }\n\n  lookup(specifier: string): any {\n    let singleton = (this._registry.registeredOption(specifier, 'singleton') !== false);\n\n    if (singleton && this._lookups[specifier]) {\n      return this._lookups[specifier];\n    }\n\n    let factory = this.factoryFor(specifier);\n    if (!factory) { return; }\n\n    if (this._registry.registeredOption(specifier, 'instantiate') === false) {\n      return factory.class;\n    }\n\n    let object = factory.create();\n\n    if (singleton && object) {\n      this._lookups[specifier] = object;\n    }\n\n    return object;\n  }\n\n  defaultInjections(specifier: string): Object {\n    return {};\n  }\n\n  private buildInjections(specifier: string): Object {\n    let hash = this.defaultInjections(specifier);\n    let injections: Injection[] = this._registry.registeredInjections(specifier);\n    let injection: Injection;\n\n    for (let i = 0; i < injections.length; i++) {\n      injection = injections[i];\n      hash[injection.property] = this.lookup(injection.source);\n    }\n\n    return hash;\n  }\n\n  private buildFactory(specifier: string, factoryDefinition: FactoryDefinition<any>): Factory<any> {\n    let injections = this.buildInjections(specifier);\n\n    return {\n      class: factoryDefinition,\n      create(options) {\n        let mergedOptions = Object.assign({}, injections, options);\n\n        return factoryDefinition.create(mergedOptions);\n      }\n    }\n  }\n}\n","import { Dict } from './dict';\nimport { Factory, FactoryDefinition } from './factory';\n\nexport interface RegistrationOptions {\n  singleton?: boolean;\n  instantiate?: boolean;\n}\n\nexport interface Injection {\n  property: string,\n  source: string\n}\n\nexport interface RegistryWriter {\n  register(specifier: string, factory: any, options?: RegistrationOptions): void;\n  unregister(specifier: string): void;\n  registerOption(specifier: string, option: string, value: any): void;\n  unregisterOption(specifier: string, option: string): void;\n  registerInjection(specifier: string, property: string, source: string): void;\n}\n\nexport interface RegistryReader {\n  registration(specifier: string): any;\n  registeredOption(specifier: string, option: string): any;\n  registeredOptions(specifier: string): any;\n  registeredInjections(specifier: string): Injection[];\n}\n\nexport interface RegistryOptions {\n  fallback?: RegistryReader;\n}\n\nexport interface RegistryAccessor extends RegistryReader, RegistryWriter {}\n\nexport default class Registry implements RegistryAccessor {\n  private _registrations: Dict<FactoryDefinition<any>>;\n  private _registeredOptions: Dict<any>;\n  private _registeredInjections: Dict<Injection[]>;\n  private _fallback: RegistryReader;\n\n  constructor(options?: RegistryOptions) {\n    this._registrations = {};\n    this._registeredOptions = {};\n    this._registeredInjections = {};\n    if (options && options.fallback) {\n      this._fallback = options.fallback;\n    }\n  }\n\n  register(specifier: string, factoryDefinition: FactoryDefinition<any>, options?: RegistrationOptions): void {\n    this._registrations[specifier] = factoryDefinition;\n    if (options) {\n      this._registeredOptions[specifier] = options;\n    }\n  }\n\n  registration(specifier: string): FactoryDefinition<any> {\n    let registration = this._registrations[specifier];\n    if (registration === undefined && this._fallback) {\n      registration = this._fallback.registration(specifier);\n    }\n    return registration;\n  }\n\n  unregister(specifier: string): void {\n    delete this._registrations[specifier];\n    delete this._registeredOptions[specifier];\n    delete this._registeredInjections[specifier];\n  }\n\n  registerOption(specifier: string, option: string, value: any): void {\n    let options = this._registeredOptions[specifier];\n\n    if (!options) {\n      options = {};\n      this._registeredOptions[specifier] = options;\n    }\n\n    options[option] = value;\n  }\n\n  registeredOption(specifier: string, option: string): any {\n    let result: Boolean;\n    let options = this.registeredOptions(specifier);\n\n    if (options) {\n      result = options[option];\n    }\n\n    if (result === undefined && this._fallback !== undefined) {\n      result = this._fallback.registeredOption(specifier, option);\n    }\n\n    return result;\n  }\n\n  registeredOptions(specifier: string): any {\n    let options = this._registeredOptions[specifier];\n    if (options === undefined) {\n      let [type] = specifier.split(':');\n      options = this._registeredOptions[type];\n    }\n    return options;\n  }\n\n  unregisterOption(specifier: string, option: string): void {\n    let options = this._registeredOptions[specifier];\n\n    if (options) {\n      delete options[option];\n    }\n  }\n\n  registerInjection(specifier: string, property: string, source: string): void {\n    let injections = this._registeredInjections[specifier];\n    if (injections === undefined) {\n      this._registeredInjections[specifier] = injections = [];\n    }\n    injections.push({\n      property,\n      source\n    });\n  }\n\n  registeredInjections(specifier: string): Injection[] {\n    let [type] = specifier.split(':');\n    let injections: Injection[] = this._fallback ? this._fallback.registeredInjections(specifier) : [];\n    Array.prototype.push.apply(injections, this._registeredInjections[type]);\n    Array.prototype.push.apply(injections, this._registeredInjections[specifier]);\n    return injections;\n  }\n}\n","import { RegistrationOptions } from './registry';\nimport { Factory } from './factory';\n\n// TODO - use symbol\nexport const OWNER = '__owner__';\n\nexport function getOwner(object: Object): Owner {\n  return object[OWNER];\n}\n\nexport function setOwner(object: Object, owner: Owner): void {\n  object[OWNER] = owner;\n}\n\nexport interface Owner {\n  identify(specifier: string, referrer?: string): string;\n\n  factoryFor(specifier: string, referrer?: string): Factory<any>;\n  \n  lookup(specifier: string, referrer?: string): any;\n}\n","// There is a small whitelist of namespaced attributes specially\n// enumerated in\n// https://www.w3.org/TR/html/syntax.html#attributes-0\n//\n// > When a foreign element has one of the namespaced attributes given by\n// > the local name and namespace of the first and second cells of a row\n// > from the following table, it must be written using the name given by\n// > the third cell from the same row.\n//\n// In all other cases, colons are interpreted as a regular character\n// with no special meaning:\n//\n// > No other namespaced attribute can be expressed in the HTML syntax.\nconst XLINK = 'http://www.w3.org/1999/xlink';\nconst XML = 'http://www.w3.org/XML/1998/namespace';\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\nconst WHITELIST = {\n    'xlink:actuate': XLINK,\n    'xlink:arcrole': XLINK,\n    'xlink:href': XLINK,\n    'xlink:role': XLINK,\n    'xlink:show': XLINK,\n    'xlink:title': XLINK,\n    'xlink:type': XLINK,\n    'xml:base': XML,\n    'xml:lang': XML,\n    'xml:space': XML,\n    'xmlns': XMLNS,\n    'xmlns:xlink': XMLNS\n};\nexport function getAttrNamespace(attrName) {\n    return WHITELIST[attrName] || null;\n}","export function unwrap(val) {\n    if (val === null || val === undefined) throw new Error(`Expected value to be present`);\n    return val;\n}\nexport function expect(val, message) {\n    if (val === null || val === undefined) throw new Error(message);\n    return val;\n}\nexport function unreachable() {\n    return new Error('unreachable');\n}","// import Logger from './logger';\n// let alreadyWarned = false;\n// import Logger from './logger';\nexport function debugAssert(test, msg) {\n    // if (!alreadyWarned) {\n    //   alreadyWarned = true;\n    //   Logger.warn(\"Don't leave debug assertions on in public builds\");\n    // }\n    if (!test) {\n        throw new Error(msg || \"assertion failure\");\n    }\n}\nexport function prodAssert() {}\nexport default debugAssert;","export var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    LogLevel[LogLevel[\"Warn\"] = 2] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n})(LogLevel || (LogLevel = {}));\nclass NullConsole {\n    log(_message) {}\n    warn(_message) {}\n    error(_message) {}\n    trace() {}\n}\nlet ALWAYS;\nexport class Logger {\n    constructor({ console, level }) {\n        this.f = ALWAYS;\n        this.force = ALWAYS;\n        this.console = console;\n        this.level = level;\n    }\n    skipped(level) {\n        return level < this.level;\n    }\n    trace(message, { stackTrace = false } = {}) {\n        if (this.skipped(LogLevel.Trace)) return;\n        this.console.log(message);\n        if (stackTrace) this.console.trace();\n    }\n    debug(message, { stackTrace = false } = {}) {\n        if (this.skipped(LogLevel.Debug)) return;\n        this.console.log(message);\n        if (stackTrace) this.console.trace();\n    }\n    warn(message, { stackTrace = false } = {}) {\n        if (this.skipped(LogLevel.Warn)) return;\n        this.console.warn(message);\n        if (stackTrace) this.console.trace();\n    }\n    error(message) {\n        if (this.skipped(LogLevel.Error)) return;\n        this.console.error(message);\n    }\n}\nlet _console = typeof console === 'undefined' ? new NullConsole() : console;\nALWAYS = new Logger({ console: _console, level: LogLevel.Trace });\nconst LOG_LEVEL = LogLevel.Debug;\nexport default new Logger({ console: _console, level: LOG_LEVEL });","const { keys: objKeys } = Object;\nexport function assign(obj) {\n    for (let i = 1; i < arguments.length; i++) {\n        let assignment = arguments[i];\n        if (assignment === null || typeof assignment !== 'object') continue;\n        let keys = objKeys(assignment);\n        for (let j = 0; j < keys.length; j++) {\n            let key = keys[j];\n            obj[key] = assignment[key];\n        }\n    }\n    return obj;\n}\nexport function fillNulls(count) {\n    let arr = new Array(count);\n    for (let i = 0; i < count; i++) {\n        arr[i] = null;\n    }\n    return arr;\n}","let GUID = 0;\nexport function initializeGuid(object) {\n    return object._guid = ++GUID;\n}\nexport function ensureGuid(object) {\n    return object._guid || initializeGuid(object);\n}","import { ensureGuid } from './guid';\nlet proto = Object.create(null, {\n    // without this, we will always still end up with (new\n    // EmptyObject()).constructor === Object\n    constructor: {\n        value: undefined,\n        enumerable: false,\n        writable: true\n    }\n});\nfunction EmptyObject() {}\nEmptyObject.prototype = proto;\nexport function dict() {\n    // let d = Object.create(null);\n    // d.x = 1;\n    // delete d.x;\n    // return d;\n    return new EmptyObject();\n}\nexport class DictSet {\n    constructor() {\n        this.dict = dict();\n    }\n    add(obj) {\n        if (typeof obj === 'string') this.dict[obj] = obj;else this.dict[ensureGuid(obj)] = obj;\n        return this;\n    }\n    delete(obj) {\n        if (typeof obj === 'string') delete this.dict[obj];else if (obj._guid) delete this.dict[obj._guid];\n    }\n    forEach(callback) {\n        let { dict } = this;\n        let dictKeys = Object.keys(dict);\n        for (let i = 0; dictKeys.length; i++) {\n            callback(dict[dictKeys[i]]);\n        }\n    }\n    toArray() {\n        return Object.keys(this.dict);\n    }\n}\nexport class Stack {\n    constructor() {\n        this.stack = [];\n        this.current = null;\n    }\n    toArray() {\n        return this.stack;\n    }\n    push(item) {\n        this.current = item;\n        this.stack.push(item);\n    }\n    pop() {\n        let item = this.stack.pop();\n        let len = this.stack.length;\n        this.current = len === 0 ? null : this.stack[len - 1];\n        return item === undefined ? null : item;\n    }\n    isEmpty() {\n        return this.stack.length === 0;\n    }\n}","export class ListNode {\n    constructor(value) {\n        this.next = null;\n        this.prev = null;\n        this.value = value;\n    }\n}\nexport class LinkedList {\n    constructor() {\n        this.clear();\n    }\n    static fromSlice(slice) {\n        let list = new LinkedList();\n        slice.forEachNode(n => list.append(n.clone()));\n        return list;\n    }\n    head() {\n        return this._head;\n    }\n    tail() {\n        return this._tail;\n    }\n    clear() {\n        this._head = this._tail = null;\n    }\n    isEmpty() {\n        return this._head === null;\n    }\n    toArray() {\n        let out = [];\n        this.forEachNode(n => out.push(n));\n        return out;\n    }\n    splice(start, end, reference) {\n        let before;\n        if (reference === null) {\n            before = this._tail;\n            this._tail = end;\n        } else {\n            before = reference.prev;\n            end.next = reference;\n            reference.prev = end;\n        }\n        if (before) {\n            before.next = start;\n            start.prev = before;\n        }\n    }\n    nextNode(node) {\n        return node.next;\n    }\n    prevNode(node) {\n        return node.prev;\n    }\n    forEachNode(callback) {\n        let node = this._head;\n        while (node !== null) {\n            callback(node);\n            node = node.next;\n        }\n    }\n    contains(needle) {\n        let node = this._head;\n        while (node !== null) {\n            if (node === needle) return true;\n            node = node.next;\n        }\n        return false;\n    }\n    insertBefore(node, reference = null) {\n        if (reference === null) return this.append(node);\n        if (reference.prev) reference.prev.next = node;else this._head = node;\n        node.prev = reference.prev;\n        node.next = reference;\n        reference.prev = node;\n        return node;\n    }\n    append(node) {\n        let tail = this._tail;\n        if (tail) {\n            tail.next = node;\n            node.prev = tail;\n            node.next = null;\n        } else {\n            this._head = node;\n        }\n        return this._tail = node;\n    }\n    pop() {\n        if (this._tail) return this.remove(this._tail);\n        return null;\n    }\n    prepend(node) {\n        if (this._head) return this.insertBefore(node, this._head);\n        return this._head = this._tail = node;\n    }\n    remove(node) {\n        if (node.prev) node.prev.next = node.next;else this._head = node.next;\n        if (node.next) node.next.prev = node.prev;else this._tail = node.prev;\n        return node;\n    }\n}\nexport class ListSlice {\n    constructor(head, tail) {\n        this._head = head;\n        this._tail = tail;\n    }\n    static toList(slice) {\n        let list = new LinkedList();\n        slice.forEachNode(n => list.append(n.clone()));\n        return list;\n    }\n    forEachNode(callback) {\n        let node = this._head;\n        while (node !== null) {\n            callback(node);\n            node = this.nextNode(node);\n        }\n    }\n    contains(needle) {\n        let node = this._head;\n        while (node !== null) {\n            if (node === needle) return true;\n            node = node.next;\n        }\n        return false;\n    }\n    head() {\n        return this._head;\n    }\n    tail() {\n        return this._tail;\n    }\n    toArray() {\n        let out = [];\n        this.forEachNode(n => out.push(n));\n        return out;\n    }\n    nextNode(node) {\n        if (node === this._tail) return null;\n        return node.next;\n    }\n    prevNode(node) {\n        if (node === this._head) return null;\n        return node.prev;\n    }\n    isEmpty() {\n        return false;\n    }\n}\nexport const EMPTY_SLICE = new ListSlice(null, null);","export const HAS_NATIVE_WEAKMAP = function () {\n    // detect if `WeakMap` is even present\n    let hasWeakMap = typeof WeakMap === 'function';\n    if (!hasWeakMap) {\n        return false;\n    }\n    let instance = new WeakMap();\n    // use `Object`'s `.toString` directly to prevent us from detecting\n    // polyfills as native weakmaps\n    return Object.prototype.toString.call(instance) === '[object WeakMap]';\n}();","import { HAS_NATIVE_WEAKMAP } from './weakmap';\nconst HAS_TYPED_ARRAYS = typeof Uint32Array !== 'undefined';\nlet A;\nif (HAS_TYPED_ARRAYS) {\n    A = Uint32Array;\n} else {\n    A = Array;\n}\nexport default A;\nexport const EMPTY_ARRAY = HAS_NATIVE_WEAKMAP ? Object.freeze([]) : [];","import { initializeGuid, fillNulls, unreachable } from '@glimmer/util';\n\n/**\n * Registers\n *\n * For the most part, these follows MIPS naming conventions, however the\n * register numbers are different.\n */\nexport var Register;\n(function (Register) {\n    // $0 or $pc (program counter): pointer into `program` for the next insturction; -1 means exit\n    Register[Register[\"pc\"] = 0] = \"pc\";\n    // $1 or $ra (return address): pointer into `program` for the return\n    Register[Register[\"ra\"] = 1] = \"ra\";\n    // $2 or $fp (frame pointer): pointer into the `evalStack` for the base of the stack\n    Register[Register[\"fp\"] = 2] = \"fp\";\n    // $3 or $sp (stack pointer): pointer into the `evalStack` for the top of the stack\n    Register[Register[\"sp\"] = 3] = \"sp\";\n    // $4-$5 or $s0-$s1 (saved): callee saved general-purpose registers\n    Register[Register[\"s0\"] = 4] = \"s0\";\n    Register[Register[\"s1\"] = 5] = \"s1\";\n    // $6-$7 or $t0-$t1 (temporaries): caller saved general-purpose registers\n    Register[Register[\"t0\"] = 6] = \"t0\";\n    Register[Register[\"t1\"] = 7] = \"t1\";\n})(Register || (Register = {}));\nexport function debugSlice(env, start, end) {\n    if (!false && false) {\n        /* tslint:disable:no-console */\n        let { program, constants } = env;\n        // console is not available in IE9\n        if (typeof console === 'undefined') {\n            return;\n        }\n        // IE10 does not have `console.group`\n        if (typeof console.group !== 'function') {\n            return;\n        }\n        console.group(`%c${start}:${end}`, 'color: #999');\n        for (let i = start; i <= end; i += 4) {\n            let { type, op1, op2, op3 } = program.opcode(i);\n            let [name, params] = debug(constants, type, op1, op2, op3);\n            console.log(`${i}. ${logOpcode(name, params)}`);\n        }\n        console.groupEnd();\n        /* tslint:enable:no-console */\n    }\n}\nfunction logOpcode(type, params) {\n    if (!false && false) {\n        let out = type;\n        if (params) {\n            let args = Object.keys(params).map(p => ` ${p}=${json(params[p])}`).join('');\n            out += args;\n        }\n        return `(${out})`;\n    }\n}\nfunction json(param) {\n    if (typeof param === 'function') {\n        return '<function>';\n    }\n    let string;\n    try {\n        string = JSON.stringify(param);\n    } catch (e) {\n        return '<cannot generate JSON>';\n    }\n    if (string === undefined) {\n        return 'undefined';\n    }\n    let debug = JSON.parse(string);\n    if (typeof debug === 'object' && debug !== null && debug.GlimmerDebug !== undefined) {\n        return debug.GlimmerDebug;\n    }\n    return string;\n}\nfunction debug(c, op, op1, op2, op3) {\n    if (!false && false) {\n        switch (op) {\n            case 0 /* Bug */:\n                throw unreachable();\n            case 1 /* Helper */:\n                return ['Helper', { helper: c.getFunction(op1) }];\n            case 2 /* Function */:\n                return ['Function', { function: c.getFunction(op1) }];\n            case 4 /* SetVariable */:\n                return ['SetVariable', { symbol: op1 }];\n            case 5 /* GetVariable */:\n                return ['GetVariable', { symbol: op1 }];\n            case 6 /* GetProperty */:\n                return ['GetProperty', { key: c.getString(op1) }];\n            case 7 /* PushBlock */:\n                return ['PushBlock', { block: c.getBlock(op1) }];\n            case 8 /* GetBlock */:\n                return ['GetBlock', { symbol: op1 }];\n            case 9 /* HasBlock */:\n                return ['HasBlock', { block: op1 }];\n            case 10 /* HasBlockParams */:\n                return ['HasBlockParams', { block: op1 }];\n            case 11 /* Concat */:\n                return ['Concat', { size: op1 }];\n            case 12 /* Immediate */:\n                return ['Immediate', { value: op1 }];\n            case 13 /* Constant */:\n                return ['Constant', { value: c.getOther(op1) }];\n            case 14 /* PrimitiveReference */:\n                return ['PrimitiveReference', { primitive: op1 }];\n            case 15 /* Dup */:\n                return ['Dup', { register: Register[op1], offset: op2 }];\n            case 16 /* Pop */:\n                return ['Pop', { count: op1 }];\n            case 17 /* Load */:\n                return ['Load', { register: Register[op1] }];\n            case 18 /* Fetch */:\n                return ['Fetch', { register: Register[op1] }];\n            /// PRELUDE & EXIT\n            case 19 /* RootScope */:\n                return ['RootScope', { symbols: op1, bindCallerScope: !!op2 }];\n            case 20 /* ChildScope */:\n                return ['ChildScope', {}];\n            case 21 /* PopScope */:\n                return ['PopScope', {}];\n            case 22 /* Return */:\n                return ['Return', {}];\n            /// HTML\n            case 23 /* Text */:\n                return ['Text', { text: c.getString(op1) }];\n            case 24 /* Comment */:\n                return ['Comment', { comment: c.getString(op1) }];\n            case 25 /* DynamicContent */:\n                return ['DynamicContent', { value: c.getOther(op1) }];\n            case 26 /* OpenElement */:\n                return ['OpenElement', { tag: c.getString(op1) }];\n            case 27 /* OpenElementWithOperations */:\n                return ['OpenElementWithOperations', { tag: c.getString(op1) }];\n            case 28 /* OpenDynamicElement */:\n                return ['OpenDynamicElement', {}];\n            case 29 /* StaticAttr */:\n                return ['StaticAttr', { name: c.getString(op1), value: c.getString(op2), namespace: op3 ? c.getString(op3) : null }];\n            case 30 /* DynamicAttr */:\n                return ['DynamicAttr', { name: c.getString(op1), trusting: !!op2 }];\n            case 31 /* DynamicAttrNS */:\n                return ['DynamicAttrNS', { name: c.getString(op1), ns: c.getString(op2), trusting: !!op2 }];\n            case 32 /* FlushElement */:\n                return ['FlushElement', {}];\n            case 33 /* CloseElement */:\n                return ['CloseElement', {}];\n            /// MODIFIER\n            case 34 /* Modifier */:\n                return ['Modifier', {}];\n            /// WORMHOLE\n            case 35 /* PushRemoteElement */:\n                return ['PushRemoteElement', {}];\n            case 36 /* PopRemoteElement */:\n                return ['PopRemoteElement', {}];\n            /// DYNAMIC SCOPE\n            case 37 /* BindDynamicScope */:\n                return ['BindDynamicScope', {}];\n            case 38 /* PushDynamicScope */:\n                return ['PushDynamicScope', {}];\n            case 39 /* PopDynamicScope */:\n                return ['PopDynamicScope', {}];\n            /// VM\n            case 40 /* CompileDynamicBlock */:\n                return ['CompileDynamicBlock', {}];\n            case 41 /* InvokeStatic */:\n                return ['InvokeStatic', { block: c.getBlock(op1) }];\n            case 42 /* InvokeDynamic */:\n                return ['InvokeDynamic', { invoker: c.getOther(op1) }];\n            case 43 /* Jump */:\n                return ['Jump', { to: op1 }];\n            case 44 /* JumpIf */:\n                return ['JumpIf', { to: op1 }];\n            case 45 /* JumpUnless */:\n                return ['JumpUnless', { to: op1 }];\n            case 46 /* PushFrame */:\n                return ['PushFrame', {}];\n            case 47 /* PopFrame */:\n                return ['PopFrame', {}];\n            case 48 /* Enter */:\n                return ['Enter', { args: op1 }];\n            case 49 /* Exit */:\n                return ['Exit', {}];\n            case 50 /* Test */:\n                return ['ToBoolean', {}];\n            /// LISTS\n            case 51 /* EnterList */:\n                return ['EnterList', { start: op1 }];\n            case 52 /* ExitList */:\n                return ['ExitList', {}];\n            case 53 /* PutIterator */:\n                return ['PutIterator', {}];\n            case 54 /* Iterate */:\n                return ['Iterate', { end: op1 }];\n            /// COMPONENTS\n            case 55 /* PushComponentManager */:\n                return ['PushComponentManager', { definition: c.getOther(op1) }];\n            case 56 /* PushDynamicComponentManager */:\n                return ['PushDynamicComponentManager', {}];\n            case 57 /* PushArgs */:\n                return ['PushArgs', { synthetic: !!op2 }];\n            case 58 /* PrepareArgs */:\n                return ['PrepareArgs', { state: Register[op1] }];\n            case 59 /* CreateComponent */:\n                return ['CreateComponent', { flags: op1, state: Register[op2] }];\n            case 60 /* RegisterComponentDestructor */:\n                return ['RegisterComponentDestructor', {}];\n            case 61 /* PushComponentOperations */:\n                return ['PushComponentOperations', {}];\n            case 62 /* GetComponentSelf */:\n                return ['GetComponentSelf', { state: Register[op1] }];\n            case 63 /* GetComponentLayout */:\n                return ['GetComponentLayout', { state: Register[op1] }];\n            case 64 /* BeginComponentTransaction */:\n                return ['BeginComponentTransaction', {}];\n            case 65 /* CommitComponentTransaction */:\n                return ['CommitComponentTransaction', {}];\n            case 66 /* DidCreateElement */:\n                return ['DidCreateElement', { state: Register[op1] }];\n            case 67 /* DidRenderLayout */:\n                return ['DidRenderLayout', {}];\n            /// PARTIALS\n            case 68 /* GetPartialTemplate */:\n                return ['CompilePartial', {}];\n            case 69 /* ResolveMaybeLocal */:\n                return ['ResolveMaybeLocal', { name: c.getString(op1) }];\n            /// DEBUGGER\n            case 70 /* Debugger */:\n                return ['Debugger', { symbols: c.getOther(op1), evalInfo: c.getArray(op2) }];\n            /// STATEMENTS\n            case 71 /* Size */:\n                throw unreachable();\n        }\n        throw unreachable();\n    }\n    return ['', {}];\n}\nexport class AppendOpcodes {\n    constructor() {\n        this.evaluateOpcode = fillNulls(71 /* Size */).slice();\n    }\n    add(name, evaluate) {\n        this.evaluateOpcode[name] = evaluate;\n    }\n    evaluate(vm, opcode, type) {\n        let func = this.evaluateOpcode[type];\n        if (!false && false) {\n            /* tslint:disable */\n            let [name, params] = debug(vm.constants, opcode.type, opcode.op1, opcode.op2, opcode.op3);\n            console.log(`${vm['pc'] - 4}. ${logOpcode(name, params)}`);\n            // console.log(...debug(vm.constants, type, opcode.op1, opcode.op2, opcode.op3));\n            /* tslint:enable */\n        }\n        func(vm, opcode);\n        if (!false && false) {\n            /* tslint:disable */\n            console.log('%c -> pc: %d, ra: %d, fp: %d, sp: %d, s0: %O, s1: %O, t0: %O, t1: %O', 'color: orange', vm['pc'], vm['ra'], vm['fp'], vm['sp'], vm['s0'], vm['s1'], vm['t0'], vm['t1']);\n            console.log('%c -> eval stack', 'color: red', vm.stack.toArray());\n            console.log('%c -> scope', 'color: green', vm.scope()['slots'].map(s => s && s['value'] ? s['value']() : s));\n            console.log('%c -> elements', 'color: blue', vm.elements()['elementStack'].toArray());\n            /* tslint:enable */\n        }\n    }\n}\nexport const APPEND_OPCODES = new AppendOpcodes();\nexport class AbstractOpcode {\n    constructor() {\n        initializeGuid(this);\n    }\n    toJSON() {\n        return { guid: this._guid, type: this.type };\n    }\n}\nexport class UpdatingOpcode extends AbstractOpcode {\n    constructor() {\n        super(...arguments);\n        this.next = null;\n        this.prev = null;\n    }\n}\nexport function inspect(opcodes) {\n    let buffer = [];\n    opcodes.forEach((opcode, i) => {\n        _inspect(opcode.toJSON(), buffer, 0, i);\n    });\n    return buffer.join('');\n}\nfunction _inspect(opcode, buffer, level, index) {\n    let indentation = [];\n    for (let i = 0; i < level; i++) {\n        indentation.push('  ');\n    }\n    buffer.push(...indentation);\n    buffer.push(`${index}. ${opcode.type}`);\n    if (opcode.args || opcode.details) {\n        buffer.push('(');\n        if (opcode.args) {\n            buffer.push(opcode.args.join(', '));\n        }\n        if (opcode.details) {\n            let keys = Object.keys(opcode.details);\n            if (keys.length) {\n                if (opcode.args && opcode.args.length) {\n                    buffer.push(', ');\n                }\n                buffer.push(keys.map(key => `${key}=${opcode.details && opcode.details[key]}`).join(', '));\n            }\n        }\n        buffer.push(')');\n    }\n    buffer.push('\\n');\n    if (opcode.children && opcode.children.length) {\n        for (let i = 0; i < opcode.children.length; i++) {\n            _inspect(opcode.children[i], buffer, level + 1, i);\n        }\n    }\n}","export const CONSTANT = 0;\nexport const INITIAL = 1;\nexport const VOLATILE = NaN;\nexport class RevisionTag {\n    validate(snapshot) {\n        return this.value() === snapshot;\n    }\n}\nRevisionTag.id = 0;\nconst VALUE = [];\nconst VALIDATE = [];\nexport class TagWrapper {\n    constructor(type, inner) {\n        this.type = type;\n        this.inner = inner;\n    }\n    value() {\n        let func = VALUE[this.type];\n        return func(this.inner);\n    }\n    validate(snapshot) {\n        let func = VALIDATE[this.type];\n        return func(this.inner, snapshot);\n    }\n}\nfunction register(Type) {\n    let type = VALUE.length;\n    VALUE.push(tag => tag.value());\n    VALIDATE.push((tag, snapshot) => tag.validate(snapshot));\n    Type.id = type;\n}\n///\n// CONSTANT: 0\nVALUE.push(() => CONSTANT);\nVALIDATE.push((_tag, snapshot) => snapshot === CONSTANT);\nexport const CONSTANT_TAG = new TagWrapper(0, null);\n// VOLATILE: 1\nVALUE.push(() => VOLATILE);\nVALIDATE.push((_tag, snapshot) => snapshot === VOLATILE);\nexport const VOLATILE_TAG = new TagWrapper(1, null);\n// CURRENT: 2\nVALUE.push(() => $REVISION);\nVALIDATE.push((_tag, snapshot) => snapshot === $REVISION);\nexport const CURRENT_TAG = new TagWrapper(2, null);\n///\nlet $REVISION = INITIAL;\nexport class DirtyableTag extends RevisionTag {\n    static create(revision = $REVISION) {\n        return new TagWrapper(this.id, new DirtyableTag(revision));\n    }\n    constructor(revision = $REVISION) {\n        super();\n        this.revision = revision;\n    }\n    value() {\n        return this.revision;\n    }\n    dirty() {\n        this.revision = ++$REVISION;\n    }\n}\nregister(DirtyableTag);\nexport function combineTagged(tagged) {\n    let optimized = [];\n    for (let i = 0, l = tagged.length; i < l; i++) {\n        let tag = tagged[i].tag;\n        if (tag === VOLATILE_TAG) return VOLATILE_TAG;\n        if (tag === CONSTANT_TAG) continue;\n        optimized.push(tag);\n    }\n    return _combine(optimized);\n}\nexport function combineSlice(slice) {\n    let optimized = [];\n    let node = slice.head();\n    while (node !== null) {\n        let tag = node.tag;\n        if (tag === VOLATILE_TAG) return VOLATILE_TAG;\n        if (tag !== CONSTANT_TAG) optimized.push(tag);\n        node = slice.nextNode(node);\n    }\n    return _combine(optimized);\n}\nexport function combine(tags) {\n    let optimized = [];\n    for (let i = 0, l = tags.length; i < l; i++) {\n        let tag = tags[i];\n        if (tag === VOLATILE_TAG) return VOLATILE_TAG;\n        if (tag === CONSTANT_TAG) continue;\n        optimized.push(tag);\n    }\n    return _combine(optimized);\n}\nfunction _combine(tags) {\n    switch (tags.length) {\n        case 0:\n            return CONSTANT_TAG;\n        case 1:\n            return tags[0];\n        case 2:\n            return TagsPair.create(tags[0], tags[1]);\n        default:\n            return TagsCombinator.create(tags);\n    }\n    ;\n}\nexport class CachedTag extends RevisionTag {\n    constructor() {\n        super(...arguments);\n        this.lastChecked = null;\n        this.lastValue = null;\n    }\n    value() {\n        let { lastChecked, lastValue } = this;\n        if (lastChecked !== $REVISION) {\n            this.lastChecked = $REVISION;\n            this.lastValue = lastValue = this.compute();\n        }\n        return this.lastValue;\n    }\n    invalidate() {\n        this.lastChecked = null;\n    }\n}\nclass TagsPair extends CachedTag {\n    static create(first, second) {\n        return new TagWrapper(this.id, new TagsPair(first, second));\n    }\n    constructor(first, second) {\n        super();\n        this.first = first;\n        this.second = second;\n    }\n    compute() {\n        return Math.max(this.first.value(), this.second.value());\n    }\n}\nregister(TagsPair);\nclass TagsCombinator extends CachedTag {\n    static create(tags) {\n        return new TagWrapper(this.id, new TagsCombinator(tags));\n    }\n    constructor(tags) {\n        super();\n        this.tags = tags;\n    }\n    compute() {\n        let { tags } = this;\n        let max = -1;\n        for (let i = 0; i < tags.length; i++) {\n            let value = tags[i].value();\n            max = Math.max(value, max);\n        }\n        return max;\n    }\n}\nregister(TagsCombinator);\nexport class UpdatableTag extends CachedTag {\n    static create(tag) {\n        return new TagWrapper(this.id, new UpdatableTag(tag));\n    }\n    constructor(tag) {\n        super();\n        this.tag = tag;\n        this.lastUpdated = INITIAL;\n    }\n    compute() {\n        return Math.max(this.lastUpdated, this.tag.value());\n    }\n    update(tag) {\n        if (tag !== this.tag) {\n            this.tag = tag;\n            this.lastUpdated = $REVISION;\n            this.invalidate();\n        }\n    }\n}\nregister(UpdatableTag);\nexport class CachedReference {\n    constructor() {\n        this.lastRevision = null;\n        this.lastValue = null;\n    }\n    value() {\n        let { tag, lastRevision, lastValue } = this;\n        if (!lastRevision || !tag.validate(lastRevision)) {\n            lastValue = this.lastValue = this.compute();\n            this.lastRevision = tag.value();\n        }\n        return lastValue;\n    }\n    invalidate() {\n        this.lastRevision = null;\n    }\n}\nclass MapperReference extends CachedReference {\n    constructor(reference, mapper) {\n        super();\n        this.tag = reference.tag;\n        this.reference = reference;\n        this.mapper = mapper;\n    }\n    compute() {\n        let { reference, mapper } = this;\n        return mapper(reference.value());\n    }\n}\nexport function map(reference, mapper) {\n    return new MapperReference(reference, mapper);\n}\n//////////\nexport class ReferenceCache {\n    constructor(reference) {\n        this.lastValue = null;\n        this.lastRevision = null;\n        this.initialized = false;\n        this.tag = reference.tag;\n        this.reference = reference;\n    }\n    peek() {\n        if (!this.initialized) {\n            return this.initialize();\n        }\n        return this.lastValue;\n    }\n    revalidate() {\n        if (!this.initialized) {\n            return this.initialize();\n        }\n        let { reference, lastRevision } = this;\n        let tag = reference.tag;\n        if (tag.validate(lastRevision)) return NOT_MODIFIED;\n        this.lastRevision = tag.value();\n        let { lastValue } = this;\n        let value = reference.value();\n        if (value === lastValue) return NOT_MODIFIED;\n        this.lastValue = value;\n        return value;\n    }\n    initialize() {\n        let { reference } = this;\n        let value = this.lastValue = reference.value();\n        this.lastRevision = reference.tag.value();\n        this.initialized = true;\n        return value;\n    }\n}\nconst NOT_MODIFIED = \"adb3b78e-3d22-4e4b-877a-6317c2c5c145\";\nexport function isModified(value) {\n    return value !== NOT_MODIFIED;\n}","import { CONSTANT_TAG } from './validators';\nexport class ConstReference {\n    constructor(inner) {\n        this.inner = inner;\n        this.tag = CONSTANT_TAG;\n    }\n    value() {\n        return this.inner;\n    }\n}\nexport function isConst(reference) {\n    return reference.tag === CONSTANT_TAG;\n}","import { LinkedList, ListNode, dict, expect } from '@glimmer/util';\nexport class ListItem extends ListNode {\n    constructor(iterable, result) {\n        super(iterable.valueReferenceFor(result));\n        this.retained = false;\n        this.seen = false;\n        this.key = result.key;\n        this.iterable = iterable;\n        this.memo = iterable.memoReferenceFor(result);\n    }\n    update(item) {\n        this.retained = true;\n        this.iterable.updateValueReference(this.value, item);\n        this.iterable.updateMemoReference(this.memo, item);\n    }\n    shouldRemove() {\n        return !this.retained;\n    }\n    reset() {\n        this.retained = false;\n        this.seen = false;\n    }\n}\nexport class IterationArtifacts {\n    constructor(iterable) {\n        this.map = dict();\n        this.list = new LinkedList();\n        this.tag = iterable.tag;\n        this.iterable = iterable;\n    }\n    isEmpty() {\n        let iterator = this.iterator = this.iterable.iterate();\n        return iterator.isEmpty();\n    }\n    iterate() {\n        let iterator = this.iterator || this.iterable.iterate();\n        this.iterator = null;\n        return iterator;\n    }\n    has(key) {\n        return !!this.map[key];\n    }\n    get(key) {\n        return this.map[key];\n    }\n    wasSeen(key) {\n        let node = this.map[key];\n        return node && node.seen;\n    }\n    append(item) {\n        let { map, list, iterable } = this;\n        let node = map[item.key] = new ListItem(iterable, item);\n        list.append(node);\n        return node;\n    }\n    insertBefore(item, reference) {\n        let { map, list, iterable } = this;\n        let node = map[item.key] = new ListItem(iterable, item);\n        node.retained = true;\n        list.insertBefore(node, reference);\n        return node;\n    }\n    move(item, reference) {\n        let { list } = this;\n        item.retained = true;\n        list.remove(item);\n        list.insertBefore(item, reference);\n    }\n    remove(item) {\n        let { list } = this;\n        list.remove(item);\n        delete this.map[item.key];\n    }\n    nextNode(item) {\n        return this.list.nextNode(item);\n    }\n    head() {\n        return this.list.head();\n    }\n}\nexport class ReferenceIterator {\n    // if anyone needs to construct this object with something other than\n    // an iterable, let @wycats know.\n    constructor(iterable) {\n        this.iterator = null;\n        let artifacts = new IterationArtifacts(iterable);\n        this.artifacts = artifacts;\n    }\n    next() {\n        let { artifacts } = this;\n        let iterator = this.iterator = this.iterator || artifacts.iterate();\n        let item = iterator.next();\n        if (!item) return null;\n        return artifacts.append(item);\n    }\n}\nvar Phase;\n(function (Phase) {\n    Phase[Phase[\"Append\"] = 0] = \"Append\";\n    Phase[Phase[\"Prune\"] = 1] = \"Prune\";\n    Phase[Phase[\"Done\"] = 2] = \"Done\";\n})(Phase || (Phase = {}));\nexport class IteratorSynchronizer {\n    constructor({ target, artifacts }) {\n        this.target = target;\n        this.artifacts = artifacts;\n        this.iterator = artifacts.iterate();\n        this.current = artifacts.head();\n    }\n    sync() {\n        let phase = Phase.Append;\n        while (true) {\n            switch (phase) {\n                case Phase.Append:\n                    phase = this.nextAppend();\n                    break;\n                case Phase.Prune:\n                    phase = this.nextPrune();\n                    break;\n                case Phase.Done:\n                    this.nextDone();\n                    return;\n            }\n        }\n    }\n    advanceToKey(key) {\n        let { current, artifacts } = this;\n        let seek = current;\n        while (seek && seek.key !== key) {\n            seek.seen = true;\n            seek = artifacts.nextNode(seek);\n        }\n        this.current = seek && artifacts.nextNode(seek);\n    }\n    nextAppend() {\n        let { iterator, current, artifacts } = this;\n        let item = iterator.next();\n        if (item === null) {\n            return this.startPrune();\n        }\n        let { key } = item;\n        if (current && current.key === key) {\n            this.nextRetain(item);\n        } else if (artifacts.has(key)) {\n            this.nextMove(item);\n        } else {\n            this.nextInsert(item);\n        }\n        return Phase.Append;\n    }\n    nextRetain(item) {\n        let { artifacts, current } = this;\n        current = expect(current, 'BUG: current is empty');\n        current.update(item);\n        this.current = artifacts.nextNode(current);\n        this.target.retain(item.key, current.value, current.memo);\n    }\n    nextMove(item) {\n        let { current, artifacts, target } = this;\n        let { key } = item;\n        let found = artifacts.get(item.key);\n        found.update(item);\n        if (artifacts.wasSeen(item.key)) {\n            artifacts.move(found, current);\n            target.move(found.key, found.value, found.memo, current ? current.key : null);\n        } else {\n            this.advanceToKey(key);\n        }\n    }\n    nextInsert(item) {\n        let { artifacts, target, current } = this;\n        let node = artifacts.insertBefore(item, current);\n        target.insert(node.key, node.value, node.memo, current ? current.key : null);\n    }\n    startPrune() {\n        this.current = this.artifacts.head();\n        return Phase.Prune;\n    }\n    nextPrune() {\n        let { artifacts, target, current } = this;\n        if (current === null) {\n            return Phase.Done;\n        }\n        let node = current;\n        this.current = artifacts.nextNode(node);\n        if (node.shouldRemove()) {\n            artifacts.remove(node);\n            target.delete(node.key);\n        } else {\n            node.reset();\n        }\n        return Phase.Prune;\n    }\n    nextDone() {\n        this.target.done();\n    }\n}","import { ConstReference } from '@glimmer/reference';\nexport class PrimitiveReference extends ConstReference {\n    constructor(value) {\n        super(value);\n    }\n    static create(value) {\n        if (value === undefined) {\n            return UNDEFINED_REFERENCE;\n        } else if (value === null) {\n            return NULL_REFERENCE;\n        } else if (value === true) {\n            return TRUE_REFERENCE;\n        } else if (value === false) {\n            return FALSE_REFERENCE;\n        } else if (typeof value === 'number') {\n            return new ValueReference(value);\n        } else {\n            return new StringReference(value);\n        }\n    }\n    get(_key) {\n        return UNDEFINED_REFERENCE;\n    }\n}\nclass StringReference extends PrimitiveReference {\n    constructor() {\n        super(...arguments);\n        this.lengthReference = null;\n    }\n    get(key) {\n        if (key === 'length') {\n            let { lengthReference } = this;\n            if (lengthReference === null) {\n                lengthReference = this.lengthReference = new ValueReference(this.inner.length);\n            }\n            return lengthReference;\n        } else {\n            return super.get(key);\n        }\n    }\n}\nclass ValueReference extends PrimitiveReference {\n    constructor(value) {\n        super(value);\n    }\n}\nexport const UNDEFINED_REFERENCE = new ValueReference(undefined);\nexport const NULL_REFERENCE = new ValueReference(null);\nexport const TRUE_REFERENCE = new ValueReference(true);\nexport const FALSE_REFERENCE = new ValueReference(false);\nexport class ConditionalReference {\n    constructor(inner) {\n        this.inner = inner;\n        this.tag = inner.tag;\n    }\n    value() {\n        return this.toBool(this.inner.value());\n    }\n    toBool(value) {\n        return !!value;\n    }\n}","import { CachedReference, combineTagged } from '@glimmer/reference';\nexport class ConcatReference extends CachedReference {\n    constructor(parts) {\n        super();\n        this.parts = parts;\n        this.tag = combineTagged(parts);\n    }\n    compute() {\n        let parts = new Array();\n        for (let i = 0; i < this.parts.length; i++) {\n            let value = this.parts[i].value();\n            if (value !== null && value !== undefined) {\n                parts[i] = castToString(value);\n            }\n        }\n        if (parts.length > 0) {\n            return parts.join('');\n        }\n        return null;\n    }\n}\nfunction castToString(value) {\n    if (typeof value.toString !== 'function') {\n        return '';\n    }\n    return String(value);\n}","import { APPEND_OPCODES } from '../../opcodes';\nimport { FALSE_REFERENCE, TRUE_REFERENCE } from '../../references';\nimport { ConcatReference } from '../expressions/concat';\nAPPEND_OPCODES.add(1 /* Helper */, (vm, { op1: _helper }) => {\n    let stack = vm.stack;\n    let helper = vm.constants.getFunction(_helper);\n    let args = stack.pop();\n    let value = helper(vm, args);\n    args.clear();\n    vm.stack.push(value);\n});\nAPPEND_OPCODES.add(2 /* Function */, (vm, { op1: _function }) => {\n    let func = vm.constants.getFunction(_function);\n    vm.stack.push(func(vm));\n});\nAPPEND_OPCODES.add(5 /* GetVariable */, (vm, { op1: symbol }) => {\n    let expr = vm.referenceForSymbol(symbol);\n    vm.stack.push(expr);\n});\nAPPEND_OPCODES.add(4 /* SetVariable */, (vm, { op1: symbol }) => {\n    let expr = vm.stack.pop();\n    vm.scope().bindSymbol(symbol, expr);\n});\nAPPEND_OPCODES.add(69 /* ResolveMaybeLocal */, (vm, { op1: _name }) => {\n    let name = vm.constants.getString(_name);\n    let locals = vm.scope().getPartialMap();\n    let ref = locals[name];\n    if (ref === undefined) {\n        ref = vm.getSelf().get(name);\n    }\n    vm.stack.push(ref);\n});\nAPPEND_OPCODES.add(19 /* RootScope */, (vm, { op1: symbols, op2: bindCallerScope }) => {\n    vm.pushRootScope(symbols, !!bindCallerScope);\n});\nAPPEND_OPCODES.add(6 /* GetProperty */, (vm, { op1: _key }) => {\n    let key = vm.constants.getString(_key);\n    let expr = vm.stack.pop();\n    vm.stack.push(expr.get(key));\n});\nAPPEND_OPCODES.add(7 /* PushBlock */, (vm, { op1: _block }) => {\n    let block = _block ? vm.constants.getBlock(_block) : null;\n    vm.stack.push(block);\n});\nAPPEND_OPCODES.add(8 /* GetBlock */, (vm, { op1: _block }) => {\n    vm.stack.push(vm.scope().getBlock(_block));\n});\nAPPEND_OPCODES.add(9 /* HasBlock */, (vm, { op1: _block }) => {\n    let hasBlock = !!vm.scope().getBlock(_block);\n    vm.stack.push(hasBlock ? TRUE_REFERENCE : FALSE_REFERENCE);\n});\nAPPEND_OPCODES.add(10 /* HasBlockParams */, (vm, { op1: _block }) => {\n    let block = vm.scope().getBlock(_block);\n    let hasBlockParams = block && block.symbolTable.parameters.length;\n    vm.stack.push(hasBlockParams ? TRUE_REFERENCE : FALSE_REFERENCE);\n});\nAPPEND_OPCODES.add(11 /* Concat */, (vm, { op1: count }) => {\n    let out = [];\n    for (let i = count; i > 0; i--) {\n        out.push(vm.stack.pop());\n    }\n    vm.stack.push(new ConcatReference(out.reverse()));\n});","import { dict, EMPTY_ARRAY } from '@glimmer/util';\nimport { combineTagged } from '@glimmer/reference';\nimport { PrimitiveReference, UNDEFINED_REFERENCE } from '../references';\nexport class Arguments {\n    constructor() {\n        this.stack = null;\n        this.positional = new PositionalArguments();\n        this.named = new NamedArguments();\n    }\n    empty() {\n        this.setup(null, true);\n        return this;\n    }\n    setup(stack, synthetic) {\n        this.stack = stack;\n        let names = stack.fromTop(0);\n        let namedCount = names.length;\n        let positionalCount = stack.fromTop(namedCount + 1);\n        let start = positionalCount + namedCount + 2;\n        let positional = this.positional;\n        positional.setup(stack, start, positionalCount);\n        let named = this.named;\n        named.setup(stack, namedCount, names, synthetic);\n    }\n    get tag() {\n        return combineTagged([this.positional, this.named]);\n    }\n    get length() {\n        return this.positional.length + this.named.length;\n    }\n    at(pos) {\n        return this.positional.at(pos);\n    }\n    get(name) {\n        return this.named.get(name);\n    }\n    capture() {\n        return {\n            tag: this.tag,\n            length: this.length,\n            positional: this.positional.capture(),\n            named: this.named.capture()\n        };\n    }\n    clear() {\n        let { stack, length } = this;\n        stack.pop(length + 2);\n    }\n}\nclass PositionalArguments {\n    constructor() {\n        this.length = 0;\n        this.stack = null;\n        this.start = 0;\n        this._tag = null;\n        this._references = null;\n    }\n    setup(stack, start, length) {\n        this.stack = stack;\n        this.start = start;\n        this.length = length;\n        this._tag = null;\n        this._references = null;\n    }\n    get tag() {\n        let tag = this._tag;\n        if (!tag) {\n            tag = this._tag = combineTagged(this.references);\n        }\n        return tag;\n    }\n    at(position) {\n        let { start, length } = this;\n        if (position < 0 || position >= length) {\n            return UNDEFINED_REFERENCE;\n        }\n        // stack: pos1, pos2, pos3, named1, named2\n        // start: 4 (top - 4)\n        //\n        // at(0) === pos1 === top - start\n        // at(1) === pos2 === top - (start - 1)\n        // at(2) === pos3 === top - (start - 2)\n        let fromTop = start - position - 1;\n        return this.stack.fromTop(fromTop);\n    }\n    capture() {\n        return new CapturedPositionalArguments(this.tag, this.references);\n    }\n    get references() {\n        let references = this._references;\n        if (!references) {\n            let { length } = this;\n            references = this._references = new Array(length);\n            for (let i = 0; i < length; i++) {\n                references[i] = this.at(i);\n            }\n        }\n        return references;\n    }\n}\nclass CapturedPositionalArguments {\n    constructor(tag, references, length = references.length) {\n        this.tag = tag;\n        this.references = references;\n        this.length = length;\n    }\n    at(position) {\n        return this.references[position];\n    }\n    value() {\n        return this.references.map(this.valueOf);\n    }\n    get(name) {\n        let { references, length } = this;\n        if (name === 'length') {\n            return PrimitiveReference.create(length);\n        } else {\n            let idx = parseInt(name, 10);\n            if (idx < 0 || idx >= length) {\n                return UNDEFINED_REFERENCE;\n            } else {\n                return references[idx];\n            }\n        }\n    }\n    valueOf(reference) {\n        return reference.value();\n    }\n}\nclass NamedArguments {\n    constructor() {\n        this.length = 0;\n        this._tag = null;\n        this._references = null;\n        this._names = null;\n        this._realNames = EMPTY_ARRAY;\n    }\n    setup(stack, length, names, synthetic) {\n        this.stack = stack;\n        this.length = length;\n        this._tag = null;\n        this._references = null;\n        if (synthetic) {\n            this._names = names;\n            this._realNames = EMPTY_ARRAY;\n        } else {\n            this._names = null;\n            this._realNames = names;\n        }\n    }\n    get tag() {\n        return combineTagged(this.references);\n    }\n    get names() {\n        let names = this._names;\n        if (!names) {\n            names = this._names = this._realNames.map(this.sliceName);\n        }\n        return names;\n    }\n    has(name) {\n        return this.names.indexOf(name) !== -1;\n    }\n    get(name) {\n        let { names, length } = this;\n        let idx = names.indexOf(name);\n        if (idx === -1) {\n            return UNDEFINED_REFERENCE;\n        }\n        // stack: pos1, pos2, pos3, named1, named2\n        // start: 4 (top - 4)\n        // namedDict: { named1: 1, named2: 0 };\n        //\n        // get('named1') === named1 === top - (start - 1)\n        // get('named2') === named2 === top - start\n        let fromTop = length - idx;\n        return this.stack.fromTop(fromTop);\n    }\n    capture() {\n        return new CapturedNamedArguments(this.tag, this.names, this.references);\n    }\n    get references() {\n        let references = this._references;\n        if (!references) {\n            let { names, length } = this;\n            references = this._references = [];\n            for (let i = 0; i < length; i++) {\n                references[i] = this.get(names[i]);\n            }\n        }\n        return references;\n    }\n    sliceName(name) {\n        return name.slice(1);\n    }\n}\nclass CapturedNamedArguments {\n    constructor(tag, names, references) {\n        this.tag = tag;\n        this.names = names;\n        this.references = references;\n        this.length = names.length;\n        this._map = null;\n    }\n    get map() {\n        let map = this._map;\n        if (!map) {\n            let { names, references } = this;\n            map = this._map = dict();\n            for (let i = 0; i < names.length; i++) {\n                let name = names[i];\n                map[name] = references[i];\n            }\n        }\n        return map;\n    }\n    has(name) {\n        return this.names.indexOf(name) !== -1;\n    }\n    get(name) {\n        let { names, references } = this;\n        let idx = names.indexOf(name);\n        if (idx === -1) {\n            return UNDEFINED_REFERENCE;\n        } else {\n            return references[idx];\n        }\n    }\n    value() {\n        let { names, references } = this;\n        let out = dict();\n        for (let i = 0; i < names.length; i++) {\n            let name = names[i];\n            out[name] = references[i].value();\n        }\n        return out;\n    }\n}\nexport default new Arguments();","import { ConstReference } from '@glimmer/reference';\nimport { CONSTANT_TAG, isConst, isModified, ReferenceCache } from '@glimmer/reference';\nimport { initializeGuid } from '@glimmer/util';\nimport { APPEND_OPCODES, UpdatingOpcode } from '../../opcodes';\nimport { FALSE_REFERENCE, NULL_REFERENCE, PrimitiveReference, TRUE_REFERENCE, UNDEFINED_REFERENCE } from '../../references';\nAPPEND_OPCODES.add(20 /* ChildScope */, vm => vm.pushChildScope());\nAPPEND_OPCODES.add(21 /* PopScope */, vm => vm.popScope());\nAPPEND_OPCODES.add(38 /* PushDynamicScope */, vm => vm.pushDynamicScope());\nAPPEND_OPCODES.add(39 /* PopDynamicScope */, vm => vm.popDynamicScope());\nAPPEND_OPCODES.add(12 /* Immediate */, (vm, { op1: number }) => {\n    vm.stack.push(number);\n});\nAPPEND_OPCODES.add(13 /* Constant */, (vm, { op1: other }) => {\n    vm.stack.push(vm.constants.getOther(other));\n});\nAPPEND_OPCODES.add(14 /* PrimitiveReference */, (vm, { op1: primitive }) => {\n    let stack = vm.stack;\n    let flag = (primitive & 3 << 30) >>> 30;\n    let value = primitive & ~(3 << 30);\n    switch (flag) {\n        case 0:\n            stack.push(PrimitiveReference.create(value));\n            break;\n        case 1:\n            stack.push(PrimitiveReference.create(vm.constants.getString(value)));\n            break;\n        case 2:\n            switch (value) {\n                case 0:\n                    stack.push(FALSE_REFERENCE);\n                    break;\n                case 1:\n                    stack.push(TRUE_REFERENCE);\n                    break;\n                case 2:\n                    stack.push(NULL_REFERENCE);\n                    break;\n                case 3:\n                    stack.push(UNDEFINED_REFERENCE);\n                    break;\n            }\n            break;\n    }\n});\nAPPEND_OPCODES.add(15 /* Dup */, (vm, { op1: register, op2: offset }) => {\n    let position = vm.fetchValue(register) - offset;\n    vm.stack.dup(position);\n});\nAPPEND_OPCODES.add(16 /* Pop */, (vm, { op1: count }) => vm.stack.pop(count));\nAPPEND_OPCODES.add(17 /* Load */, (vm, { op1: register }) => vm.load(register));\nAPPEND_OPCODES.add(18 /* Fetch */, (vm, { op1: register }) => vm.fetch(register));\nAPPEND_OPCODES.add(37 /* BindDynamicScope */, (vm, { op1: _names }) => {\n    let names = vm.constants.getArray(_names);\n    vm.bindDynamicScope(names);\n});\nAPPEND_OPCODES.add(46 /* PushFrame */, vm => vm.pushFrame());\nAPPEND_OPCODES.add(47 /* PopFrame */, vm => vm.popFrame());\nAPPEND_OPCODES.add(48 /* Enter */, (vm, { op1: args }) => vm.enter(args));\nAPPEND_OPCODES.add(49 /* Exit */, vm => vm.exit());\nAPPEND_OPCODES.add(40 /* CompileDynamicBlock */, vm => {\n    let stack = vm.stack;\n    let block = stack.pop();\n    stack.push(block ? block.compileDynamic(vm.env) : null);\n});\nAPPEND_OPCODES.add(41 /* InvokeStatic */, (vm, { op1: _block }) => {\n    let block = vm.constants.getBlock(_block);\n    let compiled = block.compileStatic(vm.env);\n    vm.call(compiled.start);\n});\nAPPEND_OPCODES.add(42 /* InvokeDynamic */, (vm, { op1: _invoker }) => {\n    let invoker = vm.constants.getOther(_invoker);\n    let block = vm.stack.pop();\n    invoker.invoke(vm, block);\n});\nAPPEND_OPCODES.add(43 /* Jump */, (vm, { op1: target }) => vm.goto(target));\nAPPEND_OPCODES.add(44 /* JumpIf */, (vm, { op1: target }) => {\n    let reference = vm.stack.pop();\n    if (isConst(reference)) {\n        if (reference.value()) {\n            vm.goto(target);\n        }\n    } else {\n        let cache = new ReferenceCache(reference);\n        if (cache.peek()) {\n            vm.goto(target);\n        }\n        vm.updateWith(new Assert(cache));\n    }\n});\nAPPEND_OPCODES.add(45 /* JumpUnless */, (vm, { op1: target }) => {\n    let reference = vm.stack.pop();\n    if (isConst(reference)) {\n        if (!reference.value()) {\n            vm.goto(target);\n        }\n    } else {\n        let cache = new ReferenceCache(reference);\n        if (!cache.peek()) {\n            vm.goto(target);\n        }\n        vm.updateWith(new Assert(cache));\n    }\n});\nAPPEND_OPCODES.add(22 /* Return */, vm => vm.return());\nexport const ConstTest = function (ref, _env) {\n    return new ConstReference(!!ref.value());\n};\nexport const SimpleTest = function (ref, _env) {\n    return ref;\n};\nexport const EnvironmentTest = function (ref, env) {\n    return env.toConditionalReference(ref);\n};\nAPPEND_OPCODES.add(50 /* Test */, (vm, { op1: _func }) => {\n    let stack = vm.stack;\n    let operand = stack.pop();\n    let func = vm.constants.getFunction(_func);\n    stack.push(func(operand, vm.env));\n});\nexport class Assert extends UpdatingOpcode {\n    constructor(cache) {\n        super();\n        this.type = 'assert';\n        this.tag = cache.tag;\n        this.cache = cache;\n    }\n    evaluate(vm) {\n        let { cache } = this;\n        if (isModified(cache.revalidate())) {\n            vm.throw();\n        }\n    }\n    toJSON() {\n        let { type, _guid, cache } = this;\n        let expected;\n        try {\n            expected = JSON.stringify(cache.peek());\n        } catch (e) {\n            expected = String(cache.peek());\n        }\n        return {\n            args: [],\n            details: { expected },\n            guid: _guid,\n            type\n        };\n    }\n}\nexport class JumpIfNotModifiedOpcode extends UpdatingOpcode {\n    constructor(tag, target) {\n        super();\n        this.target = target;\n        this.type = 'jump-if-not-modified';\n        this.tag = tag;\n        this.lastRevision = tag.value();\n    }\n    evaluate(vm) {\n        let { tag, target, lastRevision } = this;\n        if (!vm.alwaysRevalidate && tag.validate(lastRevision)) {\n            vm.goto(target);\n        }\n    }\n    didModify() {\n        this.lastRevision = this.tag.value();\n    }\n    toJSON() {\n        return {\n            args: [JSON.stringify(this.target.inspect())],\n            guid: this._guid,\n            type: this.type\n        };\n    }\n}\nexport class DidModifyOpcode extends UpdatingOpcode {\n    constructor(target) {\n        super();\n        this.target = target;\n        this.type = 'did-modify';\n        this.tag = CONSTANT_TAG;\n    }\n    evaluate() {\n        this.target.didModify();\n    }\n}\nexport class LabelOpcode {\n    constructor(label) {\n        this.tag = CONSTANT_TAG;\n        this.type = 'label';\n        this.label = null;\n        this.prev = null;\n        this.next = null;\n        initializeGuid(this);\n        this.label = label;\n    }\n    evaluate() {}\n    inspect() {\n        return `${this.label} [${this._guid}]`;\n    }\n    toJSON() {\n        return {\n            args: [JSON.stringify(this.inspect())],\n            guid: this._guid,\n            type: this.type\n        };\n    }\n}","import { CachedReference, combineTagged, isConst as isConstReference, isModified, ReferenceCache } from '@glimmer/reference';\nimport { expect, unwrap } from '@glimmer/util';\nimport { APPEND_OPCODES, UpdatingOpcode } from '../../opcodes';\nimport { NULL_REFERENCE, PrimitiveReference } from '../../references';\nimport { Assert } from './vm';\nAPPEND_OPCODES.add(23 /* Text */, (vm, { op1: text }) => {\n    vm.elements().appendText(vm.constants.getString(text));\n});\nAPPEND_OPCODES.add(24 /* Comment */, (vm, { op1: text }) => {\n    vm.elements().appendComment(vm.constants.getString(text));\n});\nAPPEND_OPCODES.add(26 /* OpenElement */, (vm, { op1: tag }) => {\n    vm.elements().openElement(vm.constants.getString(tag));\n});\nAPPEND_OPCODES.add(27 /* OpenElementWithOperations */, (vm, { op1: tag }) => {\n    let tagName = vm.constants.getString(tag);\n    let operations = vm.stack.pop();\n    vm.elements().openElement(tagName, operations);\n});\nAPPEND_OPCODES.add(28 /* OpenDynamicElement */, vm => {\n    let operations = vm.stack.pop();\n    let tagName = vm.stack.pop().value();\n    vm.elements().openElement(tagName, operations);\n});\nAPPEND_OPCODES.add(35 /* PushRemoteElement */, vm => {\n    let elementRef = vm.stack.pop();\n    let nextSiblingRef = vm.stack.pop();\n    let element;\n    let nextSibling;\n    if (isConstReference(elementRef)) {\n        element = elementRef.value();\n    } else {\n        let cache = new ReferenceCache(elementRef);\n        element = cache.peek();\n        vm.updateWith(new Assert(cache));\n    }\n    if (isConstReference(nextSiblingRef)) {\n        nextSibling = nextSiblingRef.value();\n    } else {\n        let cache = new ReferenceCache(nextSiblingRef);\n        nextSibling = cache.peek();\n        vm.updateWith(new Assert(cache));\n    }\n    vm.elements().pushRemoteElement(element, nextSibling);\n});\nAPPEND_OPCODES.add(36 /* PopRemoteElement */, vm => vm.elements().popRemoteElement());\nclass ClassList {\n    constructor() {\n        this.list = null;\n        this.isConst = true;\n    }\n    append(reference) {\n        let { list, isConst } = this;\n        if (list === null) list = this.list = [];\n        list.push(reference);\n        this.isConst = isConst && isConstReference(reference);\n    }\n    toReference() {\n        let { list, isConst } = this;\n        if (!list) return NULL_REFERENCE;\n        if (isConst) return PrimitiveReference.create(toClassName(list));\n        return new ClassListReference(list);\n    }\n}\nclass ClassListReference extends CachedReference {\n    constructor(list) {\n        super();\n        this.list = [];\n        this.tag = combineTagged(list);\n        this.list = list;\n    }\n    compute() {\n        return toClassName(this.list);\n    }\n}\nfunction toClassName(list) {\n    let ret = [];\n    for (let i = 0; i < list.length; i++) {\n        let value = list[i].value();\n        if (value !== false && value !== null && value !== undefined) ret.push(value);\n    }\n    return ret.length === 0 ? null : ret.join(' ');\n}\nexport class SimpleElementOperations {\n    constructor(env) {\n        this.env = env;\n        this.opcodes = null;\n        this.classList = null;\n    }\n    addStaticAttribute(element, name, value) {\n        if (name === 'class') {\n            this.addClass(PrimitiveReference.create(value));\n        } else {\n            this.env.getAppendOperations().setAttribute(element, name, value);\n        }\n    }\n    addStaticAttributeNS(element, namespace, name, value) {\n        this.env.getAppendOperations().setAttribute(element, name, value, namespace);\n    }\n    addDynamicAttribute(element, name, reference, isTrusting) {\n        if (name === 'class') {\n            this.addClass(reference);\n        } else {\n            let attributeManager = this.env.attributeFor(element, name, isTrusting);\n            let attribute = new DynamicAttribute(element, attributeManager, name, reference);\n            this.addAttribute(attribute);\n        }\n    }\n    addDynamicAttributeNS(element, namespace, name, reference, isTrusting) {\n        let attributeManager = this.env.attributeFor(element, name, isTrusting, namespace);\n        let nsAttribute = new DynamicAttribute(element, attributeManager, name, reference, namespace);\n        this.addAttribute(nsAttribute);\n    }\n    flush(element, vm) {\n        let { env } = vm;\n        let { opcodes, classList } = this;\n        for (let i = 0; opcodes && i < opcodes.length; i++) {\n            vm.updateWith(opcodes[i]);\n        }\n        if (classList) {\n            let attributeManager = env.attributeFor(element, 'class', false);\n            let attribute = new DynamicAttribute(element, attributeManager, 'class', classList.toReference());\n            let opcode = attribute.flush(env);\n            if (opcode) {\n                vm.updateWith(opcode);\n            }\n        }\n        this.opcodes = null;\n        this.classList = null;\n    }\n    addClass(reference) {\n        let { classList } = this;\n        if (!classList) {\n            classList = this.classList = new ClassList();\n        }\n        classList.append(reference);\n    }\n    addAttribute(attribute) {\n        let opcode = attribute.flush(this.env);\n        if (opcode) {\n            let { opcodes } = this;\n            if (!opcodes) {\n                opcodes = this.opcodes = [];\n            }\n            opcodes.push(opcode);\n        }\n    }\n}\nexport class ComponentElementOperations {\n    constructor(env) {\n        this.env = env;\n        this.attributeNames = null;\n        this.attributes = null;\n        this.classList = null;\n    }\n    addStaticAttribute(element, name, value) {\n        if (name === 'class') {\n            this.addClass(PrimitiveReference.create(value));\n        } else if (this.shouldAddAttribute(name)) {\n            this.addAttribute(name, new StaticAttribute(element, name, value));\n        }\n    }\n    addStaticAttributeNS(element, namespace, name, value) {\n        if (this.shouldAddAttribute(name)) {\n            this.addAttribute(name, new StaticAttribute(element, name, value, namespace));\n        }\n    }\n    addDynamicAttribute(element, name, reference, isTrusting) {\n        if (name === 'class') {\n            this.addClass(reference);\n        } else if (this.shouldAddAttribute(name)) {\n            let attributeManager = this.env.attributeFor(element, name, isTrusting);\n            let attribute = new DynamicAttribute(element, attributeManager, name, reference);\n            this.addAttribute(name, attribute);\n        }\n    }\n    addDynamicAttributeNS(element, namespace, name, reference, isTrusting) {\n        if (this.shouldAddAttribute(name)) {\n            let attributeManager = this.env.attributeFor(element, name, isTrusting, namespace);\n            let nsAttribute = new DynamicAttribute(element, attributeManager, name, reference, namespace);\n            this.addAttribute(name, nsAttribute);\n        }\n    }\n    flush(element, vm) {\n        let { env } = this;\n        let { attributes, classList } = this;\n        for (let i = 0; attributes && i < attributes.length; i++) {\n            let opcode = attributes[i].flush(env);\n            if (opcode) {\n                vm.updateWith(opcode);\n            }\n        }\n        if (classList) {\n            let attributeManager = env.attributeFor(element, 'class', false);\n            let attribute = new DynamicAttribute(element, attributeManager, 'class', classList.toReference());\n            let opcode = attribute.flush(env);\n            if (opcode) {\n                vm.updateWith(opcode);\n            }\n        }\n    }\n    shouldAddAttribute(name) {\n        return !this.attributeNames || this.attributeNames.indexOf(name) === -1;\n    }\n    addClass(reference) {\n        let { classList } = this;\n        if (!classList) {\n            classList = this.classList = new ClassList();\n        }\n        classList.append(reference);\n    }\n    addAttribute(name, attribute) {\n        let { attributeNames, attributes } = this;\n        if (!attributeNames) {\n            attributeNames = this.attributeNames = [];\n            attributes = this.attributes = [];\n        }\n        attributeNames.push(name);\n        unwrap(attributes).push(attribute);\n    }\n}\nAPPEND_OPCODES.add(32 /* FlushElement */, vm => {\n    let stack = vm.elements();\n    let action = 'FlushElementOpcode#evaluate';\n    stack.expectOperations(action).flush(stack.expectConstructing(action), vm);\n    stack.flushElement();\n});\nAPPEND_OPCODES.add(33 /* CloseElement */, vm => vm.elements().closeElement());\nAPPEND_OPCODES.add(29 /* StaticAttr */, (vm, { op1: _name, op2: _value, op3: _namespace }) => {\n    let name = vm.constants.getString(_name);\n    let value = vm.constants.getString(_value);\n    if (_namespace) {\n        let namespace = vm.constants.getString(_namespace);\n        vm.elements().setStaticAttributeNS(namespace, name, value);\n    } else {\n        vm.elements().setStaticAttribute(name, value);\n    }\n});\nAPPEND_OPCODES.add(34 /* Modifier */, (vm, { op1: _manager }) => {\n    let manager = vm.constants.getOther(_manager);\n    let stack = vm.stack;\n    let args = stack.pop();\n    let tag = args.tag;\n    let { constructing: element, updateOperations } = vm.elements();\n    let dynamicScope = vm.dynamicScope();\n    let modifier = manager.create(element, args, dynamicScope, updateOperations);\n    args.clear();\n    vm.env.scheduleInstallModifier(modifier, manager);\n    let destructor = manager.getDestructor(modifier);\n    if (destructor) {\n        vm.newDestroyable(destructor);\n    }\n    vm.updateWith(new UpdateModifierOpcode(tag, manager, modifier));\n});\nexport class UpdateModifierOpcode extends UpdatingOpcode {\n    constructor(tag, manager, modifier) {\n        super();\n        this.tag = tag;\n        this.manager = manager;\n        this.modifier = modifier;\n        this.type = 'update-modifier';\n        this.lastUpdated = tag.value();\n    }\n    evaluate(vm) {\n        let { manager, modifier, tag, lastUpdated } = this;\n        if (!tag.validate(lastUpdated)) {\n            vm.env.scheduleUpdateModifier(modifier, manager);\n            this.lastUpdated = tag.value();\n        }\n    }\n    toJSON() {\n        return {\n            guid: this._guid,\n            type: this.type\n        };\n    }\n}\nexport class StaticAttribute {\n    constructor(element, name, value, namespace) {\n        this.element = element;\n        this.name = name;\n        this.value = value;\n        this.namespace = namespace;\n    }\n    flush(env) {\n        env.getAppendOperations().setAttribute(this.element, this.name, this.value, this.namespace);\n        return null;\n    }\n}\nexport class DynamicAttribute {\n    constructor(element, attributeManager, name, reference, namespace) {\n        this.element = element;\n        this.attributeManager = attributeManager;\n        this.name = name;\n        this.reference = reference;\n        this.namespace = namespace;\n        this.cache = null;\n        this.tag = reference.tag;\n    }\n    patch(env) {\n        let { element, cache } = this;\n        let value = expect(cache, 'must patch after flush').revalidate();\n        if (isModified(value)) {\n            this.attributeManager.updateAttribute(env, element, value, this.namespace);\n        }\n    }\n    flush(env) {\n        let { reference, element } = this;\n        if (isConstReference(reference)) {\n            let value = reference.value();\n            this.attributeManager.setAttribute(env, element, value, this.namespace);\n            return null;\n        } else {\n            let cache = this.cache = new ReferenceCache(reference);\n            let value = cache.peek();\n            this.attributeManager.setAttribute(env, element, value, this.namespace);\n            return new PatchElementOpcode(this);\n        }\n    }\n    toJSON() {\n        let { element, namespace, name, cache } = this;\n        let formattedElement = formatElement(element);\n        let lastValue = expect(cache, 'must serialize after flush').peek();\n        if (namespace) {\n            return {\n                element: formattedElement,\n                lastValue,\n                name,\n                namespace,\n                type: 'attribute'\n            };\n        }\n        return {\n            element: formattedElement,\n            lastValue,\n            name,\n            namespace: namespace === undefined ? null : namespace,\n            type: 'attribute'\n        };\n    }\n}\nfunction formatElement(element) {\n    return JSON.stringify(`<${element.tagName.toLowerCase()} />`);\n}\nAPPEND_OPCODES.add(31 /* DynamicAttrNS */, (vm, { op1: _name, op2: _namespace, op3: trusting }) => {\n    let name = vm.constants.getString(_name);\n    let namespace = vm.constants.getString(_namespace);\n    let reference = vm.stack.pop();\n    vm.elements().setDynamicAttributeNS(namespace, name, reference, !!trusting);\n});\nAPPEND_OPCODES.add(30 /* DynamicAttr */, (vm, { op1: _name, op2: trusting }) => {\n    let name = vm.constants.getString(_name);\n    let reference = vm.stack.pop();\n    vm.elements().setDynamicAttribute(name, reference, !!trusting);\n});\nexport class PatchElementOpcode extends UpdatingOpcode {\n    constructor(operation) {\n        super();\n        this.type = 'patch-element';\n        this.tag = operation.tag;\n        this.operation = operation;\n    }\n    evaluate(vm) {\n        this.operation.patch(vm.env);\n    }\n    toJSON() {\n        let { _guid, type, operation } = this;\n        return {\n            details: operation.toJSON(),\n            guid: _guid,\n            type\n        };\n    }\n}","import { combine, CONSTANT_TAG, isConst, ReferenceCache } from '@glimmer/reference';\nimport { APPEND_OPCODES, UpdatingOpcode } from '../../opcodes';\nimport ARGS from '../../vm/arguments';\nimport { ComponentElementOperations } from './dom';\nimport { Assert } from './vm';\nAPPEND_OPCODES.add(55 /* PushComponentManager */, (vm, { op1: _definition }) => {\n    let definition = vm.constants.getOther(_definition);\n    let stack = vm.stack;\n    stack.push({ definition, manager: definition.manager, component: null });\n});\nAPPEND_OPCODES.add(56 /* PushDynamicComponentManager */, vm => {\n    let stack = vm.stack;\n    let reference = stack.pop();\n    let cache = isConst(reference) ? undefined : new ReferenceCache(reference);\n    let definition = cache ? cache.peek() : reference.value();\n    stack.push({ definition, manager: definition.manager, component: null });\n    if (cache) {\n        vm.updateWith(new Assert(cache));\n    }\n});\nAPPEND_OPCODES.add(57 /* PushArgs */, (vm, { op1: synthetic }) => {\n    let stack = vm.stack;\n    ARGS.setup(stack, !!synthetic);\n    stack.push(ARGS);\n});\nAPPEND_OPCODES.add(58 /* PrepareArgs */, (vm, { op1: _state }) => {\n    let stack = vm.stack;\n    let { definition, manager } = vm.fetchValue(_state);\n    let args = stack.pop();\n    let preparedArgs = manager.prepareArgs(definition, args);\n    if (preparedArgs) {\n        args.clear();\n        let { positional, named } = preparedArgs;\n        let positionalCount = positional.length;\n        for (let i = 0; i < positionalCount; i++) {\n            stack.push(positional[i]);\n        }\n        stack.push(positionalCount);\n        let names = Object.keys(named);\n        let namedCount = names.length;\n        let atNames = [];\n        for (let i = 0; i < namedCount; i++) {\n            let value = named[names[i]];\n            let atName = `@${names[i]}`;\n            stack.push(value);\n            atNames.push(atName);\n        }\n        stack.push(atNames);\n        args.setup(stack, false);\n    }\n    stack.push(args);\n});\nAPPEND_OPCODES.add(59 /* CreateComponent */, (vm, { op1: flags, op2: _state }) => {\n    let definition;\n    let manager;\n    let args = vm.stack.pop();\n    let dynamicScope = vm.dynamicScope();\n    let state = ({ definition, manager } = vm.fetchValue(_state));\n    let hasDefaultBlock = flags & 1;\n    let component = manager.create(vm.env, definition, args, dynamicScope, vm.getSelf(), !!hasDefaultBlock);\n    state.component = component;\n    vm.updateWith(new UpdateComponentOpcode(args.tag, definition.name, component, manager, dynamicScope));\n});\nAPPEND_OPCODES.add(60 /* RegisterComponentDestructor */, (vm, { op1: _state }) => {\n    let { manager, component } = vm.fetchValue(_state);\n    let destructor = manager.getDestructor(component);\n    if (destructor) vm.newDestroyable(destructor);\n});\nAPPEND_OPCODES.add(64 /* BeginComponentTransaction */, vm => {\n    vm.beginCacheGroup();\n    vm.elements().pushSimpleBlock();\n});\nAPPEND_OPCODES.add(61 /* PushComponentOperations */, vm => {\n    vm.stack.push(new ComponentElementOperations(vm.env));\n});\nAPPEND_OPCODES.add(66 /* DidCreateElement */, (vm, { op1: _state }) => {\n    let { manager, component } = vm.fetchValue(_state);\n    let action = 'DidCreateElementOpcode#evaluate';\n    manager.didCreateElement(component, vm.elements().expectConstructing(action), vm.elements().expectOperations(action));\n});\nAPPEND_OPCODES.add(62 /* GetComponentSelf */, (vm, { op1: _state }) => {\n    let state = vm.fetchValue(_state);\n    vm.stack.push(state.manager.getSelf(state.component));\n});\nAPPEND_OPCODES.add(63 /* GetComponentLayout */, (vm, { op1: _state }) => {\n    let { manager, definition, component } = vm.fetchValue(_state);\n    vm.stack.push(manager.layoutFor(definition, component, vm.env));\n});\nAPPEND_OPCODES.add(67 /* DidRenderLayout */, (vm, { op1: _state }) => {\n    let { manager, component } = vm.fetchValue(_state);\n    let bounds = vm.elements().popBlock();\n    manager.didRenderLayout(component, bounds);\n    vm.env.didCreate(component, manager);\n    vm.updateWith(new DidUpdateLayoutOpcode(manager, component, bounds));\n});\nAPPEND_OPCODES.add(65 /* CommitComponentTransaction */, vm => vm.commitCacheGroup());\nexport class UpdateComponentOpcode extends UpdatingOpcode {\n    constructor(tag, name, component, manager, dynamicScope) {\n        super();\n        this.name = name;\n        this.component = component;\n        this.manager = manager;\n        this.dynamicScope = dynamicScope;\n        this.type = 'update-component';\n        let componentTag = manager.getTag(component);\n        if (componentTag) {\n            this.tag = combine([tag, componentTag]);\n        } else {\n            this.tag = tag;\n        }\n    }\n    evaluate(_vm) {\n        let { component, manager, dynamicScope } = this;\n        manager.update(component, dynamicScope);\n    }\n    toJSON() {\n        return {\n            args: [JSON.stringify(this.name)],\n            guid: this._guid,\n            type: this.type\n        };\n    }\n}\nexport class DidUpdateLayoutOpcode extends UpdatingOpcode {\n    constructor(manager, component, bounds) {\n        super();\n        this.manager = manager;\n        this.component = component;\n        this.bounds = bounds;\n        this.type = 'did-update-layout';\n        this.tag = CONSTANT_TAG;\n    }\n    evaluate(vm) {\n        let { manager, component, bounds } = this;\n        manager.didUpdateLayout(component, bounds);\n        vm.env.didUpdate(component, manager);\n    }\n}","export class Cursor {\n    constructor(element, nextSibling) {\n        this.element = element;\n        this.nextSibling = nextSibling;\n    }\n}\nexport class RealDOMBounds {\n    constructor(bounds) {\n        this.bounds = bounds;\n    }\n    parentElement() {\n        return this.bounds.parentElement();\n    }\n    firstNode() {\n        return this.bounds.firstNode();\n    }\n    lastNode() {\n        return this.bounds.lastNode();\n    }\n}\nexport class ConcreteBounds {\n    constructor(parentNode, first, last) {\n        this.parentNode = parentNode;\n        this.first = first;\n        this.last = last;\n    }\n    parentElement() {\n        return this.parentNode;\n    }\n    firstNode() {\n        return this.first;\n    }\n    lastNode() {\n        return this.last;\n    }\n}\nexport class SingleNodeBounds {\n    constructor(parentNode, node) {\n        this.parentNode = parentNode;\n        this.node = node;\n    }\n    parentElement() {\n        return this.parentNode;\n    }\n    firstNode() {\n        return this.node;\n    }\n    lastNode() {\n        return this.node;\n    }\n}\nexport function bounds(parent, first, last) {\n    return new ConcreteBounds(parent, first, last);\n}\nexport function single(parent, node) {\n    return new SingleNodeBounds(parent, node);\n}\nexport function move(bounds, reference) {\n    let parent = bounds.parentElement();\n    let first = bounds.firstNode();\n    let last = bounds.lastNode();\n    let node = first;\n    while (node) {\n        let next = node.nextSibling;\n        parent.insertBefore(node, reference);\n        if (node === last) return next;\n        node = next;\n    }\n    return null;\n}\nexport function clear(bounds) {\n    let parent = bounds.parentElement();\n    let first = bounds.firstNode();\n    let last = bounds.lastNode();\n    let node = first;\n    while (node) {\n        let next = node.nextSibling;\n        parent.removeChild(node);\n        if (node === last) return next;\n        node = next;\n    }\n    return null;\n}","import { clear } from './bounds';\nimport { Stack, assert, expect } from '@glimmer/util';\nimport { SimpleElementOperations } from './compiled/opcodes/dom';\nclass First {\n    constructor(node) {\n        this.node = node;\n    }\n    firstNode() {\n        return this.node;\n    }\n}\nclass Last {\n    constructor(node) {\n        this.node = node;\n    }\n    lastNode() {\n        return this.node;\n    }\n}\nexport class Fragment {\n    constructor(bounds) {\n        this.bounds = bounds;\n    }\n    parentElement() {\n        return this.bounds.parentElement();\n    }\n    firstNode() {\n        return this.bounds.firstNode();\n    }\n    lastNode() {\n        return this.bounds.lastNode();\n    }\n    update(bounds) {\n        this.bounds = bounds;\n    }\n}\nexport class ElementStack {\n    constructor(env, parentNode, nextSibling) {\n        this.constructing = null;\n        this.operations = null;\n        this.elementStack = new Stack();\n        this.nextSiblingStack = new Stack();\n        this.blockStack = new Stack();\n        this.env = env;\n        this.dom = env.getAppendOperations();\n        this.updateOperations = env.getDOM();\n        this.element = parentNode;\n        this.nextSibling = nextSibling;\n        this.defaultOperations = new SimpleElementOperations(env);\n        this.pushSimpleBlock();\n        this.elementStack.push(this.element);\n        this.nextSiblingStack.push(this.nextSibling);\n    }\n    static forInitialRender(env, parentNode, nextSibling) {\n        return new ElementStack(env, parentNode, nextSibling);\n    }\n    static resume(env, tracker, nextSibling) {\n        let parentNode = tracker.parentElement();\n        let stack = new ElementStack(env, parentNode, nextSibling);\n        stack.pushBlockTracker(tracker);\n        return stack;\n    }\n    expectConstructing(method) {\n        return expect(this.constructing, `${method} should only be called while constructing an element`);\n    }\n    expectOperations(method) {\n        return expect(this.operations, `${method} should only be called while constructing an element`);\n    }\n    block() {\n        return expect(this.blockStack.current, \"Expected a current block tracker\");\n    }\n    popElement() {\n        let { elementStack, nextSiblingStack } = this;\n        let topElement = elementStack.pop();\n        nextSiblingStack.pop();\n        // LOGGER.debug(`-> element stack ${this.elementStack.toArray().map(e => e.tagName).join(', ')}`);\n        this.element = expect(elementStack.current, \"can't pop past the last element\");\n        this.nextSibling = nextSiblingStack.current;\n        return topElement;\n    }\n    pushSimpleBlock() {\n        let tracker = new SimpleBlockTracker(this.element);\n        this.pushBlockTracker(tracker);\n        return tracker;\n    }\n    pushUpdatableBlock() {\n        let tracker = new UpdatableBlockTracker(this.element);\n        this.pushBlockTracker(tracker);\n        return tracker;\n    }\n    pushBlockTracker(tracker, isRemote = false) {\n        let current = this.blockStack.current;\n        if (current !== null) {\n            current.newDestroyable(tracker);\n            if (!isRemote) {\n                current.newBounds(tracker);\n            }\n        }\n        this.blockStack.push(tracker);\n        return tracker;\n    }\n    pushBlockList(list) {\n        let tracker = new BlockListTracker(this.element, list);\n        let current = this.blockStack.current;\n        if (current !== null) {\n            current.newDestroyable(tracker);\n            current.newBounds(tracker);\n        }\n        this.blockStack.push(tracker);\n        return tracker;\n    }\n    popBlock() {\n        this.block().finalize(this);\n        return expect(this.blockStack.pop(), \"Expected popBlock to return a block\");\n    }\n    openElement(tag, _operations) {\n        // workaround argument.length transpile of arg initializer\n        let operations = _operations === undefined ? this.defaultOperations : _operations;\n        let element = this.dom.createElement(tag, this.element);\n        this.constructing = element;\n        this.operations = operations;\n        return element;\n    }\n    flushElement() {\n        let parent = this.element;\n        let element = expect(this.constructing, `flushElement should only be called when constructing an element`);\n        this.dom.insertBefore(parent, element, this.nextSibling);\n        this.constructing = null;\n        this.operations = null;\n        this.pushElement(element, null);\n        this.block().openElement(element);\n    }\n    pushRemoteElement(element, nextSibling = null) {\n        this.pushElement(element, nextSibling);\n        let tracker = new RemoteBlockTracker(element);\n        this.pushBlockTracker(tracker, true);\n    }\n    popRemoteElement() {\n        this.popBlock();\n        this.popElement();\n    }\n    pushElement(element, nextSibling) {\n        this.element = element;\n        this.elementStack.push(element);\n        // LOGGER.debug(`-> element stack ${this.elementStack.toArray().map(e => e.tagName).join(', ')}`);\n        this.nextSibling = nextSibling;\n        this.nextSiblingStack.push(nextSibling);\n    }\n    newDestroyable(d) {\n        this.block().newDestroyable(d);\n    }\n    newBounds(bounds) {\n        this.block().newBounds(bounds);\n    }\n    appendText(string) {\n        let { dom } = this;\n        let text = dom.createTextNode(string);\n        dom.insertBefore(this.element, text, this.nextSibling);\n        this.block().newNode(text);\n        return text;\n    }\n    appendComment(string) {\n        let { dom } = this;\n        let comment = dom.createComment(string);\n        dom.insertBefore(this.element, comment, this.nextSibling);\n        this.block().newNode(comment);\n        return comment;\n    }\n    setStaticAttribute(name, value) {\n        this.expectOperations('setStaticAttribute').addStaticAttribute(this.expectConstructing('setStaticAttribute'), name, value);\n    }\n    setStaticAttributeNS(namespace, name, value) {\n        this.expectOperations('setStaticAttributeNS').addStaticAttributeNS(this.expectConstructing('setStaticAttributeNS'), namespace, name, value);\n    }\n    setDynamicAttribute(name, reference, isTrusting) {\n        this.expectOperations('setDynamicAttribute').addDynamicAttribute(this.expectConstructing('setDynamicAttribute'), name, reference, isTrusting);\n    }\n    setDynamicAttributeNS(namespace, name, reference, isTrusting) {\n        this.expectOperations('setDynamicAttributeNS').addDynamicAttributeNS(this.expectConstructing('setDynamicAttributeNS'), namespace, name, reference, isTrusting);\n    }\n    closeElement() {\n        this.block().closeElement();\n        this.popElement();\n    }\n}\nexport class SimpleBlockTracker {\n    constructor(parent) {\n        this.parent = parent;\n        this.first = null;\n        this.last = null;\n        this.destroyables = null;\n        this.nesting = 0;\n    }\n    destroy() {\n        let { destroyables } = this;\n        if (destroyables && destroyables.length) {\n            for (let i = 0; i < destroyables.length; i++) {\n                destroyables[i].destroy();\n            }\n        }\n    }\n    parentElement() {\n        return this.parent;\n    }\n    firstNode() {\n        return this.first && this.first.firstNode();\n    }\n    lastNode() {\n        return this.last && this.last.lastNode();\n    }\n    openElement(element) {\n        this.newNode(element);\n        this.nesting++;\n    }\n    closeElement() {\n        this.nesting--;\n    }\n    newNode(node) {\n        if (this.nesting !== 0) return;\n        if (!this.first) {\n            this.first = new First(node);\n        }\n        this.last = new Last(node);\n    }\n    newBounds(bounds) {\n        if (this.nesting !== 0) return;\n        if (!this.first) {\n            this.first = bounds;\n        }\n        this.last = bounds;\n    }\n    newDestroyable(d) {\n        this.destroyables = this.destroyables || [];\n        this.destroyables.push(d);\n    }\n    finalize(stack) {\n        if (!this.first) {\n            stack.appendComment('');\n        }\n    }\n}\nclass RemoteBlockTracker extends SimpleBlockTracker {\n    destroy() {\n        super.destroy();\n        clear(this);\n    }\n}\nexport class UpdatableBlockTracker extends SimpleBlockTracker {\n    reset(env) {\n        let { destroyables } = this;\n        if (destroyables && destroyables.length) {\n            for (let i = 0; i < destroyables.length; i++) {\n                env.didDestroy(destroyables[i]);\n            }\n        }\n        let nextSibling = clear(this);\n        this.first = null;\n        this.last = null;\n        this.destroyables = null;\n        this.nesting = 0;\n        return nextSibling;\n    }\n}\nclass BlockListTracker {\n    constructor(parent, boundList) {\n        this.parent = parent;\n        this.boundList = boundList;\n        this.parent = parent;\n        this.boundList = boundList;\n    }\n    destroy() {\n        this.boundList.forEachNode(node => node.destroy());\n    }\n    parentElement() {\n        return this.parent;\n    }\n    firstNode() {\n        let head = this.boundList.head();\n        return head && head.firstNode();\n    }\n    lastNode() {\n        let tail = this.boundList.tail();\n        return tail && tail.lastNode();\n    }\n    openElement(_element) {\n        assert(false, 'Cannot openElement directly inside a block list');\n    }\n    closeElement() {\n        assert(false, 'Cannot closeElement directly inside a block list');\n    }\n    newNode(_node) {\n        assert(false, 'Cannot create a new node directly inside a block list');\n    }\n    newBounds(_bounds) {}\n    newDestroyable(_d) {}\n    finalize(_stack) {}\n}","const COMPONENT_DEFINITION_BRAND = 'COMPONENT DEFINITION [id=e59c754e-61eb-4392-8c4a-2c0ac72bfcd4]';\nexport function isComponentDefinition(obj) {\n    return typeof obj === 'object' && obj !== null && obj[COMPONENT_DEFINITION_BRAND];\n}\nexport class ComponentDefinition {\n    constructor(name, manager, ComponentClass) {\n        this[COMPONENT_DEFINITION_BRAND] = true;\n        this.name = name;\n        this.manager = manager;\n        this.ComponentClass = ComponentClass;\n    }\n}","import { unreachable } from '@glimmer/util';\nimport { clear, single, SingleNodeBounds } from './bounds';\nexport function isSafeString(value) {\n    return typeof value === 'object' && value !== null && typeof value.toHTML === 'function';\n}\nexport function isNode(value) {\n    return typeof value === 'object' && value !== null && typeof value.nodeType === 'number';\n}\nexport function isString(value) {\n    return typeof value === 'string';\n}\nclass Upsert {\n    constructor(bounds) {\n        this.bounds = bounds;\n    }\n}\nexport default Upsert;\nexport function cautiousInsert(dom, cursor, value) {\n    if (isString(value)) {\n        return TextUpsert.insert(dom, cursor, value);\n    }\n    if (isSafeString(value)) {\n        return SafeStringUpsert.insert(dom, cursor, value);\n    }\n    if (isNode(value)) {\n        return NodeUpsert.insert(dom, cursor, value);\n    }\n    throw unreachable();\n}\nexport function trustingInsert(dom, cursor, value) {\n    if (isString(value)) {\n        return HTMLUpsert.insert(dom, cursor, value);\n    }\n    if (isNode(value)) {\n        return NodeUpsert.insert(dom, cursor, value);\n    }\n    throw unreachable();\n}\nclass TextUpsert extends Upsert {\n    static insert(dom, cursor, value) {\n        let textNode = dom.createTextNode(value);\n        dom.insertBefore(cursor.element, textNode, cursor.nextSibling);\n        let bounds = new SingleNodeBounds(cursor.element, textNode);\n        return new TextUpsert(bounds, textNode);\n    }\n    constructor(bounds, textNode) {\n        super(bounds);\n        this.textNode = textNode;\n    }\n    update(_dom, value) {\n        if (isString(value)) {\n            let { textNode } = this;\n            textNode.nodeValue = value;\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\nclass HTMLUpsert extends Upsert {\n    static insert(dom, cursor, value) {\n        let bounds = dom.insertHTMLBefore(cursor.element, cursor.nextSibling, value);\n        return new HTMLUpsert(bounds);\n    }\n    update(dom, value) {\n        if (isString(value)) {\n            let { bounds } = this;\n            let parentElement = bounds.parentElement();\n            let nextSibling = clear(bounds);\n            this.bounds = dom.insertHTMLBefore(parentElement, nextSibling, value);\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\nclass SafeStringUpsert extends Upsert {\n    constructor(bounds, lastStringValue) {\n        super(bounds);\n        this.lastStringValue = lastStringValue;\n    }\n    static insert(dom, cursor, value) {\n        let stringValue = value.toHTML();\n        let bounds = dom.insertHTMLBefore(cursor.element, cursor.nextSibling, stringValue);\n        return new SafeStringUpsert(bounds, stringValue);\n    }\n    update(dom, value) {\n        if (isSafeString(value)) {\n            let stringValue = value.toHTML();\n            if (stringValue !== this.lastStringValue) {\n                let { bounds } = this;\n                let parentElement = bounds.parentElement();\n                let nextSibling = clear(bounds);\n                this.bounds = dom.insertHTMLBefore(parentElement, nextSibling, stringValue);\n                this.lastStringValue = stringValue;\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\nclass NodeUpsert extends Upsert {\n    static insert(dom, cursor, node) {\n        dom.insertBefore(cursor.element, node, cursor.nextSibling);\n        return new NodeUpsert(single(cursor.element, node));\n    }\n    update(dom, value) {\n        if (isNode(value)) {\n            let { bounds } = this;\n            let parentElement = bounds.parentElement();\n            let nextSibling = clear(bounds);\n            this.bounds = dom.insertNodeBefore(parentElement, value, nextSibling);\n            return true;\n        } else {\n            return false;\n        }\n    }\n}","import { isConst, isModified, map, ReferenceCache } from '@glimmer/reference';\nimport { clear, Cursor } from '../../bounds';\nimport { Fragment } from '../../builder';\nimport { isComponentDefinition } from '../../component/interfaces';\nimport { APPEND_OPCODES, UpdatingOpcode } from '../../opcodes';\nimport { ConditionalReference } from '../../references';\nimport { cautiousInsert, isNode, isSafeString, isString, trustingInsert } from '../../upsert';\nAPPEND_OPCODES.add(25 /* DynamicContent */, (vm, { op1: append }) => {\n    let opcode = vm.constants.getOther(append);\n    opcode.evaluate(vm);\n});\nfunction isEmpty(value) {\n    return value === null || value === undefined || typeof value.toString !== 'function';\n}\nexport function normalizeTextValue(value) {\n    if (isEmpty(value)) {\n        return '';\n    }\n    return String(value);\n}\nfunction normalizeTrustedValue(value) {\n    if (isEmpty(value)) {\n        return '';\n    }\n    if (isString(value)) {\n        return value;\n    }\n    if (isSafeString(value)) {\n        return value.toHTML();\n    }\n    if (isNode(value)) {\n        return value;\n    }\n    return String(value);\n}\nfunction normalizeValue(value) {\n    if (isEmpty(value)) {\n        return '';\n    }\n    if (isString(value)) {\n        return value;\n    }\n    if (isSafeString(value) || isNode(value)) {\n        return value;\n    }\n    return String(value);\n}\nexport class AppendDynamicOpcode {\n    evaluate(vm) {\n        let reference = vm.stack.pop();\n        let normalized = this.normalize(reference);\n        let value;\n        let cache;\n        if (isConst(reference)) {\n            value = normalized.value();\n        } else {\n            cache = new ReferenceCache(normalized);\n            value = cache.peek();\n        }\n        let stack = vm.elements();\n        let upsert = this.insert(vm.env.getAppendOperations(), stack, value);\n        let bounds = new Fragment(upsert.bounds);\n        stack.newBounds(bounds);\n        if (cache /* i.e. !isConst(reference) */) {\n                vm.updateWith(this.updateWith(vm, reference, cache, bounds, upsert));\n            }\n    }\n}\nexport class IsComponentDefinitionReference extends ConditionalReference {\n    static create(inner) {\n        return new IsComponentDefinitionReference(inner);\n    }\n    toBool(value) {\n        return isComponentDefinition(value);\n    }\n}\nclass UpdateOpcode extends UpdatingOpcode {\n    constructor(cache, bounds, upsert) {\n        super();\n        this.cache = cache;\n        this.bounds = bounds;\n        this.upsert = upsert;\n        this.tag = cache.tag;\n    }\n    evaluate(vm) {\n        let value = this.cache.revalidate();\n        if (isModified(value)) {\n            let { bounds, upsert } = this;\n            let { dom } = vm;\n            if (!this.upsert.update(dom, value)) {\n                let cursor = new Cursor(bounds.parentElement(), clear(bounds));\n                upsert = this.upsert = this.insert(vm.env.getAppendOperations(), cursor, value);\n            }\n            bounds.update(upsert.bounds);\n        }\n    }\n    toJSON() {\n        let { _guid: guid, type, cache } = this;\n        return {\n            details: { lastValue: JSON.stringify(cache.peek()) },\n            guid,\n            type\n        };\n    }\n}\nexport class OptimizedCautiousAppendOpcode extends AppendDynamicOpcode {\n    constructor() {\n        super(...arguments);\n        this.type = 'optimized-cautious-append';\n    }\n    normalize(reference) {\n        return map(reference, normalizeValue);\n    }\n    insert(dom, cursor, value) {\n        return cautiousInsert(dom, cursor, value);\n    }\n    updateWith(_vm, _reference, cache, bounds, upsert) {\n        return new OptimizedCautiousUpdateOpcode(cache, bounds, upsert);\n    }\n}\nclass OptimizedCautiousUpdateOpcode extends UpdateOpcode {\n    constructor() {\n        super(...arguments);\n        this.type = 'optimized-cautious-update';\n    }\n    insert(dom, cursor, value) {\n        return cautiousInsert(dom, cursor, value);\n    }\n}\nexport class OptimizedTrustingAppendOpcode extends AppendDynamicOpcode {\n    constructor() {\n        super(...arguments);\n        this.type = 'optimized-trusting-append';\n    }\n    normalize(reference) {\n        return map(reference, normalizeTrustedValue);\n    }\n    insert(dom, cursor, value) {\n        return trustingInsert(dom, cursor, value);\n    }\n    updateWith(_vm, _reference, cache, bounds, upsert) {\n        return new OptimizedTrustingUpdateOpcode(cache, bounds, upsert);\n    }\n}\nclass OptimizedTrustingUpdateOpcode extends UpdateOpcode {\n    constructor() {\n        super(...arguments);\n        this.type = 'optimized-trusting-update';\n    }\n    insert(dom, cursor, value) {\n        return trustingInsert(dom, cursor, value);\n    }\n}","import { dict } from '@glimmer/util';\nimport { APPEND_OPCODES } from '../../opcodes';\n/* tslint:disable */\nfunction debugCallback(context, get) {\n    console.info('Use `context`, and `get(<path>)` to debug this template.');\n    // for example...\n    context === get('this');\n    debugger;\n}\n/* tslint:enable */\nlet callback = debugCallback;\n// For testing purposes\nexport function setDebuggerCallback(cb) {\n    callback = cb;\n}\nexport function resetDebuggerCallback() {\n    callback = debugCallback;\n}\nclass ScopeInspector {\n    constructor(scope, symbols, evalInfo) {\n        this.scope = scope;\n        this.locals = dict();\n        for (let i = 0; i < evalInfo.length; i++) {\n            let slot = evalInfo[i];\n            let name = symbols[slot - 1];\n            let ref = scope.getSymbol(slot);\n            this.locals[name] = ref;\n        }\n    }\n    get(path) {\n        let { scope, locals } = this;\n        let parts = path.split('.');\n        let [head, ...tail] = path.split('.');\n        let evalScope = scope.getEvalScope();\n        let ref;\n        if (head === 'this') {\n            ref = scope.getSelf();\n        } else if (locals[head]) {\n            ref = locals[head];\n        } else if (head.indexOf('@') === 0 && evalScope[head]) {\n            ref = evalScope[head];\n        } else {\n            ref = this.scope.getSelf();\n            tail = parts;\n        }\n        return tail.reduce((r, part) => r.get(part), ref);\n    }\n}\nAPPEND_OPCODES.add(70 /* Debugger */, (vm, { op1: _symbols, op2: _evalInfo }) => {\n    let symbols = vm.constants.getOther(_symbols);\n    let evalInfo = vm.constants.getArray(_evalInfo);\n    let inspector = new ScopeInspector(vm.scope(), symbols, evalInfo);\n    callback(vm.getSelf().value(), path => inspector.get(path).value());\n});","import { APPEND_OPCODES } from '../../opcodes';\nAPPEND_OPCODES.add(68 /* GetPartialTemplate */, vm => {\n    let stack = vm.stack;\n    let definition = stack.pop();\n    stack.push(definition.value().template.asPartial());\n});","import { ReferenceIterator } from '@glimmer/reference';\nimport { APPEND_OPCODES } from '../../opcodes';\nclass IterablePresenceReference {\n    constructor(artifacts) {\n        this.tag = artifacts.tag;\n        this.artifacts = artifacts;\n    }\n    value() {\n        return !this.artifacts.isEmpty();\n    }\n}\nAPPEND_OPCODES.add(53 /* PutIterator */, vm => {\n    let stack = vm.stack;\n    let listRef = stack.pop();\n    let key = stack.pop();\n    let iterable = vm.env.iterableFor(listRef, key.value());\n    let iterator = new ReferenceIterator(iterable);\n    stack.push(iterator);\n    stack.push(new IterablePresenceReference(iterator.artifacts));\n});\nAPPEND_OPCODES.add(51 /* EnterList */, (vm, { op1: start }) => {\n    vm.enterList(start);\n});\nAPPEND_OPCODES.add(52 /* ExitList */, vm => vm.exitList());\nAPPEND_OPCODES.add(54 /* Iterate */, (vm, { op1: breaks }) => {\n    let stack = vm.stack;\n    let item = stack.peek().next();\n    if (item) {\n        let tryOpcode = vm.iterate(item.memo, item.value);\n        vm.enterItem(item.key, tryOpcode);\n    } else {\n        vm.goto(breaks);\n    }\n});","export var Opcodes;\n(function (Opcodes) {\n    // Statements\n    Opcodes[Opcodes[\"Text\"] = 0] = \"Text\";\n    Opcodes[Opcodes[\"Append\"] = 1] = \"Append\";\n    Opcodes[Opcodes[\"Comment\"] = 2] = \"Comment\";\n    Opcodes[Opcodes[\"Modifier\"] = 3] = \"Modifier\";\n    Opcodes[Opcodes[\"Block\"] = 4] = \"Block\";\n    Opcodes[Opcodes[\"Component\"] = 5] = \"Component\";\n    Opcodes[Opcodes[\"OpenElement\"] = 6] = \"OpenElement\";\n    Opcodes[Opcodes[\"FlushElement\"] = 7] = \"FlushElement\";\n    Opcodes[Opcodes[\"CloseElement\"] = 8] = \"CloseElement\";\n    Opcodes[Opcodes[\"StaticAttr\"] = 9] = \"StaticAttr\";\n    Opcodes[Opcodes[\"DynamicAttr\"] = 10] = \"DynamicAttr\";\n    Opcodes[Opcodes[\"Yield\"] = 11] = \"Yield\";\n    Opcodes[Opcodes[\"Partial\"] = 12] = \"Partial\";\n    Opcodes[Opcodes[\"DynamicArg\"] = 13] = \"DynamicArg\";\n    Opcodes[Opcodes[\"StaticArg\"] = 14] = \"StaticArg\";\n    Opcodes[Opcodes[\"TrustingAttr\"] = 15] = \"TrustingAttr\";\n    Opcodes[Opcodes[\"Debugger\"] = 16] = \"Debugger\";\n    Opcodes[Opcodes[\"ClientSideStatement\"] = 17] = \"ClientSideStatement\";\n    // Expressions\n    Opcodes[Opcodes[\"Unknown\"] = 18] = \"Unknown\";\n    Opcodes[Opcodes[\"Get\"] = 19] = \"Get\";\n    Opcodes[Opcodes[\"MaybeLocal\"] = 20] = \"MaybeLocal\";\n    Opcodes[Opcodes[\"FixThisBeforeWeMerge\"] = 21] = \"FixThisBeforeWeMerge\";\n    Opcodes[Opcodes[\"HasBlock\"] = 22] = \"HasBlock\";\n    Opcodes[Opcodes[\"HasBlockParams\"] = 23] = \"HasBlockParams\";\n    Opcodes[Opcodes[\"Undefined\"] = 24] = \"Undefined\";\n    Opcodes[Opcodes[\"Helper\"] = 25] = \"Helper\";\n    Opcodes[Opcodes[\"Concat\"] = 26] = \"Concat\";\n    Opcodes[Opcodes[\"ClientSideExpression\"] = 27] = \"ClientSideExpression\";\n})(Opcodes || (Opcodes = {}));","import { Opcodes } from './lib/opcodes';\nexport { Opcodes as Ops } from './lib/opcodes';\nexport function is(variant) {\n    return function (value) {\n        return Array.isArray(value) && value[0] === variant;\n    };\n}\nexport var Expressions;\n(function (Expressions) {\n    Expressions.isUnknown = is(Opcodes.Unknown);\n    Expressions.isGet = is(Opcodes.Get);\n    Expressions.isConcat = is(Opcodes.Concat);\n    Expressions.isHelper = is(Opcodes.Helper);\n    Expressions.isHasBlock = is(Opcodes.HasBlock);\n    Expressions.isHasBlockParams = is(Opcodes.HasBlockParams);\n    Expressions.isUndefined = is(Opcodes.Undefined);\n    Expressions.isClientSide = is(Opcodes.ClientSideExpression);\n    Expressions.isMaybeLocal = is(Opcodes.MaybeLocal);\n    function isPrimitiveValue(value) {\n        if (value === null) {\n            return true;\n        }\n        return typeof value !== 'object';\n    }\n    Expressions.isPrimitiveValue = isPrimitiveValue;\n})(Expressions || (Expressions = {}));\nexport var Statements;\n(function (Statements) {\n    Statements.isText = is(Opcodes.Text);\n    Statements.isAppend = is(Opcodes.Append);\n    Statements.isComment = is(Opcodes.Comment);\n    Statements.isModifier = is(Opcodes.Modifier);\n    Statements.isBlock = is(Opcodes.Block);\n    Statements.isComponent = is(Opcodes.Component);\n    Statements.isOpenElement = is(Opcodes.OpenElement);\n    Statements.isFlushElement = is(Opcodes.FlushElement);\n    Statements.isCloseElement = is(Opcodes.CloseElement);\n    Statements.isStaticAttr = is(Opcodes.StaticAttr);\n    Statements.isDynamicAttr = is(Opcodes.DynamicAttr);\n    Statements.isYield = is(Opcodes.Yield);\n    Statements.isPartial = is(Opcodes.Partial);\n    Statements.isDynamicArg = is(Opcodes.DynamicArg);\n    Statements.isStaticArg = is(Opcodes.StaticArg);\n    Statements.isTrustingAttr = is(Opcodes.TrustingAttr);\n    Statements.isDebugger = is(Opcodes.Debugger);\n    Statements.isClientSide = is(Opcodes.ClientSideStatement);\n    function isAttribute(val) {\n        return val[0] === Opcodes.StaticAttr || val[0] === Opcodes.DynamicAttr || val[0] === Opcodes.TrustingAttr;\n    }\n    Statements.isAttribute = isAttribute;\n    function isArgument(val) {\n        return val[0] === Opcodes.StaticArg || val[0] === Opcodes.DynamicArg;\n    }\n    Statements.isArgument = isArgument;\n    function isParameter(val) {\n        return isAttribute(val) || isArgument(val);\n    }\n    Statements.isParameter = isParameter;\n    function getParameterName(s) {\n        return s[1];\n    }\n    Statements.getParameterName = getParameterName;\n})(Statements || (Statements = {}));","export var Ops;\n(function (Ops) {\n    Ops[Ops[\"OpenComponentElement\"] = 0] = \"OpenComponentElement\";\n    Ops[Ops[\"DidCreateElement\"] = 1] = \"DidCreateElement\";\n    Ops[Ops[\"DidRenderLayout\"] = 2] = \"DidRenderLayout\";\n    Ops[Ops[\"FunctionExpression\"] = 3] = \"FunctionExpression\";\n})(Ops || (Ops = {}));","export class CompiledStaticTemplate {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n}\nexport class CompiledDynamicTemplate {\n    constructor(start, end, symbolTable) {\n        this.start = start;\n        this.end = end;\n        this.symbolTable = symbolTable;\n    }\n}","import { CompiledDynamicTemplate } from './compiled/blocks';\nimport { Ops } from '@glimmer/wire-format';\nimport { Register, debugSlice } from './opcodes';\nimport { ATTRS_BLOCK, compileStatement } from './syntax/functions';\nimport * as ClientSide from './syntax/client-side';\nimport { expr } from './syntax/functions';\nimport OpcodeBuilderDSL from './compiled/opcodes/builder';\nexport function compileLayout(compilable, env) {\n    let builder = new ComponentLayoutBuilder(env);\n    compilable.compile(builder);\n    return builder.compile();\n}\nclass ComponentLayoutBuilder {\n    constructor(env) {\n        this.env = env;\n    }\n    wrapLayout(layout) {\n        this.inner = new WrappedBuilder(this.env, layout);\n    }\n    fromLayout(componentName, layout) {\n        this.inner = new UnwrappedBuilder(this.env, componentName, layout);\n    }\n    compile() {\n        return this.inner.compile();\n    }\n    get tag() {\n        return this.inner.tag;\n    }\n    get attrs() {\n        return this.inner.attrs;\n    }\n}\nclass WrappedBuilder {\n    constructor(env, layout) {\n        this.env = env;\n        this.layout = layout;\n        this.tag = new ComponentTagBuilder();\n        this.attrs = new ComponentAttrsBuilder();\n    }\n    compile() {\n        //========DYNAMIC\n        //        PutValue(TagExpr)\n        //        Test\n        //        JumpUnless(BODY)\n        //        OpenDynamicPrimitiveElement\n        //        DidCreateElement\n        //        ...attr statements...\n        //        FlushElement\n        // BODY:  Noop\n        //        ...body statements...\n        //        PutValue(TagExpr)\n        //        Test\n        //        JumpUnless(END)\n        //        CloseElement\n        // END:   Noop\n        //        DidRenderLayout\n        //        Exit\n        //\n        //========STATIC\n        //        OpenPrimitiveElementOpcode\n        //        DidCreateElement\n        //        ...attr statements...\n        //        FlushElement\n        //        ...body statements...\n        //        CloseElement\n        //        DidRenderLayout\n        //        Exit\n        let { env, layout } = this;\n        let meta = { templateMeta: layout.meta, symbols: layout.symbols, asPartial: false };\n        let dynamicTag = this.tag.getDynamic();\n        let staticTag = this.tag.getStatic();\n        let b = builder(env, meta);\n        b.startLabels();\n        if (dynamicTag) {\n            b.fetch(Register.s1);\n            expr(dynamicTag, b);\n            b.dup();\n            b.load(Register.s1);\n            b.test('simple');\n            b.jumpUnless('BODY');\n            b.fetch(Register.s1);\n            b.pushComponentOperations();\n            b.openDynamicElement();\n        } else if (staticTag) {\n            b.pushComponentOperations();\n            b.openElementWithOperations(staticTag);\n        }\n        if (dynamicTag || staticTag) {\n            b.didCreateElement(Register.s0);\n            let attrs = this.attrs.buffer;\n            for (let i = 0; i < attrs.length; i++) {\n                compileStatement(attrs[i], b);\n            }\n            b.flushElement();\n        }\n        b.label('BODY');\n        b.invokeStatic(layout.asBlock());\n        if (dynamicTag) {\n            b.fetch(Register.s1);\n            b.test('simple');\n            b.jumpUnless('END');\n            b.closeElement();\n        } else if (staticTag) {\n            b.closeElement();\n        }\n        b.label('END');\n        b.didRenderLayout(Register.s0);\n        if (dynamicTag) {\n            b.load(Register.s1);\n        }\n        b.stopLabels();\n        let start = b.start;\n        let end = b.finalize();\n        debugSlice(env, start, end);\n        return new CompiledDynamicTemplate(start, end, {\n            meta,\n            hasEval: layout.hasEval,\n            symbols: layout.symbols.concat([ATTRS_BLOCK])\n        });\n    }\n}\nclass UnwrappedBuilder {\n    constructor(env, componentName, layout) {\n        this.env = env;\n        this.componentName = componentName;\n        this.layout = layout;\n        this.attrs = new ComponentAttrsBuilder();\n    }\n    get tag() {\n        throw new Error('BUG: Cannot call `tag` on an UnwrappedBuilder');\n    }\n    compile() {\n        let { env, layout } = this;\n        return layout.asLayout(this.componentName, this.attrs.buffer).compileDynamic(env);\n    }\n}\nclass ComponentTagBuilder {\n    constructor() {\n        this.isDynamic = null;\n        this.isStatic = null;\n        this.staticTagName = null;\n        this.dynamicTagName = null;\n    }\n    getDynamic() {\n        if (this.isDynamic) {\n            return this.dynamicTagName;\n        }\n    }\n    getStatic() {\n        if (this.isStatic) {\n            return this.staticTagName;\n        }\n    }\n    static(tagName) {\n        this.isStatic = true;\n        this.staticTagName = tagName;\n    }\n    dynamic(tagName) {\n        this.isDynamic = true;\n        this.dynamicTagName = [Ops.ClientSideExpression, ClientSide.Ops.FunctionExpression, tagName];\n    }\n}\nclass ComponentAttrsBuilder {\n    constructor() {\n        this.buffer = [];\n    }\n    static(name, value) {\n        this.buffer.push([Ops.StaticAttr, name, value, null]);\n    }\n    dynamic(name, value) {\n        this.buffer.push([Ops.DynamicAttr, name, [Ops.ClientSideExpression, ClientSide.Ops.FunctionExpression, value], null]);\n    }\n}\nexport class ComponentBuilder {\n    constructor(builder) {\n        this.builder = builder;\n        this.env = builder.env;\n    }\n    static(definition, args) {\n        let [params, hash, _default, inverse] = args;\n        let { builder } = this;\n        builder.pushComponentManager(definition);\n        builder.invokeComponent(null, params, hash, _default, inverse);\n    }\n    dynamic(definitionArgs, getDefinition, args) {\n        let [params, hash, block, inverse] = args;\n        let { builder } = this;\n        if (!definitionArgs || definitionArgs.length === 0) {\n            throw new Error(\"Dynamic syntax without an argument\");\n        }\n        let meta = this.builder.meta.templateMeta;\n        function helper(vm, a) {\n            return getDefinition(vm, a, meta);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        builder.compileArgs(definitionArgs[0], definitionArgs[1], true);\n        builder.helper(helper);\n        builder.dup();\n        builder.test('simple');\n        builder.enter(2);\n        builder.jumpUnless('ELSE');\n        builder.pushDynamicComponentManager();\n        builder.invokeComponent(null, params, hash, block, inverse);\n        builder.label('ELSE');\n        builder.exit();\n        builder.return();\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    }\n}\nexport function builder(env, meta) {\n    return new OpcodeBuilderDSL(env, meta);\n}","import CompilableTemplate from './compilable-template';\nexport default class RawInlineBlock {\n    constructor(meta, statements, parameters) {\n        this.meta = meta;\n        this.statements = statements;\n        this.parameters = parameters;\n    }\n    scan() {\n        return new CompilableTemplate(this.statements, { parameters: this.parameters, meta: this.meta });\n    }\n}","import { dict, EMPTY_ARRAY, expect, fillNulls, Stack } from '@glimmer/util';\nimport { ComponentBuilder } from '../../compiler';\nimport { Register } from '../../opcodes';\nimport { expr, InvokeDynamicLayout } from '../../syntax/functions';\nimport RawInlineBlock from '../../syntax/raw-block';\nimport { IsComponentDefinitionReference } from '../opcodes/content';\nimport * as content from './content';\nimport * as vm from './vm';\nclass Labels {\n    constructor() {\n        this.labels = dict();\n        this.targets = [];\n    }\n    label(name, index) {\n        this.labels[name] = index;\n    }\n    target(at, Target, target) {\n        this.targets.push({ at, Target, target });\n    }\n    patch(opcodes) {\n        let { targets, labels } = this;\n        for (let i = 0; i < targets.length; i++) {\n            let { at, Target, target } = targets[i];\n            opcodes.set(at, Target, labels[target]);\n        }\n    }\n}\nexport class BasicOpcodeBuilder {\n    constructor(env, meta, program) {\n        this.env = env;\n        this.meta = meta;\n        this.program = program;\n        this.labelsStack = new Stack();\n        this.constants = env.constants;\n        this.start = program.next;\n    }\n    get pos() {\n        return this.program.current;\n    }\n    get nextPos() {\n        return this.program.next;\n    }\n    upvars(count) {\n        return fillNulls(count);\n    }\n    reserve(name) {\n        this.push(name, 0, 0, 0);\n    }\n    push(name, op1 = 0, op2 = 0, op3 = 0) {\n        return this.program.push(name, op1, op2, op3);\n    }\n    finalize() {\n        return this.push(22 /* Return */);\n    }\n    // args\n    pushArgs(synthetic) {\n        this.push(57 /* PushArgs */, synthetic === true ? 1 : 0);\n    }\n    // helpers\n    get labels() {\n        return expect(this.labelsStack.current, 'bug: not in a label stack');\n    }\n    startLabels() {\n        this.labelsStack.push(new Labels());\n    }\n    stopLabels() {\n        let label = expect(this.labelsStack.pop(), 'unbalanced push and pop labels');\n        label.patch(this.program);\n    }\n    // components\n    pushComponentManager(definition) {\n        this.push(55 /* PushComponentManager */, this.other(definition));\n    }\n    pushDynamicComponentManager() {\n        this.push(56 /* PushDynamicComponentManager */);\n    }\n    prepareArgs(state) {\n        this.push(58 /* PrepareArgs */, state);\n    }\n    createComponent(state, hasDefault, hasInverse) {\n        let flag = (hasDefault === true ? 1 : 0) | (hasInverse === true ? 1 : 0) << 1;\n        this.push(59 /* CreateComponent */, flag, state);\n    }\n    registerComponentDestructor(state) {\n        this.push(60 /* RegisterComponentDestructor */, state);\n    }\n    beginComponentTransaction() {\n        this.push(64 /* BeginComponentTransaction */);\n    }\n    commitComponentTransaction() {\n        this.push(65 /* CommitComponentTransaction */);\n    }\n    pushComponentOperations() {\n        this.push(61 /* PushComponentOperations */);\n    }\n    getComponentSelf(state) {\n        this.push(62 /* GetComponentSelf */, state);\n    }\n    getComponentLayout(state) {\n        this.push(63 /* GetComponentLayout */, state);\n    }\n    didCreateElement(state) {\n        this.push(66 /* DidCreateElement */, state);\n    }\n    didRenderLayout(state) {\n        this.push(67 /* DidRenderLayout */, state);\n    }\n    // partial\n    getPartialTemplate() {\n        this.push(68 /* GetPartialTemplate */);\n    }\n    resolveMaybeLocal(name) {\n        this.push(69 /* ResolveMaybeLocal */, this.string(name));\n    }\n    // debugger\n    debugger(symbols, evalInfo) {\n        this.push(70 /* Debugger */, this.constants.other(symbols), this.constants.array(evalInfo));\n    }\n    // content\n    dynamicContent(Opcode) {\n        this.push(25 /* DynamicContent */, this.other(Opcode));\n    }\n    cautiousAppend() {\n        this.dynamicContent(new content.OptimizedCautiousAppendOpcode());\n    }\n    trustingAppend() {\n        this.dynamicContent(new content.OptimizedTrustingAppendOpcode());\n    }\n    // dom\n    text(text) {\n        this.push(23 /* Text */, this.constants.string(text));\n    }\n    openPrimitiveElement(tag) {\n        this.push(26 /* OpenElement */, this.constants.string(tag));\n    }\n    openElementWithOperations(tag) {\n        this.push(27 /* OpenElementWithOperations */, this.constants.string(tag));\n    }\n    openDynamicElement() {\n        this.push(28 /* OpenDynamicElement */);\n    }\n    flushElement() {\n        this.push(32 /* FlushElement */);\n    }\n    closeElement() {\n        this.push(33 /* CloseElement */);\n    }\n    staticAttr(_name, _namespace, _value) {\n        let name = this.constants.string(_name);\n        let namespace = _namespace ? this.constants.string(_namespace) : 0;\n        let value = this.constants.string(_value);\n        this.push(29 /* StaticAttr */, name, value, namespace);\n    }\n    dynamicAttrNS(_name, _namespace, trusting) {\n        let name = this.constants.string(_name);\n        let namespace = this.constants.string(_namespace);\n        this.push(31 /* DynamicAttrNS */, name, namespace, trusting === true ? 1 : 0);\n    }\n    dynamicAttr(_name, trusting) {\n        let name = this.constants.string(_name);\n        this.push(30 /* DynamicAttr */, name, trusting === true ? 1 : 0);\n    }\n    comment(_comment) {\n        let comment = this.constants.string(_comment);\n        this.push(24 /* Comment */, comment);\n    }\n    modifier(_definition) {\n        this.push(34 /* Modifier */, this.other(_definition));\n    }\n    // lists\n    putIterator() {\n        this.push(53 /* PutIterator */);\n    }\n    enterList(start) {\n        this.reserve(51 /* EnterList */);\n        this.labels.target(this.pos, 51 /* EnterList */, start);\n    }\n    exitList() {\n        this.push(52 /* ExitList */);\n    }\n    iterate(breaks) {\n        this.reserve(54 /* Iterate */);\n        this.labels.target(this.pos, 54 /* Iterate */, breaks);\n    }\n    // expressions\n    setVariable(symbol) {\n        this.push(4 /* SetVariable */, symbol);\n    }\n    getVariable(symbol) {\n        this.push(5 /* GetVariable */, symbol);\n    }\n    getProperty(key) {\n        this.push(6 /* GetProperty */, this.string(key));\n    }\n    getBlock(symbol) {\n        this.push(8 /* GetBlock */, symbol);\n    }\n    hasBlock(symbol) {\n        this.push(9 /* HasBlock */, symbol);\n    }\n    hasBlockParams(symbol) {\n        this.push(10 /* HasBlockParams */, symbol);\n    }\n    concat(size) {\n        this.push(11 /* Concat */, size);\n    }\n    function(f) {\n        this.push(2 /* Function */, this.func(f));\n    }\n    load(register) {\n        this.push(17 /* Load */, register);\n    }\n    fetch(register) {\n        this.push(18 /* Fetch */, register);\n    }\n    dup(register = Register.sp, offset = 0) {\n        return this.push(15 /* Dup */, register, offset);\n    }\n    pop(count = 1) {\n        return this.push(16 /* Pop */, count);\n    }\n    // vm\n    pushRemoteElement() {\n        this.push(35 /* PushRemoteElement */);\n    }\n    popRemoteElement() {\n        this.push(36 /* PopRemoteElement */);\n    }\n    label(name) {\n        this.labels.label(name, this.nextPos);\n    }\n    pushRootScope(symbols, bindCallerScope) {\n        this.push(19 /* RootScope */, symbols, bindCallerScope ? 1 : 0);\n    }\n    pushChildScope() {\n        this.push(20 /* ChildScope */);\n    }\n    popScope() {\n        this.push(21 /* PopScope */);\n    }\n    returnTo(label) {\n        this.reserve(12 /* Immediate */);\n        this.labels.target(this.pos, 12 /* Immediate */, label);\n        this.load(Register.ra);\n    }\n    pushDynamicScope() {\n        this.push(38 /* PushDynamicScope */);\n    }\n    popDynamicScope() {\n        this.push(39 /* PopDynamicScope */);\n    }\n    pushImmediate(value) {\n        this.push(13 /* Constant */, this.other(value));\n    }\n    primitive(_primitive) {\n        let flag = 0;\n        let primitive;\n        switch (typeof _primitive) {\n            case 'number':\n                primitive = _primitive;\n                break;\n            case 'string':\n                primitive = this.string(_primitive);\n                flag = 1;\n                break;\n            case 'boolean':\n                primitive = _primitive | 0;\n                flag = 2;\n                break;\n            case 'object':\n                // assume null\n                primitive = 2;\n                flag = 2;\n                break;\n            case 'undefined':\n                primitive = 3;\n                flag = 2;\n                break;\n            default:\n                throw new Error('Invalid primitive passed to pushPrimitive');\n        }\n        this.push(14 /* PrimitiveReference */, flag << 30 | primitive);\n    }\n    helper(func) {\n        this.push(1 /* Helper */, this.func(func));\n    }\n    pushBlock(block) {\n        this.push(7 /* PushBlock */, this.block(block));\n    }\n    bindDynamicScope(_names) {\n        this.push(37 /* BindDynamicScope */, this.names(_names));\n    }\n    enter(args) {\n        this.push(48 /* Enter */, args);\n    }\n    exit() {\n        this.push(49 /* Exit */);\n    }\n    return() {\n        this.push(22 /* Return */);\n    }\n    pushFrame() {\n        this.push(46 /* PushFrame */);\n    }\n    popFrame() {\n        this.push(47 /* PopFrame */);\n    }\n    compileDynamicBlock() {\n        this.push(40 /* CompileDynamicBlock */);\n    }\n    invokeDynamic(invoker) {\n        this.push(42 /* InvokeDynamic */, this.other(invoker));\n    }\n    invokeStatic(block, callerCount = 0) {\n        let { parameters } = block.symbolTable;\n        let calleeCount = parameters.length;\n        let count = Math.min(callerCount, calleeCount);\n        this.pushFrame();\n        if (count) {\n            this.pushChildScope();\n            for (let i = 0; i < count; i++) {\n                this.dup(Register.fp, callerCount - i);\n                this.setVariable(parameters[i]);\n            }\n        }\n        let _block = this.constants.block(block);\n        this.push(41 /* InvokeStatic */, _block);\n        if (count) {\n            this.popScope();\n        }\n        this.popFrame();\n    }\n    test(testFunc) {\n        let _func;\n        if (testFunc === 'const') {\n            _func = vm.ConstTest;\n        } else if (testFunc === 'simple') {\n            _func = vm.SimpleTest;\n        } else if (testFunc === 'environment') {\n            _func = vm.EnvironmentTest;\n        } else if (typeof testFunc === 'function') {\n            _func = testFunc;\n        } else {\n            throw new Error('unreachable');\n        }\n        let func = this.constants.function(_func);\n        this.push(50 /* Test */, func);\n    }\n    jump(target) {\n        this.reserve(43 /* Jump */);\n        this.labels.target(this.pos, 43 /* Jump */, target);\n    }\n    jumpIf(target) {\n        this.reserve(44 /* JumpIf */);\n        this.labels.target(this.pos, 44 /* JumpIf */, target);\n    }\n    jumpUnless(target) {\n        this.reserve(45 /* JumpUnless */);\n        this.labels.target(this.pos, 45 /* JumpUnless */, target);\n    }\n    string(_string) {\n        return this.constants.string(_string);\n    }\n    names(_names) {\n        let names = [];\n        for (let i = 0; i < _names.length; i++) {\n            let n = _names[i];\n            names[i] = this.constants.string(n);\n        }\n        return this.constants.array(names);\n    }\n    symbols(symbols) {\n        return this.constants.array(symbols);\n    }\n    other(value) {\n        return this.constants.other(value);\n    }\n    block(block) {\n        return block ? this.constants.block(block) : 0;\n    }\n    func(func) {\n        return this.constants.function(func);\n    }\n}\nfunction isCompilableExpression(expr) {\n    return typeof expr === 'object' && expr !== null && typeof expr.compile === 'function';\n}\nexport default class OpcodeBuilder extends BasicOpcodeBuilder {\n    constructor(env, meta, program = env.program) {\n        super(env, meta, program);\n        this.component = new ComponentBuilder(this);\n    }\n    compileArgs(params, hash, synthetic) {\n        let positional = 0;\n        if (params) {\n            for (let i = 0; i < params.length; i++) {\n                expr(params[i], this);\n            }\n            positional = params.length;\n        }\n        this.pushImmediate(positional);\n        let names = EMPTY_ARRAY;\n        if (hash) {\n            names = hash[0];\n            let val = hash[1];\n            for (let i = 0; i < val.length; i++) {\n                expr(val[i], this);\n            }\n        }\n        this.pushImmediate(names);\n        this.pushArgs(synthetic);\n    }\n    compile(expr) {\n        if (isCompilableExpression(expr)) {\n            return expr.compile(this);\n        } else {\n            return expr;\n        }\n    }\n    guardedAppend(expression, trusting) {\n        this.startLabels();\n        this.pushFrame();\n        this.returnTo('END');\n        expr(expression, this);\n        this.dup();\n        this.test(reference => {\n            return IsComponentDefinitionReference.create(reference);\n        });\n        this.enter(2);\n        this.jumpUnless('ELSE');\n        this.pushDynamicComponentManager();\n        this.invokeComponent(null, null, null, null, null);\n        this.exit();\n        this.return();\n        this.label('ELSE');\n        if (trusting) {\n            this.trustingAppend();\n        } else {\n            this.cautiousAppend();\n        }\n        this.exit();\n        this.return();\n        this.label('END');\n        this.popFrame();\n        this.stopLabels();\n    }\n    invokeComponent(attrs, params, hash, block, inverse = null) {\n        this.fetch(Register.s0);\n        this.dup(Register.sp, 1);\n        this.load(Register.s0);\n        this.pushBlock(block);\n        this.pushBlock(inverse);\n        this.compileArgs(params, hash, false);\n        this.prepareArgs(Register.s0);\n        this.beginComponentTransaction();\n        this.pushDynamicScope();\n        this.createComponent(Register.s0, block !== null, inverse !== null);\n        this.registerComponentDestructor(Register.s0);\n        this.getComponentSelf(Register.s0);\n        this.getComponentLayout(Register.s0);\n        this.invokeDynamic(new InvokeDynamicLayout(attrs && attrs.scan()));\n        this.popFrame();\n        this.popScope();\n        this.popDynamicScope();\n        this.commitComponentTransaction();\n        this.load(Register.s0);\n    }\n    template(block) {\n        if (!block) return null;\n        return new RawInlineBlock(this.meta, block.statements, block.parameters);\n    }\n}","import { map } from '@glimmer/reference';\nimport { assert, dict, EMPTY_ARRAY, LOGGER, unwrap } from '@glimmer/util';\nimport * as WireFormat from '@glimmer/wire-format';\nimport OpcodeBuilder from '../compiled/opcodes/builder';\nimport { Register } from '../opcodes';\nimport * as ClientSide from '../syntax/client-side';\nimport RawInlineBlock from './raw-block';\nvar Ops = WireFormat.Ops;\nexport const ATTRS_BLOCK = '&attrs';\nclass Compilers {\n    constructor(offset = 0) {\n        this.offset = offset;\n        this.names = dict();\n        this.funcs = [];\n    }\n    add(name, func) {\n        this.funcs.push(func);\n        this.names[name] = this.funcs.length - 1;\n    }\n    compile(sexp, builder) {\n        let name = sexp[this.offset];\n        let index = this.names[name];\n        let func = this.funcs[index];\n        assert(!!func, `expected an implementation for ${this.offset === 0 ? Ops[sexp[0]] : ClientSide.Ops[sexp[1]]}`);\n        func(sexp, builder);\n    }\n}\nconst STATEMENTS = new Compilers();\nconst CLIENT_SIDE = new Compilers(1);\nSTATEMENTS.add(Ops.Text, (sexp, builder) => {\n    builder.text(sexp[1]);\n});\nSTATEMENTS.add(Ops.Comment, (sexp, builder) => {\n    builder.comment(sexp[1]);\n});\nSTATEMENTS.add(Ops.CloseElement, (_sexp, builder) => {\n    LOGGER.trace('close-element statement');\n    builder.closeElement();\n});\nSTATEMENTS.add(Ops.FlushElement, (_sexp, builder) => {\n    builder.flushElement();\n});\nSTATEMENTS.add(Ops.Modifier, (sexp, builder) => {\n    let { env, meta } = builder;\n    let [, name, params, hash] = sexp;\n    if (env.hasModifier(name, meta.templateMeta)) {\n        builder.compileArgs(params, hash, true);\n        builder.modifier(env.lookupModifier(name, meta.templateMeta));\n    } else {\n        throw new Error(`Compile Error ${name} is not a modifier: Helpers may not be used in the element form.`);\n    }\n});\nSTATEMENTS.add(Ops.StaticAttr, (sexp, builder) => {\n    let [, name, value, namespace] = sexp;\n    builder.staticAttr(name, namespace, value);\n});\nSTATEMENTS.add(Ops.DynamicAttr, (sexp, builder) => {\n    dynamicAttr(sexp, false, builder);\n});\nSTATEMENTS.add(Ops.TrustingAttr, (sexp, builder) => {\n    dynamicAttr(sexp, true, builder);\n});\nfunction dynamicAttr(sexp, trusting, builder) {\n    let [, name, value, namespace] = sexp;\n    expr(value, builder);\n    if (namespace) {\n        builder.dynamicAttrNS(name, namespace, trusting);\n    } else {\n        builder.dynamicAttr(name, trusting);\n    }\n}\nSTATEMENTS.add(Ops.OpenElement, (sexp, builder) => {\n    builder.openPrimitiveElement(sexp[1]);\n});\nCLIENT_SIDE.add(ClientSide.Ops.OpenComponentElement, (sexp, builder) => {\n    builder.pushComponentOperations();\n    builder.openElementWithOperations(sexp[2]);\n});\nCLIENT_SIDE.add(ClientSide.Ops.DidCreateElement, (_sexp, builder) => {\n    builder.didCreateElement(Register.s0);\n});\nCLIENT_SIDE.add(ClientSide.Ops.DidRenderLayout, (_sexp, builder) => {\n    builder.didRenderLayout(Register.s0);\n});\nSTATEMENTS.add(Ops.Append, (sexp, builder) => {\n    let [, value, trusting] = sexp;\n    let { inlines } = builder.env.macros();\n    let returned = inlines.compile(sexp, builder) || value;\n    if (returned === true) return;\n    let isGet = E.isGet(value);\n    let isMaybeLocal = E.isMaybeLocal(value);\n    if (trusting) {\n        builder.guardedAppend(value, true);\n    } else {\n        if (isGet || isMaybeLocal) {\n            builder.guardedAppend(value, false);\n        } else {\n            expr(value, builder);\n            builder.cautiousAppend();\n        }\n    }\n});\nSTATEMENTS.add(Ops.Block, (sexp, builder) => {\n    let [, name, params, hash, _template, _inverse] = sexp;\n    let template = builder.template(_template);\n    let inverse = builder.template(_inverse);\n    let templateBlock = template && template.scan();\n    let inverseBlock = inverse && inverse.scan();\n    let { blocks } = builder.env.macros();\n    blocks.compile(name, params, hash, templateBlock, inverseBlock, builder);\n});\nexport class InvokeDynamicLayout {\n    constructor(attrs) {\n        this.attrs = attrs;\n    }\n    invoke(vm, layout) {\n        let { symbols, hasEval } = layout.symbolTable;\n        let stack = vm.stack;\n        let scope = vm.pushRootScope(symbols.length + 1, true);\n        scope.bindSelf(stack.pop());\n        scope.bindBlock(symbols.indexOf(ATTRS_BLOCK) + 1, this.attrs);\n        let lookup = null;\n        let $eval = -1;\n        if (hasEval) {\n            $eval = symbols.indexOf('$eval') + 1;\n            lookup = dict();\n        }\n        let callerNames = stack.pop();\n        for (let i = callerNames.length - 1; i >= 0; i--) {\n            let symbol = symbols.indexOf(callerNames[i]);\n            let value = stack.pop();\n            if (symbol !== -1) scope.bindSymbol(symbol + 1, value);\n            if (hasEval) lookup[callerNames[i]] = value;\n        }\n        let numPositionalArgs = stack.pop();\n        assert(typeof numPositionalArgs === 'number', '[BUG] Incorrect value of positional argument count found during invoke-dynamic-layout.');\n        // Currently we don't support accessing positional args in templates, so just throw them away\n        stack.pop(numPositionalArgs);\n        let inverseSymbol = symbols.indexOf('&inverse');\n        let inverse = stack.pop();\n        if (inverseSymbol !== -1) {\n            scope.bindBlock(inverseSymbol + 1, inverse);\n        }\n        if (lookup) lookup['&inverse'] = inverse;\n        let defaultSymbol = symbols.indexOf('&default');\n        let defaultBlock = stack.pop();\n        if (defaultSymbol !== -1) {\n            scope.bindBlock(defaultSymbol + 1, defaultBlock);\n        }\n        if (lookup) lookup['&default'] = defaultBlock;\n        if (lookup) scope.bindEvalScope(lookup);\n        vm.pushFrame();\n        vm.call(layout.start);\n    }\n    toJSON() {\n        return { GlimmerDebug: '<invoke-dynamic-layout>' };\n    }\n}\nSTATEMENTS.add(Ops.Component, (sexp, builder) => {\n    let [, tag, attrs, args, block] = sexp;\n    if (builder.env.hasComponentDefinition(tag, builder.meta.templateMeta)) {\n        let child = builder.template(block);\n        let attrsBlock = new RawInlineBlock(builder.meta, attrs, EMPTY_ARRAY);\n        let definition = builder.env.getComponentDefinition(tag, builder.meta.templateMeta);\n        builder.pushComponentManager(definition);\n        builder.invokeComponent(attrsBlock, null, args, child && child.scan());\n    } else if (block && block.parameters.length) {\n        throw new Error(`Compile Error: Cannot find component ${tag}`);\n    } else {\n        builder.openPrimitiveElement(tag);\n        for (let i = 0; i < attrs.length; i++) {\n            STATEMENTS.compile(attrs[i], builder);\n        }\n        builder.flushElement();\n        if (block) {\n            let stmts = block.statements;\n            for (let i = 0; i < stmts.length; i++) {\n                STATEMENTS.compile(stmts[i], builder);\n            }\n        }\n        builder.closeElement();\n    }\n});\nexport class PartialInvoker {\n    constructor(outerSymbols, evalInfo) {\n        this.outerSymbols = outerSymbols;\n        this.evalInfo = evalInfo;\n    }\n    invoke(vm, _partial) {\n        let partial = unwrap(_partial);\n        let partialSymbols = partial.symbolTable.symbols;\n        let outerScope = vm.scope();\n        let partialScope = vm.pushRootScope(partialSymbols.length, false);\n        partialScope.bindCallerScope(outerScope.getCallerScope());\n        partialScope.bindEvalScope(outerScope.getEvalScope());\n        partialScope.bindSelf(outerScope.getSelf());\n        let { evalInfo, outerSymbols } = this;\n        let locals = dict();\n        for (let i = 0; i < evalInfo.length; i++) {\n            let slot = evalInfo[i];\n            let name = outerSymbols[slot - 1];\n            let ref = outerScope.getSymbol(slot);\n            locals[name] = ref;\n        }\n        let evalScope = outerScope.getEvalScope();\n        for (let i = 0; i < partialSymbols.length; i++) {\n            let name = partialSymbols[i];\n            let symbol = i + 1;\n            let value = evalScope[name];\n            if (value !== undefined) partialScope.bind(symbol, value);\n        }\n        partialScope.bindPartialMap(locals);\n        vm.pushFrame();\n        vm.call(partial.start);\n    }\n}\nSTATEMENTS.add(Ops.Partial, (sexp, builder) => {\n    let [, name, evalInfo] = sexp;\n    let { templateMeta, symbols } = builder.meta;\n    function helper(vm, args) {\n        let { env } = vm;\n        let nameRef = args.positional.at(0);\n        return map(nameRef, n => {\n            if (typeof n === 'string' && n) {\n                if (!env.hasPartial(n, templateMeta)) {\n                    throw new Error(`Could not find a partial named \"${n}\"`);\n                }\n                return env.lookupPartial(n, templateMeta);\n            } else if (n) {\n                throw new Error(`Could not find a partial named \"${String(n)}\"`);\n            } else {\n                return null;\n            }\n        });\n    }\n    builder.startLabels();\n    builder.pushFrame();\n    builder.returnTo('END');\n    expr(name, builder);\n    builder.pushImmediate(1);\n    builder.pushImmediate(EMPTY_ARRAY);\n    builder.pushArgs(true);\n    builder.helper(helper);\n    builder.dup();\n    builder.test('simple');\n    builder.enter(2);\n    builder.jumpUnless('ELSE');\n    builder.getPartialTemplate();\n    builder.compileDynamicBlock();\n    builder.invokeDynamic(new PartialInvoker(symbols, evalInfo));\n    builder.popScope();\n    builder.popFrame();\n    builder.label('ELSE');\n    builder.exit();\n    builder.return();\n    builder.label('END');\n    builder.popFrame();\n    builder.stopLabels();\n});\nclass InvokeDynamicYield {\n    constructor(callerCount) {\n        this.callerCount = callerCount;\n    }\n    invoke(vm, block) {\n        let { callerCount } = this;\n        let stack = vm.stack;\n        if (!block) {\n            // To balance the pop{Frame,Scope}\n            vm.pushFrame();\n            vm.pushCallerScope();\n            return;\n        }\n        let table = block.symbolTable;\n        let locals = table.parameters; // always present in inline blocks\n        let calleeCount = locals ? locals.length : 0;\n        let count = Math.min(callerCount, calleeCount);\n        vm.pushFrame();\n        vm.pushCallerScope(calleeCount > 0);\n        let scope = vm.scope();\n        for (let i = 0; i < count; i++) {\n            scope.bindSymbol(locals[i], stack.fromBase(callerCount - i));\n        }\n        vm.call(block.start);\n    }\n    toJSON() {\n        return { GlimmerDebug: `<invoke-dynamic-yield caller-count=${this.callerCount}>` };\n    }\n}\nSTATEMENTS.add(Ops.Yield, (sexp, builder) => {\n    let [, to, params] = sexp;\n    let count = compileList(params, builder);\n    builder.getBlock(to);\n    builder.compileDynamicBlock();\n    builder.invokeDynamic(new InvokeDynamicYield(count));\n    builder.popScope();\n    builder.popFrame();\n    if (count) {\n        builder.pop(count);\n    }\n});\nSTATEMENTS.add(Ops.Debugger, (sexp, builder) => {\n    let [, evalInfo] = sexp;\n    builder.debugger(builder.meta.symbols, evalInfo);\n});\nSTATEMENTS.add(Ops.ClientSideStatement, (sexp, builder) => {\n    CLIENT_SIDE.compile(sexp, builder);\n});\nconst EXPRESSIONS = new Compilers();\nconst CLIENT_SIDE_EXPRS = new Compilers(1);\nvar E = WireFormat.Expressions;\nexport function expr(expression, builder) {\n    if (Array.isArray(expression)) {\n        EXPRESSIONS.compile(expression, builder);\n    } else {\n        builder.primitive(expression);\n    }\n}\nEXPRESSIONS.add(Ops.Unknown, (sexp, builder) => {\n    let name = sexp[1];\n    if (builder.env.hasHelper(name, builder.meta.templateMeta)) {\n        EXPRESSIONS.compile([Ops.Helper, name, EMPTY_ARRAY, null], builder);\n    } else if (builder.meta.asPartial) {\n        builder.resolveMaybeLocal(name);\n    } else {\n        builder.getVariable(0);\n        builder.getProperty(name);\n    }\n});\nEXPRESSIONS.add(Ops.Concat, (sexp, builder) => {\n    let parts = sexp[1];\n    for (let i = 0; i < parts.length; i++) {\n        expr(parts[i], builder);\n    }\n    builder.concat(parts.length);\n});\nCLIENT_SIDE_EXPRS.add(ClientSide.Ops.FunctionExpression, (sexp, builder) => {\n    builder.function(sexp[2]);\n});\nEXPRESSIONS.add(Ops.Helper, (sexp, builder) => {\n    let { env, meta } = builder;\n    let [, name, params, hash] = sexp;\n    if (env.hasHelper(name, meta.templateMeta)) {\n        builder.compileArgs(params, hash, true);\n        builder.helper(env.lookupHelper(name, meta.templateMeta));\n    } else {\n        throw new Error(`Compile Error: ${name} is not a helper`);\n    }\n});\nEXPRESSIONS.add(Ops.Get, (sexp, builder) => {\n    let [, head, path] = sexp;\n    builder.getVariable(head);\n    for (let i = 0; i < path.length; i++) {\n        builder.getProperty(path[i]);\n    }\n});\nEXPRESSIONS.add(Ops.MaybeLocal, (sexp, builder) => {\n    let [, path] = sexp;\n    if (builder.meta.asPartial) {\n        let head = path[0];\n        path = path.slice(1);\n        builder.resolveMaybeLocal(head);\n    } else {\n        builder.getVariable(0);\n    }\n    for (let i = 0; i < path.length; i++) {\n        builder.getProperty(path[i]);\n    }\n});\nEXPRESSIONS.add(Ops.Undefined, (_sexp, builder) => {\n    return builder.primitive(undefined);\n});\nEXPRESSIONS.add(Ops.HasBlock, (sexp, builder) => {\n    builder.hasBlock(sexp[1]);\n});\nEXPRESSIONS.add(Ops.HasBlockParams, (sexp, builder) => {\n    builder.hasBlockParams(sexp[1]);\n});\nEXPRESSIONS.add(Ops.ClientSideExpression, (sexp, builder) => {\n    CLIENT_SIDE_EXPRS.compile(sexp, builder);\n});\nexport function compileList(params, builder) {\n    if (!params) return 0;\n    for (let i = 0; i < params.length; i++) {\n        expr(params[i], builder);\n    }\n    return params.length;\n}\nexport class Blocks {\n    constructor() {\n        this.names = dict();\n        this.funcs = [];\n    }\n    add(name, func) {\n        this.funcs.push(func);\n        this.names[name] = this.funcs.length - 1;\n    }\n    addMissing(func) {\n        this.missing = func;\n    }\n    compile(name, params, hash, template, inverse, builder) {\n        let index = this.names[name];\n        if (index === undefined) {\n            assert(!!this.missing, `${name} not found, and no catch-all block handler was registered`);\n            let func = this.missing;\n            let handled = func(name, params, hash, template, inverse, builder);\n            assert(!!handled, `${name} not found, and the catch-all block handler didn't handle it`);\n        } else {\n            let func = this.funcs[index];\n            func(params, hash, template, inverse, builder);\n        }\n    }\n}\nexport const BLOCKS = new Blocks();\nexport class Inlines {\n    constructor() {\n        this.names = dict();\n        this.funcs = [];\n    }\n    add(name, func) {\n        this.funcs.push(func);\n        this.names[name] = this.funcs.length - 1;\n    }\n    addMissing(func) {\n        this.missing = func;\n    }\n    compile(sexp, builder) {\n        let value = sexp[1];\n        // TODO: Fix this so that expression macros can return\n        // things like components, so that {{component foo}}\n        // is the same as {{(component foo)}}\n        if (!Array.isArray(value)) return ['expr', value];\n        let name;\n        let params;\n        let hash;\n        if (value[0] === Ops.Helper) {\n            name = value[1];\n            params = value[2];\n            hash = value[3];\n        } else if (value[0] === Ops.Unknown) {\n            name = value[1];\n            params = hash = null;\n        } else {\n            return ['expr', value];\n        }\n        let index = this.names[name];\n        if (index === undefined && this.missing) {\n            let func = this.missing;\n            let returned = func(name, params, hash, builder);\n            return returned === false ? ['expr', value] : returned;\n        } else if (index !== undefined) {\n            let func = this.funcs[index];\n            let returned = func(name, params, hash, builder);\n            return returned === false ? ['expr', value] : returned;\n        } else {\n            return ['expr', value];\n        }\n    }\n}\nexport const INLINES = new Inlines();\npopulateBuiltins(BLOCKS, INLINES);\nexport function populateBuiltins(blocks = new Blocks(), inlines = new Inlines()) {\n    blocks.add('if', (params, _hash, template, inverse, builder) => {\n        //        PutArgs\n        //        Test(Environment)\n        //        Enter(BEGIN, END)\n        // BEGIN: Noop\n        //        JumpUnless(ELSE)\n        //        Evaluate(default)\n        //        Jump(END)\n        // ELSE:  Noop\n        //        Evalulate(inverse)\n        // END:   Noop\n        //        Exit\n        if (!params || params.length !== 1) {\n            throw new Error(`SYNTAX ERROR: #if requires a single argument`);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        expr(params[0], builder);\n        builder.test('environment');\n        builder.enter(1);\n        builder.jumpUnless('ELSE');\n        builder.invokeStatic(unwrap(template));\n        if (inverse) {\n            builder.jump('EXIT');\n            builder.label('ELSE');\n            builder.invokeStatic(inverse);\n            builder.label('EXIT');\n            builder.exit();\n            builder.return();\n        } else {\n            builder.label('ELSE');\n            builder.exit();\n            builder.return();\n        }\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('unless', (params, _hash, template, inverse, builder) => {\n        //        PutArgs\n        //        Test(Environment)\n        //        Enter(BEGIN, END)\n        // BEGIN: Noop\n        //        JumpUnless(ELSE)\n        //        Evaluate(default)\n        //        Jump(END)\n        // ELSE:  Noop\n        //        Evalulate(inverse)\n        // END:   Noop\n        //        Exit\n        if (!params || params.length !== 1) {\n            throw new Error(`SYNTAX ERROR: #unless requires a single argument`);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        expr(params[0], builder);\n        builder.test('environment');\n        builder.enter(1);\n        builder.jumpIf('ELSE');\n        builder.invokeStatic(unwrap(template));\n        if (inverse) {\n            builder.jump('EXIT');\n            builder.label('ELSE');\n            builder.invokeStatic(inverse);\n            builder.label('EXIT');\n            builder.exit();\n            builder.return();\n        } else {\n            builder.label('ELSE');\n            builder.exit();\n            builder.return();\n        }\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('with', (params, _hash, template, inverse, builder) => {\n        //        PutArgs\n        //        Test(Environment)\n        //        Enter(BEGIN, END)\n        // BEGIN: Noop\n        //        JumpUnless(ELSE)\n        //        Evaluate(default)\n        //        Jump(END)\n        // ELSE:  Noop\n        //        Evalulate(inverse)\n        // END:   Noop\n        //        Exit\n        if (!params || params.length !== 1) {\n            throw new Error(`SYNTAX ERROR: #with requires a single argument`);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        expr(params[0], builder);\n        builder.dup();\n        builder.test('environment');\n        builder.enter(2);\n        builder.jumpUnless('ELSE');\n        builder.invokeStatic(unwrap(template), 1);\n        if (inverse) {\n            builder.jump('EXIT');\n            builder.label('ELSE');\n            builder.invokeStatic(inverse);\n            builder.label('EXIT');\n            builder.exit();\n            builder.return();\n        } else {\n            builder.label('ELSE');\n            builder.exit();\n            builder.return();\n        }\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('each', (params, hash, template, inverse, builder) => {\n        //         Enter(BEGIN, END)\n        // BEGIN:  Noop\n        //         PutArgs\n        //         PutIterable\n        //         JumpUnless(ELSE)\n        //         EnterList(BEGIN2, END2)\n        // ITER:   Noop\n        //         NextIter(BREAK)\n        // BEGIN2: Noop\n        //         PushChildScope\n        //         Evaluate(default)\n        //         PopScope\n        // END2:   Noop\n        //         Exit\n        //         Jump(ITER)\n        // BREAK:  Noop\n        //         ExitList\n        //         Jump(END)\n        // ELSE:   Noop\n        //         Evalulate(inverse)\n        // END:    Noop\n        //         Exit\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        if (hash && hash[0][0] === 'key') {\n            expr(hash[1][0], builder);\n        } else {\n            builder.primitive(null);\n        }\n        expr(params[0], builder);\n        builder.enter(2);\n        builder.putIterator();\n        builder.jumpUnless('ELSE');\n        builder.pushFrame();\n        builder.returnTo('ITER');\n        builder.dup(Register.fp, 1);\n        builder.enterList('BODY');\n        builder.label('ITER');\n        builder.iterate('BREAK');\n        builder.label('BODY');\n        builder.invokeStatic(unwrap(template), 2);\n        builder.pop(2);\n        builder.exit();\n        builder.return();\n        builder.label('BREAK');\n        builder.exitList();\n        builder.popFrame();\n        if (inverse) {\n            builder.jump('EXIT');\n            builder.label('ELSE');\n            builder.invokeStatic(inverse);\n            builder.label('EXIT');\n            builder.exit();\n            builder.return();\n        } else {\n            builder.label('ELSE');\n            builder.exit();\n            builder.return();\n        }\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('-in-element', (params, hash, template, _inverse, builder) => {\n        if (!params || params.length !== 1) {\n            throw new Error(`SYNTAX ERROR: #-in-element requires a single argument`);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        if (hash && hash[0].length) {\n            let [keys, values] = hash;\n            if (keys.length === 1 && keys[0] === 'nextSibling') {\n                expr(values[0], builder);\n            } else {\n                throw new Error(`SYNTAX ERROR: #-in-element does not take a \\`${keys[0]}\\` option`);\n            }\n        } else {\n            expr(null, builder);\n        }\n        expr(params[0], builder);\n        builder.dup();\n        builder.test('simple');\n        builder.enter(3);\n        builder.jumpUnless('ELSE');\n        builder.pushRemoteElement();\n        builder.invokeStatic(unwrap(template));\n        builder.popRemoteElement();\n        builder.label('ELSE');\n        builder.exit();\n        builder.return();\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('-with-dynamic-vars', (_params, hash, template, _inverse, builder) => {\n        if (hash) {\n            let [names, expressions] = hash;\n            compileList(expressions, builder);\n            builder.pushDynamicScope();\n            builder.bindDynamicScope(names);\n            builder.invokeStatic(unwrap(template));\n            builder.popDynamicScope();\n        } else {\n            builder.invokeStatic(unwrap(template));\n        }\n    });\n    return { blocks, inlines };\n}\nexport function compileStatement(statement, builder) {\n    STATEMENTS.compile(statement, builder);\n}\nexport function compileStatements(statements, meta, env) {\n    let b = new OpcodeBuilder(env, meta);\n    for (let i = 0; i < statements.length; i++) {\n        compileStatement(statements[i], b);\n    }\n    return b;\n}","import { CompiledDynamicTemplate, CompiledStaticTemplate } from '../compiled/blocks';\nimport { debugSlice } from '../opcodes';\nimport { compileStatements } from './functions';\nexport default class CompilableTemplate {\n    constructor(statements, symbolTable) {\n        this.statements = statements;\n        this.symbolTable = symbolTable;\n        this.compiledStatic = null;\n        this.compiledDynamic = null;\n    }\n    compileStatic(env) {\n        let { compiledStatic } = this;\n        if (!compiledStatic) {\n            let builder = compileStatements(this.statements, this.symbolTable.meta, env);\n            let start = builder.start;\n            let end = builder.finalize();\n            debugSlice(env, start, end);\n            compiledStatic = this.compiledStatic = new CompiledStaticTemplate(start, end);\n        }\n        return compiledStatic;\n    }\n    compileDynamic(env) {\n        let { compiledDynamic } = this;\n        if (!compiledDynamic) {\n            let staticBlock = this.compileStatic(env);\n            compiledDynamic = new CompiledDynamicTemplate(staticBlock.start, staticBlock.end, this.symbolTable);\n        }\n        return compiledDynamic;\n    }\n}","import { EMPTY_ARRAY } from '@glimmer/util';\nimport * as WireFormat from '@glimmer/wire-format';\nimport * as ClientSide from './syntax/client-side';\nimport CompilableTemplate from './syntax/compilable-template';\nimport { ATTRS_BLOCK } from './syntax/functions';\nvar Ops = WireFormat.Ops;\nexport default class Scanner {\n    constructor(block, env) {\n        this.block = block;\n        this.env = env;\n    }\n    scanEntryPoint(meta) {\n        let { block } = this;\n        let { statements, symbols, hasEval } = block;\n        return new CompilableTemplate(statements, { meta, symbols, hasEval });\n    }\n    scanBlock(meta) {\n        let { block } = this;\n        let { statements } = block;\n        return new CompilableTemplate(statements, { meta, parameters: EMPTY_ARRAY });\n    }\n    scanLayout(meta, attrs, componentName) {\n        let { block } = this;\n        let { statements, symbols, hasEval } = block;\n        let symbolTable = { meta, hasEval, symbols };\n        let newStatements = [];\n        let toplevel;\n        let inTopLevel = false;\n        for (let i = 0; i < statements.length; i++) {\n            let statement = statements[i];\n            if (WireFormat.Statements.isComponent(statement)) {\n                let tagName = statement[1];\n                if (!this.env.hasComponentDefinition(tagName, meta.templateMeta)) {\n                    if (toplevel !== undefined) {\n                        newStatements.push([Ops.OpenElement, tagName]);\n                    } else {\n                        toplevel = tagName;\n                        decorateTopLevelElement(tagName, symbols, attrs, newStatements);\n                    }\n                    addFallback(statement, newStatements);\n                } else {\n                    if (toplevel === undefined && tagName === componentName) {\n                        toplevel = tagName;\n                        decorateTopLevelElement(tagName, symbols, attrs, newStatements);\n                        addFallback(statement, newStatements);\n                    } else {\n                        newStatements.push(statement);\n                    }\n                }\n            } else {\n                if (toplevel === undefined && WireFormat.Statements.isOpenElement(statement)) {\n                    toplevel = statement[1];\n                    inTopLevel = true;\n                    decorateTopLevelElement(toplevel, symbols, attrs, newStatements);\n                } else {\n                    if (inTopLevel) {\n                        if (WireFormat.Statements.isFlushElement(statement)) {\n                            inTopLevel = false;\n                        } else if (WireFormat.Statements.isModifier(statement)) {\n                            throw Error(`Found modifier \"${statement[1]}\" on the top-level element of \"${componentName}\"\\. Modifiers cannot be on the top-level element`);\n                        }\n                    }\n                    newStatements.push(statement);\n                }\n            }\n        }\n        newStatements.push([Ops.ClientSideStatement, ClientSide.Ops.DidRenderLayout]);\n        return new CompilableTemplate(newStatements, symbolTable);\n    }\n}\nfunction addFallback(statement, buffer) {\n    let [,, attrs,, block] = statement;\n    for (let i = 0; i < attrs.length; i++) {\n        buffer.push(attrs[i]);\n    }\n    buffer.push([Ops.FlushElement]);\n    if (block) {\n        let { statements } = block;\n        for (let i = 0; i < statements.length; i++) {\n            buffer.push(statements[i]);\n        }\n    }\n    buffer.push([Ops.CloseElement]);\n}\nfunction decorateTopLevelElement(tagName, symbols, attrs, buffer) {\n    let attrsSymbol = symbols.push(ATTRS_BLOCK);\n    buffer.push([Ops.ClientSideStatement, ClientSide.Ops.OpenComponentElement, tagName]);\n    buffer.push([Ops.ClientSideStatement, ClientSide.Ops.DidCreateElement]);\n    buffer.push([Ops.Yield, attrsSymbol, EMPTY_ARRAY]);\n    buffer.push(...attrs);\n}","export class Constants {\n    constructor() {\n        // `0` means NULL\n        this.references = [];\n        this.strings = [];\n        this.expressions = [];\n        this.arrays = [];\n        this.blocks = [];\n        this.functions = [];\n        this.others = [];\n    }\n    getReference(value) {\n        return this.references[value - 1];\n    }\n    reference(value) {\n        let index = this.references.length;\n        this.references.push(value);\n        return index + 1;\n    }\n    getString(value) {\n        return this.strings[value - 1];\n    }\n    string(value) {\n        let index = this.strings.length;\n        this.strings.push(value);\n        return index + 1;\n    }\n    getExpression(value) {\n        return this.expressions[value - 1];\n    }\n    getArray(value) {\n        return this.arrays[value - 1];\n    }\n    getNames(value) {\n        let _names = [];\n        let names = this.getArray(value);\n        for (let i = 0; i < names.length; i++) {\n            let n = names[i];\n            _names[i] = this.getString(n);\n        }\n        return _names;\n    }\n    array(values) {\n        let index = this.arrays.length;\n        this.arrays.push(values);\n        return index + 1;\n    }\n    getBlock(value) {\n        return this.blocks[value - 1];\n    }\n    block(block) {\n        let index = this.blocks.length;\n        this.blocks.push(block);\n        return index + 1;\n    }\n    getFunction(value) {\n        return this.functions[value - 1];\n    }\n    function(f) {\n        let index = this.functions.length;\n        this.functions.push(f);\n        return index + 1;\n    }\n    getOther(value) {\n        return this.others[value - 1];\n    }\n    other(other) {\n        let index = this.others.length;\n        this.others.push(other);\n        return index + 1;\n    }\n}","import { normalizeTextValue } from '../compiled/opcodes/content';\nimport { isSafeString } from '../upsert';\nconst badProtocols = ['javascript:', 'vbscript:'];\nconst badTags = ['A', 'BODY', 'LINK', 'IMG', 'IFRAME', 'BASE', 'FORM'];\nconst badTagsForDataURI = ['EMBED'];\nconst badAttributes = ['href', 'src', 'background', 'action'];\nconst badAttributesForDataURI = ['src'];\nfunction has(array, item) {\n    return array.indexOf(item) !== -1;\n}\nfunction checkURI(tagName, attribute) {\n    return (tagName === null || has(badTags, tagName)) && has(badAttributes, attribute);\n}\nfunction checkDataURI(tagName, attribute) {\n    if (tagName === null) return false;\n    return has(badTagsForDataURI, tagName) && has(badAttributesForDataURI, attribute);\n}\nexport function requiresSanitization(tagName, attribute) {\n    return checkURI(tagName, attribute) || checkDataURI(tagName, attribute);\n}\nexport function sanitizeAttributeValue(env, element, attribute, value) {\n    let tagName = null;\n    if (value === null || value === undefined) {\n        return value;\n    }\n    if (isSafeString(value)) {\n        return value.toHTML();\n    }\n    if (!element) {\n        tagName = null;\n    } else {\n        tagName = element.tagName.toUpperCase();\n    }\n    let str = normalizeTextValue(value);\n    if (checkURI(tagName, attribute)) {\n        let protocol = env.protocolForURL(str);\n        if (has(badProtocols, protocol)) {\n            return `unsafe:${str}`;\n        }\n    }\n    if (checkDataURI(tagName, attribute)) {\n        return `unsafe:${str}`;\n    }\n    return str;\n}","/*\n * @method normalizeProperty\n * @param element {HTMLElement}\n * @param slotName {String}\n * @returns {Object} { name, type }\n */\nexport function normalizeProperty(element, slotName) {\n    let type, normalized;\n    if (slotName in element) {\n        normalized = slotName;\n        type = 'prop';\n    } else {\n        let lower = slotName.toLowerCase();\n        if (lower in element) {\n            type = 'prop';\n            normalized = lower;\n        } else {\n            type = 'attr';\n            normalized = slotName;\n        }\n    }\n    if (type === 'prop' && (normalized.toLowerCase() === 'style' || preferAttr(element.tagName, normalized))) {\n        type = 'attr';\n    }\n    return { normalized, type };\n}\nexport function normalizePropertyValue(value) {\n    if (value === '') {\n        return true;\n    }\n    return value;\n}\n// properties that MUST be set as attributes, due to:\n// * browser bug\n// * strange spec outlier\nconst ATTR_OVERRIDES = {\n    // phantomjs < 2.0 lets you set it as a prop but won't reflect it\n    // back to the attribute. button.getAttribute('type') === null\n    BUTTON: { type: true, form: true },\n    INPUT: {\n        // Some version of IE (like IE9) actually throw an exception\n        // if you set input.type = 'something-unknown'\n        type: true,\n        form: true,\n        // Chrome 46.0.2464.0: 'autocorrect' in document.createElement('input') === false\n        // Safari 8.0.7: 'autocorrect' in document.createElement('input') === false\n        // Mobile Safari (iOS 8.4 simulator): 'autocorrect' in document.createElement('input') === true\n        autocorrect: true,\n        // Chrome 54.0.2840.98: 'list' in document.createElement('input') === true\n        // Safari 9.1.3: 'list' in document.createElement('input') === false\n        list: true\n    },\n    // element.form is actually a legitimate readOnly property, that is to be\n    // mutated, but must be mutated by setAttribute...\n    SELECT: { form: true },\n    OPTION: { form: true },\n    TEXTAREA: { form: true },\n    LABEL: { form: true },\n    FIELDSET: { form: true },\n    LEGEND: { form: true },\n    OBJECT: { form: true }\n};\nfunction preferAttr(tagName, propName) {\n    let tag = ATTR_OVERRIDES[tagName.toUpperCase()];\n    return tag && tag[propName.toLowerCase()] || false;\n}","import { ConcreteBounds } from '../bounds';\nimport { moveNodesBefore } from '../dom/helper';\nlet innerHTMLWrapper = {\n    colgroup: { depth: 2, before: '<table><colgroup>', after: '</colgroup></table>' },\n    table: { depth: 1, before: '<table>', after: '</table>' },\n    tbody: { depth: 2, before: '<table><tbody>', after: '</tbody></table>' },\n    tfoot: { depth: 2, before: '<table><tfoot>', after: '</tfoot></table>' },\n    thead: { depth: 2, before: '<table><thead>', after: '</thead></table>' },\n    tr: { depth: 3, before: '<table><tbody><tr>', after: '</tr></tbody></table>' }\n};\n// Patch:    innerHTML Fix\n// Browsers: IE9\n// Reason:   IE9 don't allow us to set innerHTML on col, colgroup, frameset,\n//           html, style, table, tbody, tfoot, thead, title, tr.\n// Fix:      Wrap the innerHTML we are about to set in its parents, apply the\n//           wrapped innerHTML on a div, then move the unwrapped nodes into the\n//           target position.\nexport function domChanges(document, DOMChangesClass) {\n    if (!document) return DOMChangesClass;\n    if (!shouldApplyFix(document)) {\n        return DOMChangesClass;\n    }\n    let div = document.createElement('div');\n    return class DOMChangesWithInnerHTMLFix extends DOMChangesClass {\n        insertHTMLBefore(parent, nextSibling, html) {\n            if (html === null || html === '') {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            let parentTag = parent.tagName.toLowerCase();\n            let wrapper = innerHTMLWrapper[parentTag];\n            if (wrapper === undefined) {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            return fixInnerHTML(parent, wrapper, div, html, nextSibling);\n        }\n    };\n}\nexport function treeConstruction(document, DOMTreeConstructionClass) {\n    if (!document) return DOMTreeConstructionClass;\n    if (!shouldApplyFix(document)) {\n        return DOMTreeConstructionClass;\n    }\n    let div = document.createElement('div');\n    return class DOMTreeConstructionWithInnerHTMLFix extends DOMTreeConstructionClass {\n        insertHTMLBefore(parent, referenceNode, html) {\n            if (html === null || html === '') {\n                return super.insertHTMLBefore(parent, referenceNode, html);\n            }\n            let parentTag = parent.tagName.toLowerCase();\n            let wrapper = innerHTMLWrapper[parentTag];\n            if (wrapper === undefined) {\n                return super.insertHTMLBefore(parent, referenceNode, html);\n            }\n            return fixInnerHTML(parent, wrapper, div, html, referenceNode);\n        }\n    };\n}\nfunction fixInnerHTML(parent, wrapper, div, html, reference) {\n    let wrappedHtml = wrapper.before + html + wrapper.after;\n    div.innerHTML = wrappedHtml;\n    let parentNode = div;\n    for (let i = 0; i < wrapper.depth; i++) {\n        parentNode = parentNode.childNodes[0];\n    }\n    let [first, last] = moveNodesBefore(parentNode, parent, reference);\n    return new ConcreteBounds(parent, first, last);\n}\nfunction shouldApplyFix(document) {\n    let table = document.createElement('table');\n    try {\n        table.innerHTML = '<tbody></tbody>';\n    } catch (e) {} finally {\n        if (table.childNodes.length !== 0) {\n            // It worked as expected, no fix required\n            return false;\n        }\n    }\n    return true;\n}","import { ConcreteBounds } from '../bounds';\nimport { moveNodesBefore } from '../dom/helper';\nimport { unwrap } from '@glimmer/util';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n// Patch:    insertAdjacentHTML on SVG Fix\n// Browsers: Safari, IE, Edge, Firefox ~33-34\n// Reason:   insertAdjacentHTML does not exist on SVG elements in Safari. It is\n//           present but throws an exception on IE and Edge. Old versions of\n//           Firefox create nodes in the incorrect namespace.\n// Fix:      Since IE and Edge silently fail to create SVG nodes using\n//           innerHTML, and because Firefox may create nodes in the incorrect\n//           namespace using innerHTML on SVG elements, an HTML-string wrapping\n//           approach is used. A pre/post SVG tag is added to the string, then\n//           that whole string is added to a div. The created nodes are plucked\n//           out and applied to the target location on DOM.\nexport function domChanges(document, DOMChangesClass, svgNamespace) {\n    if (!document) return DOMChangesClass;\n    if (!shouldApplyFix(document, svgNamespace)) {\n        return DOMChangesClass;\n    }\n    let div = document.createElement('div');\n    return class DOMChangesWithSVGInnerHTMLFix extends DOMChangesClass {\n        insertHTMLBefore(parent, nextSibling, html) {\n            if (html === null || html === '') {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            if (parent.namespaceURI !== svgNamespace) {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            return fixSVG(parent, div, html, nextSibling);\n        }\n    };\n}\nexport function treeConstruction(document, TreeConstructionClass, svgNamespace) {\n    if (!document) return TreeConstructionClass;\n    if (!shouldApplyFix(document, svgNamespace)) {\n        return TreeConstructionClass;\n    }\n    let div = document.createElement('div');\n    return class TreeConstructionWithSVGInnerHTMLFix extends TreeConstructionClass {\n        insertHTMLBefore(parent, reference, html) {\n            if (html === null || html === '') {\n                return super.insertHTMLBefore(parent, reference, html);\n            }\n            if (parent.namespaceURI !== svgNamespace) {\n                return super.insertHTMLBefore(parent, reference, html);\n            }\n            return fixSVG(parent, div, html, reference);\n        }\n    };\n}\nfunction fixSVG(parent, div, html, reference) {\n    // IE, Edge: also do not correctly support using `innerHTML` on SVG\n    // namespaced elements. So here a wrapper is used.\n    let wrappedHtml = '<svg>' + html + '</svg>';\n    div.innerHTML = wrappedHtml;\n    let [first, last] = moveNodesBefore(div.firstChild, parent, reference);\n    return new ConcreteBounds(parent, first, last);\n}\nfunction shouldApplyFix(document, svgNamespace) {\n    let svg = document.createElementNS(svgNamespace, 'svg');\n    try {\n        svg['insertAdjacentHTML']('beforeEnd', '<circle></circle>');\n    } catch (e) {\n        // IE, Edge: Will throw, insertAdjacentHTML is unsupported on SVG\n        // Safari: Will throw, insertAdjacentHTML is not present on SVG\n    } finally {\n        // FF: Old versions will create a node in the wrong namespace\n        if (svg.childNodes.length === 1 && unwrap(svg.firstChild).namespaceURI === SVG_NAMESPACE) {\n            // The test worked as expected, no fix required\n            return false;\n        }\n        return true;\n    }\n}","// Patch:    Adjacent text node merging fix\n// Browsers: IE, Edge, Firefox w/o inspector open\n// Reason:   These browsers will merge adjacent text nodes. For exmaple given\n//           <div>Hello</div> with div.insertAdjacentHTML(' world') browsers\n//           with proper behavior will populate div.childNodes with two items.\n//           These browsers will populate it with one merged node instead.\n// Fix:      Add these nodes to a wrapper element, then iterate the childNodes\n//           of that wrapper and move the nodes to their target location. Note\n//           that potential SVG bugs will have been handled before this fix.\n//           Note that this fix must only apply to the previous text node, as\n//           the base implementation of `insertHTMLBefore` already handles\n//           following text nodes correctly.\nexport function domChanges(document, DOMChangesClass) {\n    if (!document) return DOMChangesClass;\n    if (!shouldApplyFix(document)) {\n        return DOMChangesClass;\n    }\n    return class DOMChangesWithTextNodeMergingFix extends DOMChangesClass {\n        constructor(document) {\n            super(document);\n            this.uselessComment = document.createComment('');\n        }\n        insertHTMLBefore(parent, nextSibling, html) {\n            if (html === null) {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            let didSetUselessComment = false;\n            let nextPrevious = nextSibling ? nextSibling.previousSibling : parent.lastChild;\n            if (nextPrevious && nextPrevious instanceof Text) {\n                didSetUselessComment = true;\n                parent.insertBefore(this.uselessComment, nextSibling);\n            }\n            let bounds = super.insertHTMLBefore(parent, nextSibling, html);\n            if (didSetUselessComment) {\n                parent.removeChild(this.uselessComment);\n            }\n            return bounds;\n        }\n    };\n}\nexport function treeConstruction(document, TreeConstructionClass) {\n    if (!document) return TreeConstructionClass;\n    if (!shouldApplyFix(document)) {\n        return TreeConstructionClass;\n    }\n    return class TreeConstructionWithTextNodeMergingFix extends TreeConstructionClass {\n        constructor(document) {\n            super(document);\n            this.uselessComment = this.createComment('');\n        }\n        insertHTMLBefore(parent, reference, html) {\n            if (html === null) {\n                return super.insertHTMLBefore(parent, reference, html);\n            }\n            let didSetUselessComment = false;\n            let nextPrevious = reference ? reference.previousSibling : parent.lastChild;\n            if (nextPrevious && nextPrevious instanceof Text) {\n                didSetUselessComment = true;\n                parent.insertBefore(this.uselessComment, reference);\n            }\n            let bounds = super.insertHTMLBefore(parent, reference, html);\n            if (didSetUselessComment) {\n                parent.removeChild(this.uselessComment);\n            }\n            return bounds;\n        }\n    };\n}\nfunction shouldApplyFix(document) {\n    let mergingTextDiv = document.createElement('div');\n    mergingTextDiv.innerHTML = 'first';\n    mergingTextDiv.insertAdjacentHTML('beforeEnd', 'second');\n    if (mergingTextDiv.childNodes.length === 2) {\n        // It worked as expected, no fix required\n        return false;\n    }\n    return true;\n}","import { ConcreteBounds, SingleNodeBounds } from '../bounds';\nimport { domChanges as domChangesTableElementFix, treeConstruction as treeConstructionTableElementFix } from '../compat/inner-html-fix';\nimport { domChanges as domChangesSvgElementFix, treeConstruction as treeConstructionSvgElementFix } from '../compat/svg-inner-html-fix';\nimport { domChanges as domChangesNodeMergingFix, treeConstruction as treeConstructionNodeMergingFix } from '../compat/text-node-merging-fix';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n// http://www.w3.org/TR/html/syntax.html#html-integration-point\nconst SVG_INTEGRATION_POINTS = { foreignObject: 1, desc: 1, title: 1 };\n// http://www.w3.org/TR/html/syntax.html#adjust-svg-attributes\n// TODO: Adjust SVG attributes\n// http://www.w3.org/TR/html/syntax.html#parsing-main-inforeign\n// TODO: Adjust SVG elements\n// http://www.w3.org/TR/html/syntax.html#parsing-main-inforeign\nexport const BLACKLIST_TABLE = Object.create(null);\n[\"b\", \"big\", \"blockquote\", \"body\", \"br\", \"center\", \"code\", \"dd\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"hr\", \"i\", \"img\", \"li\", \"listing\", \"main\", \"meta\", \"nobr\", \"ol\", \"p\", \"pre\", \"ruby\", \"s\", \"small\", \"span\", \"strong\", \"strike\", \"sub\", \"sup\", \"table\", \"tt\", \"u\", \"ul\", \"var\"].forEach(tag => BLACKLIST_TABLE[tag] = 1);\nconst WHITESPACE = /[\\t-\\r \\xA0\\u1680\\u180E\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]/;\nlet doc = typeof document === 'undefined' ? null : document;\nexport function isWhitespace(string) {\n    return WHITESPACE.test(string);\n}\nexport function moveNodesBefore(source, target, nextSibling) {\n    let first = source.firstChild;\n    let last = null;\n    let current = first;\n    while (current) {\n        last = current;\n        current = current.nextSibling;\n        target.insertBefore(last, nextSibling);\n    }\n    return [first, last];\n}\nexport class DOMOperations {\n    constructor(document) {\n        this.document = document;\n        this.setupUselessElement();\n    }\n    // split into seperate method so that NodeDOMTreeConstruction\n    // can override it.\n    setupUselessElement() {\n        this.uselessElement = this.document.createElement('div');\n    }\n    createElement(tag, context) {\n        let isElementInSVGNamespace, isHTMLIntegrationPoint;\n        if (context) {\n            isElementInSVGNamespace = context.namespaceURI === SVG_NAMESPACE || tag === 'svg';\n            isHTMLIntegrationPoint = SVG_INTEGRATION_POINTS[context.tagName];\n        } else {\n            isElementInSVGNamespace = tag === 'svg';\n            isHTMLIntegrationPoint = false;\n        }\n        if (isElementInSVGNamespace && !isHTMLIntegrationPoint) {\n            // FIXME: This does not properly handle <font> with color, face, or\n            // size attributes, which is also disallowed by the spec. We should fix\n            // this.\n            if (BLACKLIST_TABLE[tag]) {\n                throw new Error(`Cannot create a ${tag} inside an SVG context`);\n            }\n            return this.document.createElementNS(SVG_NAMESPACE, tag);\n        } else {\n            return this.document.createElement(tag);\n        }\n    }\n    insertBefore(parent, node, reference) {\n        parent.insertBefore(node, reference);\n    }\n    insertHTMLBefore(_parent, nextSibling, html) {\n        return insertHTMLBefore(this.uselessElement, _parent, nextSibling, html);\n    }\n    createTextNode(text) {\n        return this.document.createTextNode(text);\n    }\n    createComment(data) {\n        return this.document.createComment(data);\n    }\n}\nexport var DOM;\n(function (DOM) {\n    class TreeConstruction extends DOMOperations {\n        createElementNS(namespace, tag) {\n            return this.document.createElementNS(namespace, tag);\n        }\n        setAttribute(element, name, value, namespace) {\n            if (namespace) {\n                element.setAttributeNS(namespace, name, value);\n            } else {\n                element.setAttribute(name, value);\n            }\n        }\n    }\n    DOM.TreeConstruction = TreeConstruction;\n    let appliedTreeContruction = TreeConstruction;\n    appliedTreeContruction = treeConstructionNodeMergingFix(doc, appliedTreeContruction);\n    appliedTreeContruction = treeConstructionTableElementFix(doc, appliedTreeContruction);\n    appliedTreeContruction = treeConstructionSvgElementFix(doc, appliedTreeContruction, SVG_NAMESPACE);\n    DOM.DOMTreeConstruction = appliedTreeContruction;\n})(DOM || (DOM = {}));\nexport class DOMChanges extends DOMOperations {\n    constructor(document) {\n        super(document);\n        this.document = document;\n        this.namespace = null;\n    }\n    setAttribute(element, name, value) {\n        element.setAttribute(name, value);\n    }\n    setAttributeNS(element, namespace, name, value) {\n        element.setAttributeNS(namespace, name, value);\n    }\n    removeAttribute(element, name) {\n        element.removeAttribute(name);\n    }\n    removeAttributeNS(element, namespace, name) {\n        element.removeAttributeNS(namespace, name);\n    }\n    insertNodeBefore(parent, node, reference) {\n        if (isDocumentFragment(node)) {\n            let { firstChild, lastChild } = node;\n            this.insertBefore(parent, node, reference);\n            return new ConcreteBounds(parent, firstChild, lastChild);\n        } else {\n            this.insertBefore(parent, node, reference);\n            return new SingleNodeBounds(parent, node);\n        }\n    }\n    insertTextBefore(parent, nextSibling, text) {\n        let textNode = this.createTextNode(text);\n        this.insertBefore(parent, textNode, nextSibling);\n        return textNode;\n    }\n    insertBefore(element, node, reference) {\n        element.insertBefore(node, reference);\n    }\n    insertAfter(element, node, reference) {\n        this.insertBefore(element, node, reference.nextSibling);\n    }\n}\nexport function insertHTMLBefore(_useless, _parent, _nextSibling, html) {\n    // TypeScript vendored an old version of the DOM spec where `insertAdjacentHTML`\n    // only exists on `HTMLElement` but not on `Element`. We actually work with the\n    // newer version of the DOM API here (and monkey-patch this method in `./compat`\n    // when we detect older browsers). This is a hack to work around this limitation.\n    let parent = _parent;\n    let useless = _useless;\n    let nextSibling = _nextSibling;\n    let prev = nextSibling ? nextSibling.previousSibling : parent.lastChild;\n    let last;\n    if (html === null || html === '') {\n        return new ConcreteBounds(parent, null, null);\n    }\n    if (nextSibling === null) {\n        parent.insertAdjacentHTML('beforeEnd', html);\n        last = parent.lastChild;\n    } else if (nextSibling instanceof HTMLElement) {\n        nextSibling.insertAdjacentHTML('beforeBegin', html);\n        last = nextSibling.previousSibling;\n    } else {\n        // Non-element nodes do not support insertAdjacentHTML, so add an\n        // element and call it on that element. Then remove the element.\n        //\n        // This also protects Edge, IE and Firefox w/o the inspector open\n        // from merging adjacent text nodes. See ./compat/text-node-merging-fix.ts\n        parent.insertBefore(useless, nextSibling);\n        useless.insertAdjacentHTML('beforeBegin', html);\n        last = useless.previousSibling;\n        parent.removeChild(useless);\n    }\n    let first = prev ? prev.nextSibling : parent.firstChild;\n    return new ConcreteBounds(parent, first, last);\n}\nfunction isDocumentFragment(node) {\n    return node.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\n}\nlet helper = DOMChanges;\nhelper = domChangesNodeMergingFix(doc, helper);\nhelper = domChangesTableElementFix(doc, helper);\nhelper = domChangesSvgElementFix(doc, helper, SVG_NAMESPACE);\nexport default helper;\nexport const DOMTreeConstruction = DOM.DOMTreeConstruction;","import { sanitizeAttributeValue, requiresSanitization } from './sanitized-values';\nimport { normalizeProperty } from './props';\nimport { SVG_NAMESPACE } from './helper';\nimport { normalizeTextValue } from '../compiled/opcodes/content';\nexport function defaultManagers(element, attr, _isTrusting, _namespace) {\n    let tagName = element.tagName;\n    let isSVG = element.namespaceURI === SVG_NAMESPACE;\n    if (isSVG) {\n        return defaultAttributeManagers(tagName, attr);\n    }\n    let { type, normalized } = normalizeProperty(element, attr);\n    if (type === 'attr') {\n        return defaultAttributeManagers(tagName, normalized);\n    } else {\n        return defaultPropertyManagers(tagName, normalized);\n    }\n}\nexport function defaultPropertyManagers(tagName, attr) {\n    if (requiresSanitization(tagName, attr)) {\n        return new SafePropertyManager(attr);\n    }\n    if (isUserInputValue(tagName, attr)) {\n        return INPUT_VALUE_PROPERTY_MANAGER;\n    }\n    if (isOptionSelected(tagName, attr)) {\n        return OPTION_SELECTED_MANAGER;\n    }\n    return new PropertyManager(attr);\n}\nexport function defaultAttributeManagers(tagName, attr) {\n    if (requiresSanitization(tagName, attr)) {\n        return new SafeAttributeManager(attr);\n    }\n    return new AttributeManager(attr);\n}\nexport function readDOMAttr(element, attr) {\n    let isSVG = element.namespaceURI === SVG_NAMESPACE;\n    let { type, normalized } = normalizeProperty(element, attr);\n    if (isSVG) {\n        return element.getAttribute(normalized);\n    }\n    if (type === 'attr') {\n        return element.getAttribute(normalized);\n    }\n    {\n        return element[normalized];\n    }\n}\n;\nexport class AttributeManager {\n    constructor(attr) {\n        this.attr = attr;\n    }\n    setAttribute(env, element, value, namespace) {\n        let dom = env.getAppendOperations();\n        let normalizedValue = normalizeAttributeValue(value);\n        if (!isAttrRemovalValue(normalizedValue)) {\n            dom.setAttribute(element, this.attr, normalizedValue, namespace);\n        }\n    }\n    updateAttribute(env, element, value, namespace) {\n        if (value === null || value === undefined || value === false) {\n            if (namespace) {\n                env.getDOM().removeAttributeNS(element, namespace, this.attr);\n            } else {\n                env.getDOM().removeAttribute(element, this.attr);\n            }\n        } else {\n            this.setAttribute(env, element, value);\n        }\n    }\n}\n;\nexport class PropertyManager extends AttributeManager {\n    setAttribute(_env, element, value, _namespace) {\n        if (!isAttrRemovalValue(value)) {\n            element[this.attr] = value;\n        }\n    }\n    removeAttribute(env, element, namespace) {\n        // TODO this sucks but to preserve properties first and to meet current\n        // semantics we must do this.\n        let { attr } = this;\n        if (namespace) {\n            env.getDOM().removeAttributeNS(element, namespace, attr);\n        } else {\n            env.getDOM().removeAttribute(element, attr);\n        }\n    }\n    updateAttribute(env, element, value, namespace) {\n        // ensure the property is always updated\n        element[this.attr] = value;\n        if (isAttrRemovalValue(value)) {\n            this.removeAttribute(env, element, namespace);\n        }\n    }\n}\n;\nfunction normalizeAttributeValue(value) {\n    if (value === false || value === undefined || value === null) {\n        return null;\n    }\n    if (value === true) {\n        return '';\n    }\n    // onclick function etc in SSR\n    if (typeof value === 'function') {\n        return null;\n    }\n    return String(value);\n}\nfunction isAttrRemovalValue(value) {\n    return value === null || value === undefined;\n}\nclass SafePropertyManager extends PropertyManager {\n    setAttribute(env, element, value) {\n        super.setAttribute(env, element, sanitizeAttributeValue(env, element, this.attr, value));\n    }\n    updateAttribute(env, element, value) {\n        super.updateAttribute(env, element, sanitizeAttributeValue(env, element, this.attr, value));\n    }\n}\nfunction isUserInputValue(tagName, attribute) {\n    return (tagName === 'INPUT' || tagName === 'TEXTAREA') && attribute === 'value';\n}\nclass InputValuePropertyManager extends AttributeManager {\n    setAttribute(_env, element, value) {\n        let input = element;\n        input.value = normalizeTextValue(value);\n    }\n    updateAttribute(_env, element, value) {\n        let input = element;\n        let currentValue = input.value;\n        let normalizedValue = normalizeTextValue(value);\n        if (currentValue !== normalizedValue) {\n            input.value = normalizedValue;\n        }\n    }\n}\nexport const INPUT_VALUE_PROPERTY_MANAGER = new InputValuePropertyManager('value');\nfunction isOptionSelected(tagName, attribute) {\n    return tagName === 'OPTION' && attribute === 'selected';\n}\nclass OptionSelectedManager extends PropertyManager {\n    setAttribute(_env, element, value) {\n        if (value !== null && value !== undefined && value !== false) {\n            let option = element;\n            option.selected = true;\n        }\n    }\n    updateAttribute(_env, element, value) {\n        let option = element;\n        if (value) {\n            option.selected = true;\n        } else {\n            option.selected = false;\n        }\n    }\n}\nexport const OPTION_SELECTED_MANAGER = new OptionSelectedManager('selected');\nclass SafeAttributeManager extends AttributeManager {\n    setAttribute(env, element, value) {\n        super.setAttribute(env, element, sanitizeAttributeValue(env, element, this.attr, value));\n    }\n    updateAttribute(env, element, value, _namespace) {\n        super.updateAttribute(env, element, sanitizeAttributeValue(env, element, this.attr, value));\n    }\n}","import { populateBuiltins } from './syntax/functions';\nimport { Constants } from './environment/constants';\nimport { UNDEFINED_REFERENCE, ConditionalReference } from './references';\nimport { defaultManagers } from './dom/attribute-managers';\nimport { assert, ensureGuid, expect } from '@glimmer/util';\nexport class Scope {\n    constructor(\n    // the 0th slot is `self`\n    slots, callerScope,\n    // named arguments and blocks passed to a layout that uses eval\n    evalScope,\n    // locals in scope when the partial was invoked\n    partialMap) {\n        this.slots = slots;\n        this.callerScope = callerScope;\n        this.evalScope = evalScope;\n        this.partialMap = partialMap;\n    }\n    static root(self, size = 0) {\n        let refs = new Array(size + 1);\n        for (let i = 0; i <= size; i++) {\n            refs[i] = UNDEFINED_REFERENCE;\n        }\n        return new Scope(refs, null, null, null).init({ self });\n    }\n    static sized(size = 0) {\n        let refs = new Array(size + 1);\n        for (let i = 0; i <= size; i++) {\n            refs[i] = UNDEFINED_REFERENCE;\n        }\n        return new Scope(refs, null, null, null);\n    }\n    init({ self }) {\n        this.slots[0] = self;\n        return this;\n    }\n    getSelf() {\n        return this.get(0);\n    }\n    getSymbol(symbol) {\n        return this.get(symbol);\n    }\n    getBlock(symbol) {\n        return this.get(symbol);\n    }\n    getEvalScope() {\n        return this.evalScope;\n    }\n    getPartialMap() {\n        return this.partialMap;\n    }\n    bind(symbol, value) {\n        this.set(symbol, value);\n    }\n    bindSelf(self) {\n        this.set(0, self);\n    }\n    bindSymbol(symbol, value) {\n        this.set(symbol, value);\n    }\n    bindBlock(symbol, value) {\n        this.set(symbol, value);\n    }\n    bindEvalScope(map) {\n        this.evalScope = map;\n    }\n    bindPartialMap(map) {\n        this.partialMap = map;\n    }\n    bindCallerScope(scope) {\n        this.callerScope = scope;\n    }\n    getCallerScope() {\n        return this.callerScope;\n    }\n    child() {\n        return new Scope(this.slots.slice(), this.callerScope, this.evalScope, this.partialMap);\n    }\n    get(index) {\n        if (index >= this.slots.length) {\n            throw new RangeError(`BUG: cannot get $${index} from scope; length=${this.slots.length}`);\n        }\n        return this.slots[index];\n    }\n    set(index, value) {\n        if (index >= this.slots.length) {\n            throw new RangeError(`BUG: cannot get $${index} from scope; length=${this.slots.length}`);\n        }\n        this.slots[index] = value;\n    }\n}\nclass Transaction {\n    constructor() {\n        this.scheduledInstallManagers = [];\n        this.scheduledInstallModifiers = [];\n        this.scheduledUpdateModifierManagers = [];\n        this.scheduledUpdateModifiers = [];\n        this.createdComponents = [];\n        this.createdManagers = [];\n        this.updatedComponents = [];\n        this.updatedManagers = [];\n        this.destructors = [];\n    }\n    didCreate(component, manager) {\n        this.createdComponents.push(component);\n        this.createdManagers.push(manager);\n    }\n    didUpdate(component, manager) {\n        this.updatedComponents.push(component);\n        this.updatedManagers.push(manager);\n    }\n    scheduleInstallModifier(modifier, manager) {\n        this.scheduledInstallManagers.push(manager);\n        this.scheduledInstallModifiers.push(modifier);\n    }\n    scheduleUpdateModifier(modifier, manager) {\n        this.scheduledUpdateModifierManagers.push(manager);\n        this.scheduledUpdateModifiers.push(modifier);\n    }\n    didDestroy(d) {\n        this.destructors.push(d);\n    }\n    commit() {\n        let { createdComponents, createdManagers } = this;\n        for (let i = 0; i < createdComponents.length; i++) {\n            let component = createdComponents[i];\n            let manager = createdManagers[i];\n            manager.didCreate(component);\n        }\n        let { updatedComponents, updatedManagers } = this;\n        for (let i = 0; i < updatedComponents.length; i++) {\n            let component = updatedComponents[i];\n            let manager = updatedManagers[i];\n            manager.didUpdate(component);\n        }\n        let { destructors } = this;\n        for (let i = 0; i < destructors.length; i++) {\n            destructors[i].destroy();\n        }\n        let { scheduledInstallManagers, scheduledInstallModifiers } = this;\n        for (let i = 0; i < scheduledInstallManagers.length; i++) {\n            let manager = scheduledInstallManagers[i];\n            let modifier = scheduledInstallModifiers[i];\n            manager.install(modifier);\n        }\n        let { scheduledUpdateModifierManagers, scheduledUpdateModifiers } = this;\n        for (let i = 0; i < scheduledUpdateModifierManagers.length; i++) {\n            let manager = scheduledUpdateModifierManagers[i];\n            let modifier = scheduledUpdateModifiers[i];\n            manager.update(modifier);\n        }\n    }\n}\nexport class Opcode {\n    constructor(array) {\n        this.array = array;\n        this.offset = 0;\n    }\n    get type() {\n        return this.array[this.offset];\n    }\n    get op1() {\n        return this.array[this.offset + 1];\n    }\n    get op2() {\n        return this.array[this.offset + 2];\n    }\n    get op3() {\n        return this.array[this.offset + 3];\n    }\n}\nexport class Program {\n    constructor() {\n        this.opcodes = [];\n        this._offset = 0;\n        this._opcode = new Opcode(this.opcodes);\n    }\n    get next() {\n        return this._offset;\n    }\n    get current() {\n        return this._offset - 4;\n    }\n    opcode(offset) {\n        this._opcode.offset = offset;\n        return this._opcode;\n    }\n    set(pos, type, op1 = 0, op2 = 0, op3 = 0) {\n        this.opcodes[pos] = type;\n        this.opcodes[pos + 1] = op1;\n        this.opcodes[pos + 2] = op2;\n        this.opcodes[pos + 3] = op3;\n    }\n    push(type, op1 = 0, op2 = 0, op3 = 0) {\n        let offset = this._offset;\n        this.opcodes[this._offset++] = type;\n        this.opcodes[this._offset++] = op1;\n        this.opcodes[this._offset++] = op2;\n        this.opcodes[this._offset++] = op3;\n        return offset;\n    }\n}\nexport class Environment {\n    constructor({ appendOperations, updateOperations }) {\n        this._macros = null;\n        this._transaction = null;\n        this.constants = new Constants();\n        this.program = new Program();\n        this.appendOperations = appendOperations;\n        this.updateOperations = updateOperations;\n    }\n    toConditionalReference(reference) {\n        return new ConditionalReference(reference);\n    }\n    getAppendOperations() {\n        return this.appendOperations;\n    }\n    getDOM() {\n        return this.updateOperations;\n    }\n    getIdentity(object) {\n        return ensureGuid(object) + '';\n    }\n    begin() {\n        assert(!this._transaction, 'a glimmer transaction was begun, but one already exists. You may have a nested transaction');\n        this._transaction = new Transaction();\n    }\n    get transaction() {\n        return expect(this._transaction, 'must be in a transaction');\n    }\n    didCreate(component, manager) {\n        this.transaction.didCreate(component, manager);\n    }\n    didUpdate(component, manager) {\n        this.transaction.didUpdate(component, manager);\n    }\n    scheduleInstallModifier(modifier, manager) {\n        this.transaction.scheduleInstallModifier(modifier, manager);\n    }\n    scheduleUpdateModifier(modifier, manager) {\n        this.transaction.scheduleUpdateModifier(modifier, manager);\n    }\n    didDestroy(d) {\n        this.transaction.didDestroy(d);\n    }\n    commit() {\n        let transaction = this.transaction;\n        this._transaction = null;\n        transaction.commit();\n    }\n    attributeFor(element, attr, isTrusting, namespace) {\n        return defaultManagers(element, attr, isTrusting, namespace === undefined ? null : namespace);\n    }\n    macros() {\n        let macros = this._macros;\n        if (!macros) {\n            this._macros = macros = this.populateBuiltins();\n        }\n        return macros;\n    }\n    populateBuiltins() {\n        return populateBuiltins();\n    }\n}\nexport default Environment;","import { clear, move as moveBounds } from '../bounds';\nimport { ElementStack } from '../builder';\nimport { Stack, LinkedList, dict, expect } from '@glimmer/util';\nimport { IteratorSynchronizer,\n// Tags\ncombine, UpdatableTag, combineSlice, CONSTANT_TAG, INITIAL } from '@glimmer/reference';\nimport { UpdatingOpcode } from '../opcodes';\nimport VM, { EvaluationStack } from './append';\nexport default class UpdatingVM {\n    constructor(env, { alwaysRevalidate = false }) {\n        this.frameStack = new Stack();\n        this.env = env;\n        this.constants = env.constants;\n        this.dom = env.getDOM();\n        this.alwaysRevalidate = alwaysRevalidate;\n    }\n    execute(opcodes, handler) {\n        let { frameStack } = this;\n        this.try(opcodes, handler);\n        while (true) {\n            if (frameStack.isEmpty()) break;\n            let opcode = this.frame.nextStatement();\n            if (opcode === null) {\n                this.frameStack.pop();\n                continue;\n            }\n            opcode.evaluate(this);\n        }\n    }\n    get frame() {\n        return expect(this.frameStack.current, 'bug: expected a frame');\n    }\n    goto(op) {\n        this.frame.goto(op);\n    }\n    try(ops, handler) {\n        this.frameStack.push(new UpdatingVMFrame(this, ops, handler));\n    }\n    throw() {\n        this.frame.handleException();\n        this.frameStack.pop();\n    }\n    evaluateOpcode(opcode) {\n        opcode.evaluate(this);\n    }\n}\nexport class BlockOpcode extends UpdatingOpcode {\n    constructor(start, state, bounds, children) {\n        super();\n        this.start = start;\n        this.type = \"block\";\n        this.next = null;\n        this.prev = null;\n        let { env, scope, dynamicScope, stack } = state;\n        this.children = children;\n        this.env = env;\n        this.scope = scope;\n        this.dynamicScope = dynamicScope;\n        this.stack = stack;\n        this.bounds = bounds;\n    }\n    parentElement() {\n        return this.bounds.parentElement();\n    }\n    firstNode() {\n        return this.bounds.firstNode();\n    }\n    lastNode() {\n        return this.bounds.lastNode();\n    }\n    evaluate(vm) {\n        vm.try(this.children, null);\n    }\n    destroy() {\n        this.bounds.destroy();\n    }\n    didDestroy() {\n        this.env.didDestroy(this.bounds);\n    }\n    toJSON() {\n        let details = dict();\n        details[\"guid\"] = `${this._guid}`;\n        return {\n            guid: this._guid,\n            type: this.type,\n            details,\n            children: this.children.toArray().map(op => op.toJSON())\n        };\n    }\n}\nexport class TryOpcode extends BlockOpcode {\n    constructor(start, state, bounds, children) {\n        super(start, state, bounds, children);\n        this.type = \"try\";\n        this.tag = this._tag = UpdatableTag.create(CONSTANT_TAG);\n    }\n    didInitializeChildren() {\n        this._tag.inner.update(combineSlice(this.children));\n    }\n    evaluate(vm) {\n        vm.try(this.children, this);\n    }\n    handleException() {\n        let { env, bounds, children, scope, dynamicScope, start, stack, prev, next } = this;\n        children.clear();\n        let elementStack = ElementStack.resume(env, bounds, bounds.reset(env));\n        let vm = new VM(env, scope, dynamicScope, elementStack);\n        let updating = new LinkedList();\n        vm.execute(start, vm => {\n            vm.stack = EvaluationStack.restore(stack);\n            vm.updatingOpcodeStack.push(updating);\n            vm.updateWith(this);\n            vm.updatingOpcodeStack.push(children);\n        });\n        this.prev = prev;\n        this.next = next;\n    }\n    toJSON() {\n        let json = super.toJSON();\n        let details = json[\"details\"];\n        if (!details) {\n            details = json[\"details\"] = {};\n        }\n        return super.toJSON();\n    }\n}\nclass ListRevalidationDelegate {\n    constructor(opcode, marker) {\n        this.opcode = opcode;\n        this.marker = marker;\n        this.didInsert = false;\n        this.didDelete = false;\n        this.map = opcode.map;\n        this.updating = opcode['children'];\n    }\n    insert(key, item, memo, before) {\n        let { map, opcode, updating } = this;\n        let nextSibling = null;\n        let reference = null;\n        if (before) {\n            reference = map[before];\n            nextSibling = reference['bounds'].firstNode();\n        } else {\n            nextSibling = this.marker;\n        }\n        let vm = opcode.vmForInsertion(nextSibling);\n        let tryOpcode = null;\n        let { start } = opcode;\n        vm.execute(start, vm => {\n            map[key] = tryOpcode = vm.iterate(memo, item);\n            vm.updatingOpcodeStack.push(new LinkedList());\n            vm.updateWith(tryOpcode);\n            vm.updatingOpcodeStack.push(tryOpcode.children);\n        });\n        updating.insertBefore(tryOpcode, reference);\n        this.didInsert = true;\n    }\n    retain(_key, _item, _memo) {}\n    move(key, _item, _memo, before) {\n        let { map, updating } = this;\n        let entry = map[key];\n        let reference = map[before] || null;\n        if (before) {\n            moveBounds(entry, reference.firstNode());\n        } else {\n            moveBounds(entry, this.marker);\n        }\n        updating.remove(entry);\n        updating.insertBefore(entry, reference);\n    }\n    delete(key) {\n        let { map } = this;\n        let opcode = map[key];\n        opcode.didDestroy();\n        clear(opcode);\n        this.updating.remove(opcode);\n        delete map[key];\n        this.didDelete = true;\n    }\n    done() {\n        this.opcode.didInitializeChildren(this.didInsert || this.didDelete);\n    }\n}\nexport class ListBlockOpcode extends BlockOpcode {\n    constructor(start, state, bounds, children, artifacts) {\n        super(start, state, bounds, children);\n        this.type = \"list-block\";\n        this.map = dict();\n        this.lastIterated = INITIAL;\n        this.artifacts = artifacts;\n        let _tag = this._tag = UpdatableTag.create(CONSTANT_TAG);\n        this.tag = combine([artifacts.tag, _tag]);\n    }\n    didInitializeChildren(listDidChange = true) {\n        this.lastIterated = this.artifacts.tag.value();\n        if (listDidChange) {\n            this._tag.inner.update(combineSlice(this.children));\n        }\n    }\n    evaluate(vm) {\n        let { artifacts, lastIterated } = this;\n        if (!artifacts.tag.validate(lastIterated)) {\n            let { bounds } = this;\n            let { dom } = vm;\n            let marker = dom.createComment('');\n            dom.insertAfter(bounds.parentElement(), marker, expect(bounds.lastNode(), \"can't insert after an empty bounds\"));\n            let target = new ListRevalidationDelegate(this, marker);\n            let synchronizer = new IteratorSynchronizer({ target, artifacts });\n            synchronizer.sync();\n            this.parentElement().removeChild(marker);\n        }\n        // Run now-updated updating opcodes\n        super.evaluate(vm);\n    }\n    vmForInsertion(nextSibling) {\n        let { env, scope, dynamicScope } = this;\n        let elementStack = ElementStack.forInitialRender(this.env, this.bounds.parentElement(), nextSibling);\n        return new VM(env, scope, dynamicScope, elementStack);\n    }\n    toJSON() {\n        let json = super.toJSON();\n        let map = this.map;\n        let inner = Object.keys(map).map(key => {\n            return `${JSON.stringify(key)}: ${map[key]._guid}`;\n        }).join(\", \");\n        let details = json[\"details\"];\n        if (!details) {\n            details = json[\"details\"] = {};\n        }\n        details[\"map\"] = `{${inner}}`;\n        return json;\n    }\n}\nclass UpdatingVMFrame {\n    constructor(vm, ops, exceptionHandler) {\n        this.vm = vm;\n        this.ops = ops;\n        this.exceptionHandler = exceptionHandler;\n        this.vm = vm;\n        this.ops = ops;\n        this.current = ops.head();\n    }\n    goto(op) {\n        this.current = op;\n    }\n    nextStatement() {\n        let { current, ops } = this;\n        if (current) this.current = ops.nextNode(current);\n        return current;\n    }\n    handleException() {\n        if (this.exceptionHandler) {\n            this.exceptionHandler.handleException();\n        }\n    }\n}","import { clear } from '../bounds';\nimport UpdatingVM from './update';\nexport default class RenderResult {\n    constructor(env, updating, bounds) {\n        this.env = env;\n        this.updating = updating;\n        this.bounds = bounds;\n    }\n    rerender({ alwaysRevalidate = false } = { alwaysRevalidate: false }) {\n        let { env, updating } = this;\n        let vm = new UpdatingVM(env, { alwaysRevalidate });\n        vm.execute(updating, this);\n    }\n    parentElement() {\n        return this.bounds.parentElement();\n    }\n    firstNode() {\n        return this.bounds.firstNode();\n    }\n    lastNode() {\n        return this.bounds.lastNode();\n    }\n    opcodes() {\n        return this.updating;\n    }\n    handleException() {\n        throw \"this should never happen\";\n    }\n    destroy() {\n        this.bounds.destroy();\n        clear(this.bounds);\n    }\n}","import { Register } from '../opcodes';\nimport { Scope } from '../environment';\nimport { Stack, LinkedList, ListSlice, expect } from '@glimmer/util';\nimport { combineSlice } from '@glimmer/reference';\nimport { LabelOpcode, JumpIfNotModifiedOpcode, DidModifyOpcode } from '../compiled/opcodes/vm';\nimport { ListBlockOpcode, TryOpcode } from './update';\nimport RenderResult from './render-result';\n\nimport { APPEND_OPCODES } from '../opcodes';\nexport class EvaluationStack {\n    constructor(stack, fp, sp) {\n        this.stack = stack;\n        this.fp = fp;\n        this.sp = sp;\n        if (false) {\n            Object.seal(this);\n        }\n    }\n    static empty() {\n        return new this([], 0, -1);\n    }\n    static restore(snapshot) {\n        return new this(snapshot.slice(), 0, snapshot.length - 1);\n    }\n    isEmpty() {\n        return this.sp === -1;\n    }\n    push(value) {\n        this.stack[++this.sp] = value;\n    }\n    dup(position = this.sp) {\n        this.push(this.stack[position]);\n    }\n    pop(n = 1) {\n        let top = this.stack[this.sp];\n        this.sp -= n;\n        return top;\n    }\n    peek() {\n        return this.stack[this.sp];\n    }\n    fromBase(offset) {\n        return this.stack[this.fp - offset];\n    }\n    fromTop(offset) {\n        return this.stack[this.sp - offset];\n    }\n    capture(items) {\n        let end = this.sp + 1;\n        let start = end - items;\n        return this.stack.slice(start, end);\n    }\n    reset() {\n        this.stack.length = 0;\n    }\n    toArray() {\n        return this.stack.slice(this.fp, this.sp + 1);\n    }\n}\nexport default class VM {\n    constructor(env, scope, dynamicScope, elementStack) {\n        this.env = env;\n        this.elementStack = elementStack;\n        this.dynamicScopeStack = new Stack();\n        this.scopeStack = new Stack();\n        this.updatingOpcodeStack = new Stack();\n        this.cacheGroups = new Stack();\n        this.listBlockStack = new Stack();\n        this.stack = EvaluationStack.empty();\n        /* Registers */\n        this.pc = -1;\n        this.ra = -1;\n        this.s0 = null;\n        this.s1 = null;\n        this.t0 = null;\n        this.t1 = null;\n        this.env = env;\n        this.constants = env.constants;\n        this.elementStack = elementStack;\n        this.scopeStack.push(scope);\n        this.dynamicScopeStack.push(dynamicScope);\n    }\n    get fp() {\n        return this.stack.fp;\n    }\n    set fp(fp) {\n        this.stack.fp = fp;\n    }\n    get sp() {\n        return this.stack.sp;\n    }\n    set sp(sp) {\n        this.stack.sp = sp;\n    }\n    // Fetch a value from a register onto the stack\n    fetch(register) {\n        this.stack.push(this[Register[register]]);\n    }\n    // Load a value from the stack into a register\n    load(register) {\n        this[Register[register]] = this.stack.pop();\n    }\n    // Fetch a value from a register\n    fetchValue(register) {\n        return this[Register[register]];\n    }\n    // Load a value into a register\n    loadValue(register, value) {\n        this[Register[register]] = value;\n    }\n    // Start a new frame and save $ra and $fp on the stack\n    pushFrame() {\n        this.stack.push(this.ra);\n        this.stack.push(this.fp);\n        this.fp = this.sp - 1;\n    }\n    // Restore $ra, $sp and $fp\n    popFrame() {\n        this.sp = this.fp - 1;\n        this.ra = this.stack.fromBase(0);\n        this.fp = this.stack.fromBase(-1);\n    }\n    // Jump to an address in `program`\n    goto(pc) {\n        this.pc = pc;\n    }\n    // Save $pc into $ra, then jump to a new address in `program` (jal in MIPS)\n    call(pc) {\n        this.ra = this.pc;\n        this.pc = pc;\n    }\n    // Put a specific `program` address in $ra\n    returnTo(ra) {\n        this.ra = ra;\n    }\n    // Return to the `program` address stored in $ra\n    return() {\n        this.pc = this.ra;\n    }\n    static initial(env, self, dynamicScope, elementStack, program) {\n        let scope = Scope.root(self, program.symbolTable.symbols.length);\n        let vm = new VM(env, scope, dynamicScope, elementStack);\n        vm.pc = program.start;\n        vm.updatingOpcodeStack.push(new LinkedList());\n        return vm;\n    }\n    capture(args) {\n        return {\n            dynamicScope: this.dynamicScope(),\n            env: this.env,\n            scope: this.scope(),\n            stack: this.stack.capture(args)\n        };\n    }\n    beginCacheGroup() {\n        this.cacheGroups.push(this.updating().tail());\n    }\n    commitCacheGroup() {\n        //        JumpIfNotModified(END)\n        //        (head)\n        //        (....)\n        //        (tail)\n        //        DidModify\n        // END:   Noop\n        let END = new LabelOpcode(\"END\");\n        let opcodes = this.updating();\n        let marker = this.cacheGroups.pop();\n        let head = marker ? opcodes.nextNode(marker) : opcodes.head();\n        let tail = opcodes.tail();\n        let tag = combineSlice(new ListSlice(head, tail));\n        let guard = new JumpIfNotModifiedOpcode(tag, END);\n        opcodes.insertBefore(guard, head);\n        opcodes.append(new DidModifyOpcode(guard));\n        opcodes.append(END);\n    }\n    enter(args) {\n        let updating = new LinkedList();\n        let state = this.capture(args);\n        let tracker = this.elements().pushUpdatableBlock();\n        let tryOpcode = new TryOpcode(this.pc, state, tracker, updating);\n        this.didEnter(tryOpcode);\n    }\n    iterate(memo, value) {\n        let stack = this.stack;\n        stack.push(value);\n        stack.push(memo);\n        let state = this.capture(2);\n        let tracker = this.elements().pushUpdatableBlock();\n        // let ip = this.ip;\n        // this.ip = end + 4;\n        // this.frames.push(ip);\n        return new TryOpcode(this.pc, state, tracker, new LinkedList());\n    }\n    enterItem(key, opcode) {\n        this.listBlock().map[key] = opcode;\n        this.didEnter(opcode);\n    }\n    enterList(start) {\n        let updating = new LinkedList();\n        let state = this.capture(0);\n        let tracker = this.elements().pushBlockList(updating);\n        let artifacts = this.stack.peek().artifacts;\n        let opcode = new ListBlockOpcode(start, state, tracker, updating, artifacts);\n        this.listBlockStack.push(opcode);\n        this.didEnter(opcode);\n    }\n    didEnter(opcode) {\n        this.updateWith(opcode);\n        this.updatingOpcodeStack.push(opcode.children);\n    }\n    exit() {\n        this.elements().popBlock();\n        this.updatingOpcodeStack.pop();\n        let parent = this.updating().tail();\n        parent.didInitializeChildren();\n    }\n    exitList() {\n        this.exit();\n        this.listBlockStack.pop();\n    }\n    updateWith(opcode) {\n        this.updating().append(opcode);\n    }\n    listBlock() {\n        return expect(this.listBlockStack.current, 'expected a list block');\n    }\n    updating() {\n        return expect(this.updatingOpcodeStack.current, 'expected updating opcode on the updating opcode stack');\n    }\n    elements() {\n        return this.elementStack;\n    }\n    scope() {\n        return expect(this.scopeStack.current, 'expected scope on the scope stack');\n    }\n    dynamicScope() {\n        return expect(this.dynamicScopeStack.current, 'expected dynamic scope on the dynamic scope stack');\n    }\n    pushChildScope() {\n        this.scopeStack.push(this.scope().child());\n    }\n    pushCallerScope(childScope = false) {\n        let callerScope = expect(this.scope().getCallerScope(), 'pushCallerScope is called when a caller scope is present');\n        this.scopeStack.push(childScope ? callerScope.child() : callerScope);\n    }\n    pushDynamicScope() {\n        let child = this.dynamicScope().child();\n        this.dynamicScopeStack.push(child);\n        return child;\n    }\n    pushRootScope(size, bindCaller) {\n        let scope = Scope.sized(size);\n        if (bindCaller) scope.bindCallerScope(this.scope());\n        this.scopeStack.push(scope);\n        return scope;\n    }\n    popScope() {\n        this.scopeStack.pop();\n    }\n    popDynamicScope() {\n        this.dynamicScopeStack.pop();\n    }\n    newDestroyable(d) {\n        this.elements().newDestroyable(d);\n    }\n    /// SCOPE HELPERS\n    getSelf() {\n        return this.scope().getSelf();\n    }\n    referenceForSymbol(symbol) {\n        return this.scope().getSymbol(symbol);\n    }\n    /// EXECUTION\n    execute(start, initialize) {\n        this.pc = start;\n        if (initialize) initialize(this);\n        let result;\n        while (true) {\n            result = this.next();\n            if (result.done) break;\n        }\n        return result.value;\n    }\n    next() {\n        let { env, updatingOpcodeStack, elementStack } = this;\n        let opcode = this.nextStatement(env);\n        let result;\n        if (opcode !== null) {\n            APPEND_OPCODES.evaluate(this, opcode, opcode.type);\n            result = { done: false, value: null };\n        } else {\n            // Unload the stack\n            this.stack.reset();\n            result = {\n                done: true,\n                value: new RenderResult(env, expect(updatingOpcodeStack.pop(), 'there should be a final updating opcode stack'), elementStack.popBlock())\n            };\n        }\n        return result;\n    }\n    nextStatement(env) {\n        let { pc } = this;\n        if (pc === -1) {\n            return null;\n        }\n        let program = env.program;\n        this.pc += 4;\n        return program.opcode(pc);\n    }\n    evaluateOpcode(opcode) {\n        APPEND_OPCODES.evaluate(this, opcode, opcode.type);\n    }\n    bindDynamicScope(names) {\n        let scope = this.dynamicScope();\n        for (let i = names.length - 1; i >= 0; i--) {\n            let name = this.constants.getString(names[i]);\n            scope.set(name, this.stack.pop());\n        }\n    }\n}","import { assign, EMPTY_ARRAY } from '@glimmer/util';\nimport { ElementStack } from './builder';\nimport Scanner from './scanner';\nimport { VM } from './vm';\nexport class TemplateIterator {\n    constructor(vm) {\n        this.vm = vm;\n    }\n    next() {\n        return this.vm.next();\n    }\n}\nlet clientId = 0;\nexport default function templateFactory({ id: templateId, meta, block }) {\n    let parsedBlock;\n    let id = templateId || `client-${clientId++}`;\n    let create = (env, envMeta) => {\n        let newMeta = envMeta ? assign({}, envMeta, meta) : meta;\n        if (!parsedBlock) {\n            parsedBlock = JSON.parse(block);\n        }\n        return new ScannableTemplate(id, newMeta, env, parsedBlock);\n    };\n    return { id, meta, create };\n}\nclass ScannableTemplate {\n    constructor(id, meta, env, rawBlock) {\n        this.id = id;\n        this.meta = meta;\n        this.env = env;\n        this.entryPoint = null;\n        this.layout = null;\n        this.partial = null;\n        this.block = null;\n        this.scanner = new Scanner(rawBlock, env);\n        this.symbols = rawBlock.symbols;\n        this.hasEval = rawBlock.hasEval;\n    }\n    render(self, appendTo, dynamicScope) {\n        let { env } = this;\n        let elementStack = ElementStack.forInitialRender(env, appendTo, null);\n        let compiled = this.asEntryPoint().compileDynamic(env);\n        let vm = VM.initial(env, self, dynamicScope, elementStack, compiled);\n        return new TemplateIterator(vm);\n    }\n    asEntryPoint() {\n        if (!this.entryPoint) this.entryPoint = this.scanner.scanEntryPoint(this.compilationMeta());\n        return this.entryPoint;\n    }\n    asLayout(componentName, attrs) {\n        if (!this.layout) this.layout = this.scanner.scanLayout(this.compilationMeta(), attrs || EMPTY_ARRAY, componentName);\n        return this.layout;\n    }\n    asPartial() {\n        if (!this.partial) this.partial = this.scanner.scanEntryPoint(this.compilationMeta(true));\n        return this.partial;\n    }\n    asBlock() {\n        if (!this.block) this.block = this.scanner.scanBlock(this.compilationMeta());\n        return this.block;\n    }\n    compilationMeta(asPartial = false) {\n        return { templateMeta: this.meta, symbols: this.symbols, asPartial };\n    }\n}","export var NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Element\"] = 0] = \"Element\";\n    NodeType[NodeType[\"Attribute\"] = 1] = \"Attribute\";\n    NodeType[NodeType[\"Text\"] = 2] = \"Text\";\n    NodeType[NodeType[\"CdataSection\"] = 3] = \"CdataSection\";\n    NodeType[NodeType[\"EntityReference\"] = 4] = \"EntityReference\";\n    NodeType[NodeType[\"Entity\"] = 5] = \"Entity\";\n    NodeType[NodeType[\"ProcessingInstruction\"] = 6] = \"ProcessingInstruction\";\n    NodeType[NodeType[\"Comment\"] = 7] = \"Comment\";\n    NodeType[NodeType[\"Document\"] = 8] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 9] = \"DocumentType\";\n    NodeType[NodeType[\"DocumentFragment\"] = 10] = \"DocumentFragment\";\n    NodeType[NodeType[\"Notation\"] = 11] = \"Notation\";\n})(NodeType || (NodeType = {}));","export function EMPTY_CACHE() {}","import { EMPTY_CACHE } from '../utils';\nimport { dict } from '@glimmer/util';\nimport Meta from '../meta';\nimport { PropertyReference } from './descriptors';\nimport { VOLATILE_TAG } from '@glimmer/reference';\nexport default class PathReference {\n    constructor(parent, property) {\n        this.cache = EMPTY_CACHE;\n        this.inner = null;\n        this.chains = null;\n        this.lastParentValue = EMPTY_CACHE;\n        this._guid = 0;\n        this.tag = VOLATILE_TAG;\n        this.parent = parent;\n        this.property = property;\n    }\n    value() {\n        let { lastParentValue, property, inner } = this;\n        let parentValue = this._parentValue();\n        if (parentValue === null || parentValue === undefined) {\n            return this.cache = undefined;\n        }\n        if (lastParentValue === parentValue) {\n            inner = this.inner;\n        } else {\n            let ReferenceType = typeof parentValue === 'object' ? Meta.for(parentValue).referenceTypeFor(property) : PropertyReference;\n            inner = this.inner = new ReferenceType(parentValue, property, this);\n        }\n        // if (typeof parentValue === 'object') {\n        //   Meta.for(parentValue).addReference(property, this);\n        // }\n        return this.cache = inner.value();\n    }\n    get(prop) {\n        let chains = this._getChains();\n        if (prop in chains) return chains[prop];\n        return chains[prop] = new PathReference(this, prop);\n    }\n    label() {\n        return '[reference Direct]';\n    }\n    _getChains() {\n        if (this.chains) return this.chains;\n        return this.chains = dict();\n    }\n    _parentValue() {\n        let parent = this.parent.value();\n        this.lastParentValue = parent;\n        return parent;\n    }\n}\nexport { PathReference };","import { dict } from '@glimmer/util';\nimport { PathReference } from './path';\nimport { VOLATILE_TAG } from '@glimmer/reference';\nexport default class RootReference {\n    constructor(object) {\n        this.chains = dict();\n        this.tag = VOLATILE_TAG;\n        this.object = object;\n    }\n    value() {\n        return this.object;\n    }\n    update(object) {\n        this.object = object;\n        // this.notify();\n    }\n    get(prop) {\n        let chains = this.chains;\n        if (prop in chains) return chains[prop];\n        return chains[prop] = new PathReference(this, prop);\n    }\n    chainFor(prop) {\n        let chains = this.chains;\n        if (prop in chains) return chains[prop];\n        return null;\n    }\n    path(string) {\n        return string.split('.').reduce((ref, part) => ref.get(part), this);\n    }\n    referenceFromParts(parts) {\n        return parts.reduce((ref, part) => ref.get(part), this);\n    }\n    label() {\n        return '[reference Root]';\n    }\n}","import { PropertyReference } from './references/descriptors';\nimport RootReference from './references/root';\nimport { DictSet, dict } from '@glimmer/util';\nimport { VOLATILE_TAG } from '@glimmer/reference';\nconst NOOP_DESTROY = { destroy() {} };\nclass ConstPath {\n    constructor(parent, _property) {\n        this.tag = VOLATILE_TAG;\n        this.parent = parent;\n    }\n    chain() {\n        return NOOP_DESTROY;\n    }\n    notify() {}\n    value() {\n        return this.parent[this.property];\n    }\n    get(prop) {\n        return new ConstPath(this.parent[this.property], prop);\n    }\n}\nclass ConstRoot {\n    constructor(value) {\n        this.tag = VOLATILE_TAG;\n        this.inner = value;\n    }\n    update(inner) {\n        this.inner = inner;\n    }\n    chain() {\n        return NOOP_DESTROY;\n    }\n    notify() {}\n    value() {\n        return this.inner;\n    }\n    referenceFromParts(_parts) {\n        throw new Error(\"Not implemented\");\n    }\n    chainFor(_prop) {\n        throw new Error(\"Not implemented\");\n    }\n    get(prop) {\n        return new ConstPath(this.inner, prop);\n    }\n}\nclass ConstMeta /*implements IMeta*/ {\n    constructor(object) {\n        this.object = object;\n    }\n    root() {\n        return new ConstRoot(this.object);\n    }\n}\nexport const CLASS_META = \"df8be4c8-4e89-44e2-a8f9-550c8dacdca7\";\nconst hasOwnProperty = Object.hasOwnProperty;\nclass Meta {\n    constructor(object, { RootReferenceFactory, DefaultPathReferenceFactory }) {\n        this.references = null;\n        this.slots = null;\n        this.referenceTypes = null;\n        this.propertyMetadata = null;\n        this.object = object;\n        this.RootReferenceFactory = RootReferenceFactory || RootReference;\n        this.DefaultPathReferenceFactory = DefaultPathReferenceFactory || PropertyReference;\n    }\n    static for(obj) {\n        if (obj === null || obj === undefined) return new Meta(obj, {});\n        if (hasOwnProperty.call(obj, '_meta') && obj._meta) return obj._meta;\n        if (!Object.isExtensible(obj)) return new ConstMeta(obj);\n        let MetaToUse = Meta;\n        if (obj.constructor && obj.constructor[CLASS_META]) {\n            let classMeta = obj.constructor[CLASS_META];\n            MetaToUse = classMeta.InstanceMetaConstructor;\n        } else if (obj[CLASS_META]) {\n            MetaToUse = obj[CLASS_META].InstanceMetaConstructor;\n        }\n        return obj._meta = new MetaToUse(obj, {});\n    }\n    static exists(obj) {\n        return typeof obj === 'object' && obj._meta;\n    }\n    static metadataForProperty(_key) {\n        return null;\n    }\n    addReference(property, reference) {\n        let refs = this.references = this.references || dict();\n        let set = refs[property] = refs[property] || new DictSet();\n        set.add(reference);\n    }\n    addReferenceTypeFor(property, type) {\n        this.referenceTypes = this.referenceTypes || dict();\n        this.referenceTypes[property] = type;\n    }\n    referenceTypeFor(property) {\n        if (!this.referenceTypes) return PropertyReference;\n        return this.referenceTypes[property] || PropertyReference;\n    }\n    removeReference(property, reference) {\n        if (!this.references) return;\n        let set = this.references[property];\n        set.delete(reference);\n    }\n    getReferenceTypes() {\n        this.referenceTypes = this.referenceTypes || dict();\n        return this.referenceTypes;\n    }\n    referencesFor(property) {\n        if (!this.references) return null;\n        return this.references[property];\n    }\n    getSlots() {\n        return this.slots = this.slots || dict();\n    }\n    root() {\n        return this.rootCache = this.rootCache || new this.RootReferenceFactory(this.object);\n    }\n}\nexport default Meta;\nexport function metaFor(obj) {\n    return Meta.for(obj);\n}","import Meta from '../meta';\nimport { VOLATILE_TAG } from '@glimmer/reference';\nexport class PropertyReference {\n    constructor(object, property, _outer) {\n        this.tag = VOLATILE_TAG;\n        this.object = object;\n        this.property = property;\n    }\n    value() {\n        return this.object[this.property];\n    }\n    label() {\n        return '[reference Property]';\n    }\n}\nexport function ComputedReferenceBlueprint(_property, dependencies) {\n    return class ComputedReference {\n        constructor(object, property, outer) {\n            this.installed = false;\n            this.tag = VOLATILE_TAG;\n            this.object = object;\n            this.property = property;\n            this.dependencies = dependencies;\n            this.outer = outer;\n        }\n        value() {\n            if (!this.installed) {\n                let root = Meta.for(this.object).root();\n                this.dependencies.forEach(dep => {\n                    let ref = root.referenceFromParts(dep);\n                    ref.value();\n                });\n                this.installed = true;\n            }\n            return this.object[this.property];\n        }\n        label() {\n            return '[reference Computed]';\n        }\n    };\n}","// import { metaFor } from './meta';\n// import { intern } from '@glimmer/util';\n// import { metaFor } from './meta';\nexport function setProperty(parent, property, val) {\n    // let rootProp = metaFor(parent).root().chainFor(property));\n    // let referencesToNotify = metaFor(parent).referencesFor(property));\n    parent[property] = val;\n    // if (referencesToNotify) {\n    //   referencesToNotify.forEach(function(ref) { ref.notify(); });\n    // }\n    // if (rootProp) rootProp.notify();\n}\nexport function notifyProperty(_parent, _property) {\n    // let rootProp = metaFor(parent).root().chainFor(property));\n    // let referencesToNotify = metaFor(parent).referencesFor(property));\n    // if (referencesToNotify) {\n    //   referencesToNotify.forEach(function(ref) { ref.notify(); });\n    // }\n    // if (rootProp) rootProp.notify();\n}","import {\n  Registry,\n  RegistryAccessor,\n  RegistrationOptions,\n  Injection,\n  Resolver\n} from '@glimmer/di';\n\nfunction isTypeSpecifier(specifier: string) {\n  return specifier.indexOf(':') === -1;\n}\n\nexport default class ApplicationRegistry implements RegistryAccessor {\n  private _registry: Registry;\n  private _resolver: Resolver;\n\n  constructor(registry: Registry, resolver: Resolver) {\n    this._registry = registry;\n    this._resolver = resolver;\n  }\n\n  register(specifier: string, factory: any, options?: RegistrationOptions): void {\n    let normalizedSpecifier = this._toAbsoluteSpecifier(specifier);\n    this._registry.register(normalizedSpecifier, factory, options);\n  }\n\n  registration(specifier: string): any {\n    let normalizedSpecifier = this._toAbsoluteSpecifier(specifier);\n    return this._registry.registration(normalizedSpecifier);\n  }\n\n  unregister(specifier: string) {\n    let normalizedSpecifier = this._toAbsoluteSpecifier(specifier);\n    this._registry.unregister(normalizedSpecifier);\n  }\n\n  registerOption(specifier: string, option: string, value: any): void {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    this._registry.registerOption(normalizedSpecifier, option, value);\n  }\n\n  registeredOption(specifier: string, option: string): any {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    return this._registry.registeredOption(normalizedSpecifier, option);\n  }\n\n  registeredOptions(specifier: string): any {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    return this._registry.registeredOptions(normalizedSpecifier);\n  }\n\n  unregisterOption(specifier: string, option: string): void {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    this._registry.unregisterOption(normalizedSpecifier, option);\n  }\n\n  registerInjection(specifier: string, property: string, injection: string): void {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    let normalizedInjection = this._toAbsoluteSpecifier(injection);\n    this._registry.registerInjection(normalizedSpecifier, property, normalizedInjection);\n  }\n\n  registeredInjections(specifier: string): Injection[] {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    return this._registry.registeredInjections(normalizedSpecifier);\n  }\n\n  private _toAbsoluteSpecifier(specifier: string, referrer?: string): string {\n    return this._resolver.identify(specifier, referrer);\n  }\n\n  private _toAbsoluteOrTypeSpecifier(specifier: string): string {\n    if (isTypeSpecifier(specifier)) {\n      return specifier;\n    } else {\n      return this._toAbsoluteSpecifier(specifier);\n    }\n  }\n}","import {\n  assign,\n  Opaque\n} from '@glimmer/util';\nimport {\n  DynamicScope as GlimmerDynamicScope\n} from '@glimmer/runtime';\nimport {\n  PathReference\n} from '@glimmer/reference';\n\nexport default class DynamicScope implements GlimmerDynamicScope {\n  private bucket;\n\n  constructor(bucket=null) {\n    if (bucket) {\n      this.bucket = assign({}, bucket);\n    } else {\n      this.bucket = {};\n    }\n  }\n\n  get(key: string): PathReference<Opaque> {\n    return this.bucket[key];\n  }\n\n  set(key: string, reference: PathReference<Opaque>) {\n    return this.bucket[key] = reference;\n  }\n\n  child(): DynamicScope {\n    return new DynamicScope(this.bucket);\n  }\n}\n","import {\n  Opaque\n} from '@glimmer/util';\n\nimport {\n  Reference,\n  OpaqueIterator,\n  AbstractIterable,\n  IterationItem,\n  Tag\n} from \"@glimmer/reference\";\n\nimport {\n  UpdatableReference\n} from \"@glimmer/object-reference\";\n\nexport type KeyFor<T> = (item: Opaque, index: T) => string;\n\nclass ArrayIterator implements OpaqueIterator {\n  private array: Opaque[];\n  private keyFor: KeyFor<number>;\n  private position = 0;\n\n  constructor(array: Opaque[], keyFor: KeyFor<number>) {\n    this.array = array;\n    this.keyFor = keyFor;\n  }\n\n  isEmpty(): boolean {\n    return this.array.length === 0;\n  }\n\n  next(): IterationItem<Opaque, number> {\n    let { position, array, keyFor } = this;\n\n    if (position >= array.length) return null;\n\n    let value = array[position];\n    let key = keyFor(value, position);\n    let memo = position;\n\n    this.position++;\n\n    return { key, value, memo };\n  }\n}\n\nclass ObjectKeysIterator implements OpaqueIterator {\n  private keys: string[];\n  private values: Opaque[];\n  private keyFor: KeyFor<string>;\n  private position = 0;\n\n  constructor(keys: string[], values: Opaque[], keyFor: KeyFor<string>) {\n    this.keys = keys;\n    this.values = values;\n    this.keyFor = keyFor;\n  }\n\n  isEmpty(): boolean {\n    return this.keys.length === 0;\n  }\n\n  next(): IterationItem<Opaque, string> {\n    let { position, keys, values, keyFor } = this;\n\n    if (position >= keys.length) return null;\n\n    let value = values[position];\n    let memo = keys[position];\n    let key = keyFor(value, memo);\n\n    this.position++;\n\n    return { key, value, memo };\n  }\n}\n\nclass EmptyIterator implements OpaqueIterator {\n  isEmpty(): boolean {\n    return true;\n  }\n\n  next(): IterationItem<Opaque, Opaque> {\n    throw new Error(`Cannot call next() on an empty iterator`);\n  }\n}\n\nconst EMPTY_ITERATOR = new EmptyIterator();\n\nexport default class Iterable implements AbstractIterable<Opaque, Opaque, IterationItem<Opaque, Opaque>, UpdatableReference<Opaque>, UpdatableReference<Opaque>> {\n  public tag: Tag;\n  private ref: Reference<Opaque>;\n  private keyFor: KeyFor<Opaque>;\n\n  constructor(ref: Reference<Opaque>, keyFor: KeyFor<Opaque>) {\n    this.tag = ref.tag;\n    this.ref = ref;\n    this.keyFor = keyFor;\n  }\n\n  iterate(): OpaqueIterator {\n    let { ref, keyFor } = this;\n\n    let iterable = ref.value() as any;\n\n    if (Array.isArray(iterable)) {\n      return iterable.length > 0 ? new ArrayIterator(iterable, keyFor) : EMPTY_ITERATOR;\n    } else if (iterable === undefined || iterable === null) {\n      return EMPTY_ITERATOR;\n    } else if (iterable.forEach !== undefined) {\n      let array = [];\n      iterable.forEach(function(item) {\n        array.push(item);\n      });\n      return array.length > 0 ? new ArrayIterator(array, keyFor) : EMPTY_ITERATOR;\n    } else if (typeof iterable === 'object') {\n       let keys = Object.keys(iterable);\n       return keys.length > 0 ? new ObjectKeysIterator(keys, keys.map(key => iterable[key]), keyFor) : EMPTY_ITERATOR;\n     } else {\n      throw new Error(`Don't know how to {{#each ${iterable}}}`);\n    }\n  }\n\n  valueReferenceFor(item: IterationItem<Opaque, Opaque>): UpdatableReference<Opaque> {\n    return new UpdatableReference(item.value);\n  }\n\n  updateValueReference(reference: UpdatableReference<Opaque>, item: IterationItem<Opaque, Opaque>) {\n    reference.update(item.value);\n  }\n\n  memoReferenceFor(item: IterationItem<Opaque, Opaque>): UpdatableReference<Opaque> {\n    return new UpdatableReference(item.memo);\n  }\n\n  updateMemoReference(reference: UpdatableReference<Opaque>, item: IterationItem<Opaque, Opaque>) {\n    reference.update(item.memo);\n  }\n}\n","import { ConstReference, Reference } from \"@glimmer/reference\";\nimport { VM, Arguments } from \"@glimmer/runtime\";\n\nexport default function buildAction(vm: VM, _args: Arguments) {\n  let componentRef = vm.getSelf();\n  let args = _args.capture();\n\n  let actionFunc = args.positional.at(0).value() as Function;\n  if (typeof actionFunc !== 'function') {\n    throwNoActionError(actionFunc, args.positional.at(0));\n  }\n\n  return new ConstReference(function action(...invokedArgs) {\n    let curriedArgs = args.positional.value();\n    // Consume the action function that was already captured above.\n    curriedArgs.shift();\n\n    curriedArgs.push(...invokedArgs);\n\n    // Invoke the function with the component as the context, the curried\n    // arguments passed to `{{action}}`, and the arguments the bound function\n    // was invoked with.\n    actionFunc.apply(componentRef && componentRef.value(), curriedArgs);\n  });\n}\n\nfunction throwNoActionError(actionFunc: any, actionFuncReference: Reference<any>) {\n  let referenceInfo = debugInfoForReference(actionFuncReference);\n  throw new Error(`You tried to create an action with the {{action}} helper, but the first argument ${referenceInfo}was ${typeof actionFunc} instead of a function.`);\n}\n\nexport function debugInfoForReference(reference: any): string {\n  let message = '';\n  let parent;\n  let property;\n\n  if (reference === null || reference === undefined) { return message; }\n\n  if ('parent' in reference && 'property' in reference) {\n    parent = reference['parent'].value();\n    property = reference['property'];\n  } else if ('_parentValue' in reference && '_propertyKey' in reference) {\n    parent = reference['_parentValue'];\n    property = reference['_propertyKey'];\n  }\n\n  if (property !== undefined) {\n    message += `('${property}' on ${debugName(parent)}) `;\n  }\n\n  return message;\n}\n\nfunction debugName(obj: any) {\n  let objType = typeof obj;\n  if (obj === null || obj === undefined) {\n    return objType;\n  } else if (objType === 'number' || objType === 'boolean') {\n    return obj.toString();\n  } else {\n    if (obj['debugName']) {\n      return obj['debugName'];\n    }\n    try {\n      return JSON.stringify(obj);\n    } catch (e) { }\n    return obj.toString();\n  }\n}\n","import {\n  Dict,\n  Opaque\n} from '@glimmer/util';\n\nimport {\n  VOLATILE_TAG,\n  PathReference,\n  Reference\n} from \"@glimmer/reference\";\n\nimport {\n  Arguments,\n  CapturedArguments,\n  Helper as GlimmerHelper,\n  VM\n} from \"@glimmer/runtime\";\n\nexport type UserHelper = (args: ReadonlyArray<Opaque>, named: Dict<Opaque>) => any;\n\nexport default function buildUserHelper(helperFunc): GlimmerHelper {\n  return (_vm: VM, args: Arguments) => new HelperReference(helperFunc, args);\n}\n\nexport class SimplePathReference<T> implements PathReference<T> {\n  private parent: Reference<T>;\n  private property: string;\n  public tag = VOLATILE_TAG;\n\n  constructor(parent: Reference<T>, property: string) {\n    this.parent = parent;\n    this.property = property;\n  }\n\n  value(): T {\n    return this.parent.value()[this.property];\n  }\n\n  get(prop: string): PathReference<Opaque> {\n    return new SimplePathReference(this, prop);\n  }\n}\n\nexport class HelperReference implements PathReference<Opaque> {\n  private helper: UserHelper;\n  private args: CapturedArguments;\n  public tag = VOLATILE_TAG;\n\n  constructor(helper: UserHelper, args: Arguments) {\n    this.helper = helper;\n    this.args = args.capture();\n  }\n\n  value() {\n    let { helper, args } = this;\n\n    return helper(args.positional.value(), args.named.value());\n  }\n\n  get(prop: string): SimplePathReference<Opaque> {\n    return new SimplePathReference(this, prop);\n  }\n}\n","import {\n  DOMChanges,\n  DOMTreeConstruction,\n  Environment as GlimmerEnvironment,\n  InlineMacros,\n  ModifierManager,\n  templateFactory,\n  ComponentDefinition,\n  Component,\n  ComponentManager,\n  BlockMacros,\n  Helper as GlimmerHelper\n} from '@glimmer/runtime';\nimport {\n  Reference,\n  OpaqueIterable\n} from \"@glimmer/reference\";\nimport {\n  dict,\n  Opaque\n} from '@glimmer/util';\nimport {\n  getOwner,\n  setOwner,\n  Owner,\n  Factory\n} from '@glimmer/di';\nimport Iterable from './iterable';\nimport { TemplateMeta } from '@glimmer/component';\nimport ComponentDefinitionCreator from './component-definition-creator';\nimport Application from \"./application\";\nimport {\n  blockComponentMacro,\n  inlineComponentMacro\n } from './dynamic-component';\n import action from './helpers/action';\n import buildUserHelper from './helpers/user-helper';\n\ntype KeyFor<T> = (item: Opaque, index: T) => string;\n\nexport interface EnvironmentOptions {\n  document?: HTMLDocument;\n  appendOperations?: DOMTreeConstruction;\n}\n\nclass DefaultComponentDefinition extends ComponentDefinition<any> {\n  toJSON() {\n    return `<default-component-definition name=${this.name}>`;\n  }\n}\n\nconst DEFAULT_MANAGER = 'main';\nconst DEFAULT_HELPERS = {\n  action\n};\n\nexport default class Environment extends GlimmerEnvironment {\n  private helpers = dict<GlimmerHelper>();\n  private modifiers = dict<ModifierManager<Opaque>>();\n  private components = dict<ComponentDefinition<Component>>();\n  private managers = dict<ComponentManager<Component>>();\n  private uselessAnchor: HTMLAnchorElement;\n\n  static create(options: EnvironmentOptions = {}) {\n    options.document = options.document || self.document;\n    options.appendOperations = options.appendOperations || new DOMTreeConstruction(options.document);\n\n    return new Environment(options);\n  }\n\n  constructor(options: EnvironmentOptions) {\n    super({ appendOperations: options.appendOperations, updateOperations: new DOMChanges(options.document as HTMLDocument || document) });\n\n    setOwner(this, getOwner(options));\n\n    // TODO - required for `protocolForURL` - seek alternative approach\n    // e.g. see `installPlatformSpecificProtocolForURL` in Ember\n    this.uselessAnchor = options.document.createElement('a') as HTMLAnchorElement;\n  }\n\n  protocolForURL(url: string): string {\n    // TODO - investigate alternative approaches\n    // e.g. see `installPlatformSpecificProtocolForURL` in Ember\n    this.uselessAnchor.href = url;\n    return this.uselessAnchor.protocol;\n  }\n\n  hasPartial() {\n    return false;\n  }\n\n  lookupPartial(): any {\n  }\n\n  managerFor(managerId: string = DEFAULT_MANAGER): ComponentManager<Component> {\n    let manager: ComponentManager<Component>;\n\n    manager = this.managers[managerId];\n    if (!manager) {\n      let app: Application = getOwner(this) as any as Application;\n      manager = this.managers[managerId] = getOwner(this).lookup(`component-manager:/${app.rootName}/component-managers/${managerId}`);\n      if (!manager) {\n        throw new Error(`No component manager found for ID ${managerId}.`);\n      }\n    }\n    return manager;\n  }\n\n  hasComponentDefinition(name: string, meta: TemplateMeta): boolean {\n    return !!this.getComponentDefinition(name, meta);\n  }\n\n  getComponentDefinition(name: string, meta: TemplateMeta): ComponentDefinition<Component> {\n    let owner: Owner = getOwner(this);\n    let relSpecifier = `template:${name}`;\n    let referrer: string = meta.specifier;\n\n    let specifier = owner.identify(relSpecifier, referrer);\n    if (specifier === undefined) {\n      if (owner.identify(`component:${name}`, referrer)) {\n        throw new Error(`The component '${name}' is missing a template. All components must have a template. Make sure there is a template.hbs in the component directory.`);\n      } else {\n        throw new Error(\"Could not find template for \" + name);\n      }\n    }\n\n    if (!this.components[specifier]) {\n      return this.registerComponent(name, specifier, meta, owner);\n    }\n\n    return this.components[specifier];\n  }\n\n  registerComponent(name: string, templateSpecifier: string, meta: TemplateMeta, owner: Owner): ComponentDefinition<Component> {\n    let serializedTemplate = owner.lookup('template', templateSpecifier);\n    let componentSpecifier = owner.identify('component', templateSpecifier);\n    let componentFactory: Factory<Component> = null;\n\n    if (componentSpecifier) {\n      componentFactory = owner.factoryFor(componentSpecifier);\n    }\n\n    let template = templateFactory<TemplateMeta>(serializedTemplate).create(this);\n    let manager: ComponentManager<Component> = this.managerFor(meta.managerId);\n    let definition: ComponentDefinition<Component>;\n\n    if (canCreateComponentDefinition(manager)) {\n      definition = manager.createComponentDefinition(name, template, componentFactory);\n    } else {\n      definition = new DefaultComponentDefinition(name, manager, componentFactory);\n    }\n\n    this.components[templateSpecifier] = definition;\n\n    return definition;\n  }\n\n  hasHelper(name: string, meta: TemplateMeta) {\n    return !!this.lookupHelper(name, meta);\n  }\n\n  lookupHelper(name: string, meta: TemplateMeta): GlimmerHelper {\n    if (DEFAULT_HELPERS[name]) {\n      return DEFAULT_HELPERS[name];\n    }\n\n    let owner: Owner = getOwner(this);\n    let relSpecifier = `helper:${name}`;\n    let referrer: string = meta.specifier;\n\n    let specifier = owner.identify(relSpecifier, referrer);\n    if (specifier === undefined) {\n      return;\n    }\n\n    if (!this.helpers[specifier]) {\n      return this.registerHelper(specifier, owner);\n    }\n\n    return this.helpers[specifier];\n  }\n\n  registerHelper(specifier: string, owner: Owner): GlimmerHelper {\n    let helperFunc = owner.lookup(specifier);\n\n    let userHelper = buildUserHelper(helperFunc);\n    this.helpers[specifier] = userHelper;\n\n    return userHelper;\n  }\n\n  hasModifier(modifierName: string, blockMeta: TemplateMeta): boolean {\n    return modifierName.length === 1 && (modifierName in this.modifiers);\n  }\n\n  lookupModifier(modifierName: string, blockMeta: TemplateMeta): ModifierManager<Opaque> {\n    let modifier = this.modifiers[modifierName];\n\n    if(!modifier) throw new Error(`Modifier for ${modifierName} not found.`);\n    return modifier;\n  }\n\n  iterableFor(ref: Reference<Opaque>, keyPath: string): OpaqueIterable {\n    let keyFor: KeyFor<Opaque>;\n\n    if (!keyPath) {\n      throw new Error('Must specify a key for #each');\n    }\n\n    switch (keyPath) {\n      case '@index':\n        keyFor = (_, index: number) => String(index);\n      break;\n      case '@primitive':\n        keyFor = (item: Opaque) => String(item);\n      break;\n      default:\n        keyFor = (item: Opaque) => item[keyPath];\n      break;\n    }\n\n    return new Iterable(ref, keyFor);\n  }\n\n  macros(): { blocks: BlockMacros, inlines: InlineMacros } {\n    let macros = super.macros();\n\n    populateMacros(macros.blocks, macros.inlines);\n\n    return macros;\n  }\n}\n\nfunction populateMacros(blocks: BlockMacros, inlines: InlineMacros): void {\n  blocks.add('component', blockComponentMacro);\n  inlines.add('component', inlineComponentMacro);\n}\n\nfunction canCreateComponentDefinition(manager: ComponentDefinitionCreator | ComponentManager<Component>): manager is ComponentDefinitionCreator {\n  return (manager as ComponentDefinitionCreator).createComponentDefinition !== undefined;\n}\n","export default {\"id\":\"UN61+JFU\",\"block\":\"{\\\"symbols\\\":[\\\"root\\\"],\\\"statements\\\":[[4,\\\"each\\\",[[19,0,[\\\"roots\\\"]]],[[\\\"key\\\"],[\\\"id\\\"]],{\\\"statements\\\":[[4,\\\"-in-element\\\",[[19,1,[\\\"parent\\\"]]],[[\\\"nextSibling\\\"],[[19,1,[\\\"nextSibling\\\"]]]],{\\\"statements\\\":[[1,[25,\\\"component\\\",[[19,1,[\\\"component\\\"]]],null],false]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\",\"meta\":{\"specifier\":\"template:/-application/templates/main\"}};","import {\n  Container,\n  Factory,\n  Owner,\n  Registry,\n  RegistryWriter,\n  Resolver,\n  setOwner,\n} from '@glimmer/di';\nimport {\n  Simple,\n  templateFactory,\n  ComponentDefinition,\n  Component\n} from '@glimmer/runtime';\nimport {\n  UpdatableReference\n} from '@glimmer/object-reference';\nimport {\n  Option\n} from '@glimmer/util';\nimport ApplicationRegistry from './application-registry';\nimport DynamicScope from './dynamic-scope';\nimport Environment from './environment';\nimport mainTemplate from './templates/main';\n\nfunction NOOP() {}\n\nexport interface ApplicationOptions {\n  rootName: string;\n  resolver: Resolver;\n  document?: Simple.Document;\n}\n\nexport interface Initializer {\n  name?: string;\n  initialize(registry: RegistryWriter): void;\n}\n\nexport interface AppRoot {\n  id: number;\n  component: string | ComponentDefinition<Component>;\n  parent: Simple.Node;\n  nextSibling: Option<Simple.Node>;\n}\n\nexport default class Application implements Owner {\n  public rootName: string;\n  public resolver: Resolver;\n  public document: Simple.Document;\n  public env: Environment;\n  private _roots: AppRoot[] = [];\n  private _rootsIndex = 0;\n  private _registry: Registry;\n  private _container: Container;\n  private _initializers: Initializer[] = [];\n  private _initialized = false;\n  private _rendering = false;\n  private _rendered = false;\n  private _scheduled = false;\n  private _rerender: () => void = NOOP;\n\n  constructor(options: ApplicationOptions) {\n    this.rootName = options.rootName;\n    this.resolver = options.resolver;\n    this.document = options.document || window.document;\n  }\n\n  /** @hidden */\n  registerInitializer(initializer: Initializer): void {\n    this._initializers.push(initializer);\n  }\n\n  /** @hidden */\n  initRegistry(): void {\n    let registry = this._registry = new Registry();\n\n    // Create ApplicationRegistry as a proxy to the underlying registry\n    // that will only be available during `initialize`.\n    let appRegistry = new ApplicationRegistry(this._registry, this.resolver);\n\n    registry.register(`environment:/${this.rootName}/main/main`, Environment);\n    registry.registerOption('helper', 'instantiate', false);\n    registry.registerOption('template', 'instantiate', false);\n    registry.register(`document:/${this.rootName}/main/main`, this.document as any);\n    registry.registerOption('document', 'instantiate', false);\n    registry.registerInjection('environment', 'document', `document:/${this.rootName}/main/main`);\n    registry.registerInjection('component-manager', 'env', `environment:/${this.rootName}/main/main`);\n\n    let initializers = this._initializers;\n    for (let i = 0; i < initializers.length; i++) {\n      initializers[i].initialize(appRegistry);\n    }\n\n    this._initialized = true;\n  }\n\n  /** @hidden */\n  initContainer(): void {\n    this._container = new Container(this._registry, this.resolver);\n\n    // Inject `this` (the app) as the \"owner\" of every object instantiated\n    // by its container.\n    this._container.defaultInjections = (specifier: string) => {\n      let hash = {};\n      setOwner(hash, this);\n      return hash;\n    };\n  }\n\n  /** @hidden */\n  initialize(): void {\n    this.initRegistry();\n    this.initContainer();\n  }\n\n  /** @hidden */\n  boot(): void {\n    this.initialize();\n\n    this.env = this.lookup(`environment:/${this.rootName}/main/main`);\n\n    this.render();\n  }\n\n  /** @hidden */\n  render(): void {\n    this.env.begin();\n\n    let mainLayout = templateFactory(mainTemplate).create(this.env);\n    let self = new UpdatableReference({ roots: this._roots });\n    let doc = this.document as Document; // TODO FixReification\n    let appendTo = doc.body;\n    let dynamicScope = new DynamicScope();\n    let templateIterator = mainLayout.render(self, appendTo, dynamicScope);\n    let result;\n    do {\n      result = templateIterator.next();\n    } while (!result.done);\n\n    this.env.commit();\n\n    let renderResult = result.value;\n\n    this._rerender = () => {\n      this.env.begin();\n      renderResult.rerender();\n      this.env.commit();\n      this._didRender();\n    };\n\n    this._didRender();\n  }\n\n  _didRender(): void {\n    this._rendered = true;\n  }\n\n  renderComponent(component: string | ComponentDefinition<Component>, parent: Simple.Node, nextSibling: Option<Simple.Node> = null): void {\n    this._roots.push({ id: this._rootsIndex++, component, parent, nextSibling });\n    this.scheduleRerender();\n  }\n\n  scheduleRerender(): void {\n    if (this._scheduled || !this._rendered) return;\n\n    this._rendering = true;\n    this._scheduled = true;\n    requestAnimationFrame(() => {\n      this._scheduled = false;\n      this._rerender();\n      this._rendering = false;\n    });\n  }\n\n  /**\n   * Owner interface implementation\n   *\n   * @hidden\n   */\n  identify(specifier: string, referrer?: string): string {\n    return this.resolver.identify(specifier, referrer);\n  }\n\n  /** @hidden */\n  factoryFor(specifier: string, referrer?: string): Factory<any> {\n    return this._container.factoryFor(this.identify(specifier, referrer));\n  }\n\n  /** @hidden */\n  lookup(specifier: string, referrer?: string): any {\n    return this._container.lookup(this.identify(specifier, referrer));\n  }\n}\n","import { RegistrationOptions } from './registry';\nimport { Factory } from './factory';\n\n// TODO - use symbol\nexport const OWNER = '__owner__';\n\nexport function getOwner(object: object): Owner {\n  return object[OWNER];\n}\n\nexport function setOwner(object: object, owner: Owner): void {\n  object[OWNER] = owner;\n}\n\nexport interface Owner {\n  identify(specifier: string, referrer?: string): string;\n\n  factoryFor(specifier: string, referrer?: string): Factory<any>;\n  \n  lookup(specifier: string, referrer?: string): any;\n}\n","export interface Specifier {\n  rootName?: string;\n  collection?: string;\n  namespace?: string;\n  name?: string;\n  type?: string;\n}\n\nexport function isSpecifierStringAbsolute(specifier: string): boolean {\n  let [type, path] = specifier.split(':');\n  return !!(type && path && path.indexOf('/') === 0 && path.split('/').length > 3);\n}\n\nexport function isSpecifierObjectAbsolute(specifier: Specifier): boolean {\n  return specifier.rootName !== undefined &&\n         specifier.collection !== undefined &&\n         specifier.name !== undefined &&\n         specifier.type !== undefined;\n}\n\nexport function serializeSpecifier(specifier: Specifier): string {\n  let type = specifier.type;\n  let path = serializeSpecifierPath(specifier);\n\n  if (path) {\n    return type + ':' + path;\n  } else {\n    return type;\n  }\n}\n\nexport function serializeSpecifierPath(specifier: Specifier): string {\n  let path = [];\n  if (specifier.rootName) {\n    path.push(specifier.rootName);\n  }\n  if (specifier.collection) {\n    path.push(specifier.collection);\n  }\n  if (specifier.namespace) {\n    path.push(specifier.namespace);\n  }\n  if (specifier.name) {\n    path.push(specifier.name);\n  }\n\n  if (path.length > 0) {\n    let fullPath = path.join('/');\n    if (isSpecifierObjectAbsolute(specifier)) {\n      fullPath = '/' + fullPath;\n    }\n    return fullPath;\n  }\n}\n\nexport function deserializeSpecifier(specifier: string): Specifier {\n  let obj: Specifier = {};\n\n  if (specifier.indexOf(':') > -1) {\n    let [type, path] = specifier.split(':');\n    obj.type = type;\n\n    let pathSegments;\n\n    if (path.indexOf('/') === 0) {\n      pathSegments = path.substr(1).split('/');\n      obj.rootName = pathSegments.shift();\n      obj.collection = pathSegments.shift();\n    } else {\n      pathSegments = path.split('/');\n    }\n\n    if (pathSegments.length > 0) {\n      obj.name = pathSegments.pop();\n\n      if (pathSegments.length > 0) {\n        obj.namespace = pathSegments.join('/');\n      }\n    }\n\n  } else {\n    obj.type = specifier;\n  }\n\n  return obj;\n}\n","export function assert(description: string, test: any) {\n  if (!test) {\n    throw new Error('Assertion Failed: ' + description);\n  }\n}\n","import {\n  Resolver as IResolver,\n  Specifier,\n  isSpecifierStringAbsolute,\n  isSpecifierObjectAbsolute,\n  deserializeSpecifier,\n  serializeSpecifier\n} from '@glimmer/di';\nimport { assert } from './utils/debug';\nimport { ModuleRegistry } from './module-registry';\nimport { ResolverConfiguration } from './resolver-configuration';\n\nexport default class Resolver implements IResolver {\n  public config: ResolverConfiguration;\n  public registry: ModuleRegistry;\n\n  constructor(config: ResolverConfiguration, registry: ModuleRegistry) {\n    this.config = config;\n    this.registry = registry;\n  }\n\n  identify(specifier: string, referrer?: string): string {\n    if (isSpecifierStringAbsolute(specifier)) {\n      return specifier;\n    }\n\n    let s = deserializeSpecifier(specifier);\n    let result: string;\n\n    if (referrer) {\n      let r = deserializeSpecifier(referrer);\n\n      if (isSpecifierObjectAbsolute(r)) {\n        assert('Specifier must not include a rootName, collection, or namespace when combined with an absolute referrer', s.rootName === undefined && s.collection === undefined && s.namespace === undefined);\n\n        // Look locally in the referrer's namespace\n        s.rootName = r.rootName;\n        s.collection = r.collection;\n        if (s.name) {\n          s.namespace = r.namespace ? r.namespace + '/' + r.name : r.name;\n        } else {\n          s.namespace = r.namespace;\n          s.name = r.name;\n        }\n        if (result = this._serializeAndVerify(s)) { return result; }\n\n        // Look for a private collection in the referrer's namespace\n        let privateCollection = this._definitiveCollection(s.type);\n        if (privateCollection) {\n          s.namespace += '/-' + privateCollection;\n          if (result = this._serializeAndVerify(s)) { return result; }\n        }\n\n        // Because local and private resolution has failed, clear all but `name` and `type`\n        // to proceed with top-level resolution\n        s.rootName = s.collection = s.namespace = undefined;\n      } else {\n        assert('Referrer must either be \"absolute\" or include a `type` to determine the associated type', r.type);\n\n        // Look in the definitive collection for the associated type\n        s.collection = this._definitiveCollection(r.type);\n        assert(`'${r.type}' does not have a definitive collection`, s.collection);\n      }\n    }\n\n    // If the collection is unspecified, use the definitive collection for the `type`\n    if (!s.collection) {\n      s.collection = this._definitiveCollection(s.type);\n      assert(`'${s.type}' does not have a definitive collection`, s.collection);\n    }\n\n    if (!s.rootName) {\n      // If the root name is unspecified, try the app's `rootName` first\n      s.rootName = this.config.app.rootName || 'app';\n      if (result = this._serializeAndVerify(s)) { return result; }\n\n      // Then look for an addon with a matching `rootName`\n      let addonDef;\n      if (s.namespace) {\n        addonDef = this.config.addons && this.config.addons[s.namespace];\n        s.rootName = s.namespace;\n        s.namespace = undefined;\n\n      } else {\n        addonDef = this.config.addons && this.config.addons[s.name];\n        s.rootName = s.name;\n        s.name = 'main';\n      }\n    }\n\n    if (result = this._serializeAndVerify(s)) { return result; }\n  }\n\n  retrieve(specifier: string): any {\n    return this.registry.get(specifier);\n  }\n\n  resolve(specifier: string, referrer?: string): any {\n    let id = this.identify(specifier, referrer);\n    if (id) {\n      return this.retrieve(id);\n    }\n  }\n\n  private _definitiveCollection(type: string): string {\n    let typeDef = this.config.types[type];\n    assert(`'${type}' is not a recognized type`, typeDef);\n    return typeDef.definitiveCollection;\n  }\n\n  private _serializeAndVerify(specifier: Specifier): string {\n    let serialized = serializeSpecifier(specifier);\n    if (this.registry.has(serialized)) {\n      return serialized;\n    }\n  }\n}\n","import { DEBUG } from \"@glimmer/env\";\nimport { Tag, DirtyableTag, TagWrapper, combine, CONSTANT_TAG } from \"@glimmer/reference\";\nimport { dict, Dict } from \"@glimmer/util\";\n\n/**\n * @decorator\n *\n * Marks a property as tracked.\n *\n * By default, a component's properties are expected to be static,\n * meaning you are not able to update them and have the template update accordingly.\n * Marking a property as tracked means that when that property changes,\n * a rerender of the component is scheduled so the template is kept up to date.\n *\n * @param dependencies Optional dependents to be tracked.\n */\nexport function tracked(...dependencies: string[]): MethodDecorator;\nexport function tracked(target: any, key: any): any;\nexport function tracked(target: any, key: any, descriptor: PropertyDescriptor): PropertyDescriptor;\nexport function tracked(...dependencies: any[]): any {\n  let [target, key, descriptor] = dependencies;\n\n  if (typeof target === \"string\") {\n    return function(target: any, key: string | Symbol, descriptor: PropertyDescriptor) {\n      return descriptorForTrackedComputedProperty(target, key, descriptor, dependencies);\n    };\n  } else {\n    if (descriptor) {\n      return descriptorForTrackedComputedProperty(target, key, descriptor, []);\n    } else {\n      installTrackedProperty(target, key);\n    }\n  }\n}\n\nfunction descriptorForTrackedComputedProperty(target: any, key: any, descriptor: PropertyDescriptor, dependencies: string[]): PropertyDescriptor {\n  let meta = metaFor(target);\n  meta.trackedProperties[key] = true;\n  meta.trackedPropertyDependencies[key] = dependencies || [];\n\n  return {\n    enumerable: true,\n    configurable: false,\n    get: descriptor.get,\n    set: function() {\n      metaFor(this).dirtyableTagFor(key).inner.dirty();\n      descriptor.set.apply(this, arguments);\n      propertyDidChange();\n    }\n  };\n}\n\nexport type Key = string;\n\n/**\n  Installs a getter/setter for change tracking. The accessor\n  acts just like a normal property, but it triggers the `propertyDidChange`\n  hook when written to.\n\n  Values are saved on the object using a \"shadow key,\" or a symbol based on the\n  tracked property name. Sets write the value to the shadow key, and gets read\n  from it.\n */\nfunction installTrackedProperty(target: any, key: Key) {\n  let value: any;\n  let shadowKey = Symbol(key);\n\n  let meta = metaFor(target);\n  meta.trackedProperties[key] = true;\n\n  if (target[key] !== undefined) {\n    value = target[key];\n  }\n\n  Object.defineProperty(target, key, {\n    configurable: true,\n\n    get() {\n      return this[shadowKey];\n    },\n\n    set(newValue) {\n      metaFor(this).dirtyableTagFor(key).inner.dirty();\n      this[shadowKey] = newValue;\n      propertyDidChange();\n    }\n  });\n}\n\n/**\n * Stores bookkeeping information about tracked properties on the target object\n * and includes helper methods for manipulating and retrieving that data.\n *\n * Computed properties (i.e., tracked getters/setters) deserve some explanation.\n * A computed property is invalidated when either it is set, or one of its\n * dependencies is invalidated. Therefore, we store two tags for each computed\n * property:\n *\n * 1. The dirtyable tag that we invalidate when the setter is invoked.\n * 2. A union tag (tag combinator) of the dirtyable tag and all of the computed\n *    property's dependencies' tags, used by Glimmer to determine \"does this\n *    computed property need to be recomputed?\"\n */\nexport default class Meta {\n  tags: Dict<Tag>;\n  computedPropertyTags: Dict<TagWrapper<DirtyableTag>>;\n  trackedProperties: Dict<boolean>;\n  trackedPropertyDependencies: Dict<string[]>;\n\n  constructor(parent: Meta) {\n    this.tags = dict<Tag>();\n    this.computedPropertyTags = dict<TagWrapper<DirtyableTag>>();\n    this.trackedProperties = parent ? Object.create(parent.trackedProperties) : dict<boolean>();\n    this.trackedPropertyDependencies = parent ? Object.create(parent.trackedPropertyDependencies) : dict<string[]>();\n  }\n\n  /**\n   * The tag representing whether the given property should be recomputed. Used\n   * by e.g. Glimmer VM to detect when a property should be re-rendered. Think\n   * of this as the \"public-facing\" tag.\n   *\n   * For static tracked properties, this is a single DirtyableTag. For computed\n   * properties, it is a combinator of the property's DirtyableTag as well as\n   * all of its dependencies' tags.\n   */\n  tagFor(key: Key): Tag {\n    let tag = this.tags[key];\n    if (tag) { return tag; }\n\n    let dependencies;\n    if (dependencies = this.trackedPropertyDependencies[key]) {\n      return this.tags[key] = combinatorForComputedProperties(this, key, dependencies);\n    }\n\n    return this.tags[key] = DirtyableTag.create();\n  }\n\n  /**\n   * The tag used internally to invalidate when a tracked property is set. For\n   * static properties, this is the same DirtyableTag returned from `tagFor`.\n   * For computed properties, it is the DirtyableTag used as one of the tags in\n   * the tag combinator of the CP and its dependencies.\n  */\n  dirtyableTagFor(key: Key): TagWrapper<DirtyableTag> {\n    let dependencies = this.trackedPropertyDependencies[key];\n    let tag;\n\n    if (dependencies) {\n      // The key is for a computed property.\n      tag = this.computedPropertyTags[key];\n      if (tag) { return tag; }\n      return this.computedPropertyTags[key] = DirtyableTag.create();\n    } else {\n      // The key is for a static property.\n      tag = this.tags[key];\n      if (tag) { return tag as TagWrapper<DirtyableTag>; }\n      return this.tags[key] = DirtyableTag.create();\n    }\n  }\n}\n\nfunction combinatorForComputedProperties(meta: Meta, key: Key, dependencies: Key[] | void): Tag {\n  // Start off with the tag for the CP's own dirty state.\n  let tags: Tag[] = [meta.dirtyableTagFor(key)];\n\n  // Next, add in all of the tags for its dependencies.\n  if (dependencies && dependencies.length) {\n    for (let i = 0; i < dependencies.length; i++) {\n      tags.push(meta.tagFor(dependencies[i]));\n    }\n  }\n\n  // Return a combinator across the CP's tags and its dependencies' tags.\n  return combine(tags);\n}\n\nexport interface Interceptors {\n  [key: string]: boolean;\n}\n\nlet META = Symbol(\"ember-object\");\n\nexport function metaFor(obj: any): Meta {\n  let meta = obj[META];\n  if (meta && hasOwnProperty(obj, META)) {\n    return meta;\n  }\n\n  return obj[META] = new Meta(meta);\n}\n\nlet hOP = Object.prototype.hasOwnProperty;\nfunction hasOwnProperty(obj: any, key: symbol) {\n  return hOP.call(obj, key);\n}\n\nlet propertyDidChange = function() {};\n\nexport function setPropertyDidChange(cb: () => void) {\n  propertyDidChange = cb;\n}\n\nexport function hasTag(obj: any, key: string): boolean {\n  let meta = obj[META] as Meta;\n\n  if (!obj[META]) { return false; }\n  if (!meta.trackedProperties[key]) { return false; }\n\n  return true;\n}\n\nexport class UntrackedPropertyError extends Error {\n  static for(obj: any, key: string): UntrackedPropertyError {\n    return new UntrackedPropertyError(obj, key, `The property '${key}' on ${obj} was changed after being rendered. If you want to change a property used in a template after the component has rendered, mark the property as a tracked property with the @tracked decorator.`);\n  }\n\n  constructor(public target: any, public key: string, message: string) {\n    super(message);\n  }\n}\n\n/**\n * Function that can be used in development mode to generate more meaningful\n * error messages.\n */\nexport interface UntrackedPropertyErrorThrower {\n  (obj: any, key: string): void;\n}\n\nfunction defaultErrorThrower(obj: any, key: string): UntrackedPropertyError {\n  throw UntrackedPropertyError.for(obj, key);\n}\n\nexport function tagForProperty(obj: any, key: string, throwError: UntrackedPropertyErrorThrower = defaultErrorThrower): Tag {\n  if (typeof obj === \"object\" && obj) {\n    if (DEBUG && !hasTag(obj, key)) {\n      installDevModeErrorInterceptor(obj, key, throwError);\n    }\n\n    let meta = metaFor(obj);\n    return meta.tagFor(key);\n  } else {\n    return CONSTANT_TAG;\n  }\n}\n\n/**\n * In development mode only, we install an ad hoc setter on properties where a\n * tag is requested (i.e., it was used in a template) without being tracked. In\n * cases where the property is set, we raise an error.\n */\nfunction installDevModeErrorInterceptor(obj: object, key: string, throwError: UntrackedPropertyErrorThrower) {\n  let target = obj;\n  let descriptor: PropertyDescriptor;\n\n  // Find the descriptor for the current property. We may need to walk the\n  // prototype chain to do so. If the property is undefined, we may never get a\n  // descriptor here.\n  let hasOwnDescriptor = true;\n  while (target) {\n    descriptor = Object.getOwnPropertyDescriptor(target, key);\n    if (descriptor) { break; }\n    hasOwnDescriptor = false;\n    target = Object.getPrototypeOf(target);\n  }\n\n  // If possible, define a property descriptor that passes through the current\n  // value on reads but throws an exception on writes.\n  if (descriptor) {\n    if (descriptor.configurable || !hasOwnDescriptor) {\n      Object.defineProperty(obj, key, {\n        configurable: descriptor.configurable,\n        enumerable: descriptor.enumerable,\n\n        get() {\n          if (descriptor.get) {\n            return descriptor.get.call(this);\n          } else {\n            return descriptor.value;\n          }\n        },\n\n        set() {\n          throwError(this, key);\n        }\n      });\n    }\n  } else {\n    Object.defineProperty(obj, key, {\n      set() {\n        throwError(this, key);\n      }\n    });\n  }\n}\n","import { Simple } from \"@glimmer/runtime\";\nimport { metaFor } from \"./tracked\";\n\n/**\n * The `Component` class defines an encapsulated UI element that is rendered to\n * the DOM. A component is made up of a template and, optionally, this component\n * object.\n *\n * ## Defining a Component\n *\n * To define a component, subclass `Component` and add your own properties,\n * methods and lifecycle hooks:\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n * }\n * ```\n *\n * ## Lifecycle Hooks\n *\n * Lifecycle hooks allow you to respond to changes to a component, such as when\n * it gets created, rendered, updated or destroyed. To add a lifecycle hook to a\n * component, implement the hook as a method on your component subclass.\n *\n * For example, to be notified when Glimmer has rendered your component so you\n * can attach a legacy jQuery plugin, implement the `didInsertElement()` method:\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n *   didInsertElement() {\n *     $(this.element).pickadate();\n *   }\n * }\n * ```\n *\n * ## Data for Templates\n *\n * `Component`s have two different kinds of data, or state, that can be\n * displayed in templates:\n *\n * 1. Arguments\n * 2. Properties\n *\n * Arguments are data that is passed in to a component from its parent\n * component. For example, if I have a `user-greeting` component, I can pass it\n * a name and greeting to use:\n *\n * ```hbs\n * <user-greeting @name=\"Ricardo\" @greeting=\"Olá\">\n * ```\n *\n * Inside my `user-greeting` template, I can access the `@name` and `@greeting`\n * arguments that I've been given:\n *\n * ```hbs\n * {{@greeting}}, {{@name}}!\n * ```\n *\n * Arguments are also available inside my component:\n *\n * ```ts\n * console.log(this.args.greeting); // prints \"Olá\"\n * ```\n *\n * Properties, on the other hand, are internal to the component and declared in\n * the class. You can use properties to store data that you want to show in the\n * template, or pass to another component as an argument.\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n *   user = {\n *     name: 'Robbie'\n *   }\n * }\n * ```\n *\n * In the above example, we've defined a component with a `user` property that\n * contains an object with its own `name` property.\n *\n * We can render that property in our template:\n *\n * ```hbs\n * Hello, {{user.name}}!\n * ```\n *\n * We can also take that property and pass it as an argument to the\n * `user-greeting` component we defined above:\n *\n * ```hbs\n * <user-greeting @greeting=\"Hello\" @name={{user.name}} />\n * ```\n *\n * ## Arguments vs. Properties\n *\n * Remember, arguments are data that was given to your component by its parent\n * component, and properties are data your component has defined for itself.\n *\n * You can tell the difference between arguments and properties in templates\n * because arguments always start with an `@` sign (think \"A is for arguments\"):\n *\n * ```hbs\n * {{@firstName}}\n * ```\n *\n * We know that `@firstName` came from the parent component, not the current\n * component, because it starts with `@` and is therefore an argument.\n *\n * On the other hand, if we see:\n *\n * ```hbs\n * {{name}}\n * ```\n *\n * We know that `name` is a property on the component. If we want to know where\n * the data is coming from, we can go look at our component class to find out.\n *\n * Inside the component itself, arguments always show up inside the component's\n * `args` property. For example, if `{{@firstName}}` is `Tom` in the template,\n * inside the component `this.args.firstName` would also be `Tom`.\n */\nclass Component {\n  /**\n   * The element corresponding to the top-level element of the component's template.\n   * You should not try to access this property until after the component's `didInsertElement()`\n   * lifecycle hook is called.\n   */\n  element: Simple.Element = null;\n\n  /**\n   * Development-mode only name of the component, useful for debugging.\n   */\n  debugName: string = null;\n\n  /**\n   * Named arguments passed to the component from its parent component.\n   * They can be accessed in JavaScript via `this.args.argumentName` and in the template via `@argumentName`.\n   *\n   * Say you have the following component, which will have two `args`, `firstName` and `lastName`:\n   *\n   * ```hbs\n   * <my-component @firstName=\"Arthur\" @lastName=\"Dent\" />\n   * ```\n   *\n   * If you needed to calculate `fullName` by combining both of them, you would do:\n   *\n   * ```ts\n   * didInsertElement() {\n   *   console.log(`Hi, my full name is ${this.args.firstName} ${this.args.lastName}`);\n   * }\n   * ```\n   *\n   * While in the template you could do:\n   *\n   * ```hbs\n   * <p>Welcome, {{@firstName}} {{@lastName}}!</p>\n   * ```\n   *\n   */\n  get args() {\n    return this.__args__;\n  }\n\n  set args(args) {\n    this.__args__ = args;\n    metaFor(this).dirtyableTagFor(\"args\").inner.dirty();\n  }\n\n  /** @private\n   * Slot on the component to save Arguments object passed to the `args` setter.\n   */\n  private __args__: any = null;\n\n  static create(injections: any) {\n    return new this(injections);\n  }\n\n  /**\n   * Constructs a new component and assigns itself the passed properties. You\n   * should not construct new components yourself. Instead, Glimmer will\n   * instantiate new components automatically as it renders.\n   *\n   * @param options\n   */\n  constructor(options: object) {\n    Object.assign(this, options);\n  }\n\n  /**\n   * Called when the component has been inserted into the DOM.\n   * Override this function to do any set up that requires an element in the document body.\n   */\n  didInsertElement() { }\n\n  /**\n   * Called when the component has updated and rerendered itself.\n   * Called only during a rerender, not during an initial render.\n   */\n  didUpdate() { }\n\n  /**\n   * Called before the component has been removed from the DOM.\n   */\n  willDestroy() { }\n\n  destroy() {\n    this.willDestroy();\n  }\n\n  toString() {\n    return `${this.debugName} component`;\n  }\n}\n\nexport default Component;\n\nexport interface ComponentFactory {\n  create(injections: object): Component;\n}\n","import {\n  dict\n} from \"@glimmer/util\";\nimport {\n  PathReference,\n  CONSTANT_TAG,\n  ConstReference,\n  DirtyableTag,\n  UpdatableTag,\n  combine,\n  isConst,\n  Tag,\n  TagWrapper\n} from \"@glimmer/reference\";\nimport {\n  ConditionalReference as GlimmerConditionalReference,\n  PrimitiveReference\n} from \"@glimmer/runtime\";\nimport { tagForProperty, UntrackedPropertyError } from \"./tracked\";\n\n/**\n * The base PathReference.\n */\nexport abstract class ComponentPathReference<T> implements PathReference<T> {\n  abstract value(): T;\n  abstract get tag(): Tag;\n\n  get(key: string): PathReference<any> {\n    return PropertyReference.create(this, key);\n  }\n}\n\nexport abstract class CachedReference<T> extends ComponentPathReference<T> {\n  private _lastRevision: number | null = null;\n  private _lastValue: any = null;\n\n  abstract compute(): T;\n\n  value() {\n    let { tag, _lastRevision, _lastValue } = this;\n\n    if (!_lastRevision || !tag.validate(_lastRevision)) {\n      _lastValue = this._lastValue = this.compute();\n      this._lastRevision = tag.value();\n    }\n\n    return _lastValue;\n  }\n}\n\nexport class RootReference extends ConstReference<object> {\n  private children = dict<RootPropertyReference>();\n\n  get(propertyKey: string) {\n    let ref = this.children[propertyKey];\n\n    if (!ref) {\n      ref = this.children[propertyKey] = new RootPropertyReference(this.inner, propertyKey);\n    }\n\n    return ref;\n  }\n}\n\nexport abstract class PropertyReference extends CachedReference<any> {\n  static create(parentReference: PathReference<any>, propertyKey: string) {\n    if (isConst(parentReference)) {\n      return new RootPropertyReference(parentReference.value(), propertyKey);\n    } else {\n      return new NestedPropertyReference(parentReference, propertyKey);\n    }\n  }\n\n  get(key: string): PathReference<any>  {\n    return new NestedPropertyReference(this, key);\n  }\n}\n\nfunction buildError(obj: any, key: string) {\n  let message = `The '${key}' property on the ${obj} was changed after it had been rendered. Properties that change after being rendered must be tracked. Use the @tracked decorator to mark this as a tracked property.`;\n  throw new UntrackedPropertyError(obj, key, message);\n}\n\nexport class RootPropertyReference extends PropertyReference {\n  tag: Tag;\n  private _parentValue: object;\n  private _propertyKey: string;\n\n  constructor(parentValue: object, propertyKey: string) {\n    super();\n\n    this._parentValue = parentValue;\n    this._propertyKey = propertyKey;\n    this.tag = tagForProperty(parentValue, propertyKey, buildError);\n  }\n\n  compute(): any {\n    return (this._parentValue as any)[this._propertyKey];\n  }\n}\n\nexport class NestedPropertyReference extends PropertyReference {\n  public tag: Tag;\n  private _parentReference: PathReference<any>;\n  private _parentObjectTag: TagWrapper<UpdatableTag>;\n  private _propertyKey: string;\n\n  constructor(parentReference: PathReference<any>, propertyKey: string) {\n    super();\n\n    let parentReferenceTag = parentReference.tag;\n    let parentObjectTag = UpdatableTag.create(CONSTANT_TAG);\n\n    this._parentReference = parentReference;\n    this._parentObjectTag = parentObjectTag;\n    this._propertyKey = propertyKey;\n\n    this.tag = combine([parentReferenceTag, parentObjectTag]);\n  }\n\n  compute() {\n    let { _parentReference, _parentObjectTag, _propertyKey } = this;\n\n    let parentValue = _parentReference.value();\n\n    _parentObjectTag.inner.update(tagForProperty(parentValue, _propertyKey));\n\n    if (typeof parentValue === \"string\" && _propertyKey === \"length\") {\n      return parentValue.length;\n    }\n\n    if (typeof parentValue === \"object\" && parentValue) {\n      return parentValue[_propertyKey];\n    } else {\n      return undefined;\n    }\n  }\n}\n\nexport class UpdatableReference<T> extends ComponentPathReference<T> {\n  public tag: TagWrapper<DirtyableTag>;\n  private _value: T;\n\n  constructor(value: T) {\n    super();\n\n    this.tag = DirtyableTag.create();\n    this._value = value;\n  }\n\n  value() {\n    return this._value;\n  }\n\n  update(value: T) {\n    let { _value } = this;\n\n    if (value !== _value) {\n      this.tag.inner.dirty();\n      this._value = value;\n    }\n  }\n}\n\nexport class ConditionalReference extends GlimmerConditionalReference {\n  static create(reference: PathReference<any>) {\n    if (isConst(reference)) {\n      let value = reference.value();\n      return PrimitiveReference.create(value);\n    }\n\n    return new ConditionalReference(reference);\n  }\n}\n","import {\n  getOwner,\n  setOwner,\n  Factory,\n  Owner\n} from \"@glimmer/di\";\nimport {\n  Bounds,\n  ComponentManager as GlimmerComponentManager,\n  DynamicScope,\n  Environment,\n  Simple,\n  CompiledDynamicProgram,\n  Arguments,\n  Template,\n  CapturedArguments,\n  compileLayout,\n  ComponentLayoutBuilder\n} from \"@glimmer/runtime\";\nimport {\n  TemplateMeta\n} from \"@glimmer/wire-format\";\nimport Component from \"./component\";\nimport ComponentDefinition from \"./component-definition\";\nimport { RootReference } from \"./references\";\nimport { Dict, Destroyable } from \"@glimmer/util\";\n\nexport interface ConstructorOptions {\n  env: Environment;\n}\n\nexport class ComponentStateBucket {\n  public name: string;\n  public component: Component;\n  private args: CapturedArguments;\n\n  constructor(definition: ComponentDefinition, args: CapturedArguments, owner: Owner) {\n    let componentFactory = definition.componentFactory;\n    let name = definition.name;\n\n    this.args = args;\n\n    let injections = {\n      debugName: name,\n      args: this.namedArgsSnapshot()\n    };\n\n    setOwner(injections, owner);\n    this.component = componentFactory.create(injections);\n  }\n\n  namedArgsSnapshot(): Readonly<Dict<object | void>> {\n    return Object.freeze(this.args.named.value());\n  }\n}\n\nclass LayoutCompiler {\n  name: string;\n  template: Template<TemplateMeta>;\n\n  constructor(name: string, template: Template<TemplateMeta>) {\n    this.template = template;\n    this.name = name;\n  }\n\n  compile(builder: ComponentLayoutBuilder): void {\n    builder.fromLayout(this.name, this.template);\n  }\n}\n\nexport default class ComponentManager implements GlimmerComponentManager<ComponentStateBucket> {\n  private env: Environment;\n\n  static create(options: ConstructorOptions): ComponentManager {\n    return new ComponentManager(options);\n  }\n\n  constructor(options: ConstructorOptions) {\n    this.env = options.env;\n  }\n\n  prepareArgs(definition: ComponentDefinition, args: Arguments): null {\n    return null;\n  }\n\n  create(environment: Environment, definition: ComponentDefinition, volatileArgs: Arguments): ComponentStateBucket | null {\n    let componentFactory = definition.componentFactory;\n    if (!componentFactory) { return null; }\n\n    let owner = getOwner(this.env);\n    return new ComponentStateBucket(definition, volatileArgs.capture(), owner);\n  }\n\n  createComponentDefinition(name: string, template: Template<any>, componentFactory?: Factory<Component>): ComponentDefinition {\n    return new ComponentDefinition(name, this, template, componentFactory);\n  }\n\n  layoutFor(definition: ComponentDefinition, bucket: ComponentStateBucket, env: Environment): CompiledDynamicProgram {\n    let template = definition.template;\n\n    return compileLayout(new LayoutCompiler(definition.name, template), this.env);\n  }\n\n  getSelf(bucket: ComponentStateBucket) {\n    if (!bucket) { return null; }\n    return new RootReference(bucket.component);\n  }\n\n  didCreateElement(bucket: ComponentStateBucket, element: Simple.Element) {\n    if (!bucket) { return; }\n    bucket.component.element = element;\n  }\n\n  didRenderLayout(bucket: ComponentStateBucket, bounds: Bounds) {\n  }\n\n  didCreate(bucket: ComponentStateBucket) {\n    bucket && bucket.component.didInsertElement();\n  }\n\n  getTag(): null {\n    return null;\n  }\n\n  update(bucket: ComponentStateBucket, scope: DynamicScope) {\n    if (!bucket) { return; }\n\n    // TODO: This should be moved to `didUpdate`, but there's currently a\n    // Glimmer bug that causes it not to be called if the layout doesn't update.\n    let { component } = bucket;\n\n    component.args = bucket.namedArgsSnapshot();\n    component.didUpdate();\n  }\n\n  didUpdateLayout() {}\n\n  didUpdate(bucket: ComponentStateBucket) { }\n\n  getDestructor(bucket: ComponentStateBucket): Destroyable {\n    if (!bucket) { return; }\n\n    return bucket.component;\n  }\n}\n","const questions = [];\r\n\r\nquestions.push({ title: 'Which is an irregular verb', answers: ['Clean', 'Paint', 'Hit', 'Finish'], correct: 2})\r\nquestions.push({ title: 'Best synonym of coax', answers: ['Persuade', 'Command', 'Inspect', 'Search'], correct: 0})\r\nquestions.push({ title: 'If I had her phone number, I\\'d ring her', answers: ['I have her number', 'I don\\'t have her number', 'I had her number.', 'I didn\\'t have her number'], correct: 1})\r\nquestions.push({ title: 'I remember _________ the Queen in London.', answers: ['meet', 'to meet', 'meeting', 'to meeting'], correct: 2})\r\nquestions.push({ title: 'Photos is a ______ noun', answers: ['common', 'concrete', 'abstract', 'proper'], correct: 0})\r\nquestions.push({ title: 'Hanna is a _____ noun', answers: ['common', 'concrete', 'abstract', 'proper'], correct: 1});\r\nquestions.push({ title: 'We ______ that game, but we went on to win the series.', answers: ['win', 'winned', 'won', 'wan'], correct: 2});\r\nquestions.push({ title: 'We _______ the perfect spot for a picnic: a patch of grass by a peaceful stream.', answers: ['chosen', 'choosed', 'chose', 'choose'], correct: 2});\r\nquestions.push({ title: 'Choose the best personal pronound for this sentence: Christina, ________ the best!', answers: ['Thomas is', 'you\\'re', 'ice cream is', 'Santa Claus is'], correct: 1});\r\nquestions.push({ title: 'What\\'s the adjective?', answers: ['Carrots', 'With', 'Cut', 'Sharp'], correct: 3});\r\nquestions.push({ title: 'I do believe that stuffed moneky is _______', answers: ['hi\\'s', 'his', 'his\\'', 'him\\'s'], correct: 1});\r\nquestions.push({ title: 'The _______ spurs jingled as he strode into the salooon', answers: ['cowboys\\'', 'cowboy\\'s', 'cowboys', 'boycow'], correct: 1});\r\nquestions.push({ title: 'You ______ broken the high jump record if you had gotten a better running start', answers: ['cou\\'ldve', 'could\\'ve', 'couldve', 'should have'], correct: 1});\r\nquestions.push({ title: 'If you ______ able to go to the store after work, I can pick up some groceries for you.', answers: ['arent', 'aren\\'t', 'are\\'nt', 'will'], correct: 1});\r\nquestions.push({ title: '_____ got a bad feeling about this', answers: ['Ive', 'Iv\\'e', 'I\\'ve', 'Was yoda'], correct: 2});\r\n\r\nexport default function() {\r\n  const index = Math.floor(Math.random() * questions.length);\r\n  const question = questions[index];\r\n  questions.splice(index, 1);\r\n  return question;\r\n}\r\n","const questions = [];\r\nquestions.push({ title: 'How to calculate the sine of a right triange?', answers: ['Hypotenuse / Opposite', 'Opposite / Hypotenuse', 'Perpendicular / Opposite', 'Opposite / Hypotenuse'], correct: 1});\r\nquestions.push({ title: 'What\\'s the formula to for the volume of a Sphere?', answers: ['4/3 * PI * radious ^ 3', 'PI * radious ^ 2', 'PI * radious ^ 2 * height', 'Edge ^ 3'], correct: 0});\r\nquestions.push({ title: 'Modus tollens means that', answers: ['¬ (P ^ Q) => ¬P v ¬Q', 'P -> Q, P is true then Q is too', 'P -> Q, Q is false then P is false', '¬¬P -> P'], correct: 2});\r\nquestions.push({ title: 'What year Carl Friedrich Gauss was born?', answers: ['1236 AC', '1777 AC', '1200 BC', '1912 AC'], correct: 1});\r\nquestions.push({ title: 'What is the derivative of a function?', answers: ['The domain of a function', 'The image of a function', 'Sensitivity to change of a function', 'The reflection of a function'], correct: 2});\r\nquestions.push({ title: 'The median of 12, 5, 4 is', answers: ['5', '7', '12', '4'], correct: 0});\r\nquestions.push({ title: 'The mean of 12, 5, 4 is', answers: ['5', '7', '12', '4'], correct: 2});\r\nquestions.push({ title: 'What is nash equilibrium', answers: ['A game theory system', 'A formula to balance stadistics', 'An algebra formula', 'An engineer system'], correct: 0});\r\nquestions.push({ title: 'log(8) is equal to', answers: ['2', '3', '4', '1'], correct: 1});\r\nquestions.push({ title: 'The area of a square is', answers: ['side^2', '4 * side', 'lenth * width', '2 * side'], correct: 0});\r\nquestions.push({ title: 'Area for a triangle', answers: ['2 * base * height', '1/2 * base * height', 'base * height / 4', 'base * height'], correct: 1});\r\nquestions.push({ title: 'What is the mode', answers: ['The value that appears most often', 'The lowest value', 'The highest value', 'What Kardasains are wearing'], correct: 0});\r\nquestions.push({ title: 'What\\'s the derivative of a linear function a * x', answers: ['0', '1', 'a', 'x'], correct: 2});\r\nquestions.push({ title: 'What\\'s the derivative of x^2', answers: ['x', '2x', '2', '1'], correct: 1});\r\n\r\nexport default function() {\r\n  const index = Math.floor(Math.random() * questions.length);\r\n  const question = questions[index];\r\n  questions.splice(index, 1);\r\n  return question;\r\n}\r\n","import Component, { tracked } from \"@glimmer/component\";\nimport getEnglishQuestion from './get-english-question';\nimport getMathQuestion from './get-math-question';\n\nexport default class EruditeBattlesQuestions extends Component {\n\n   @tracked selectingQuestion = true;\n   @tracked question;\n\n  selectEnglish() {\n    this.selectingQuestion = false;\n    this.question = getEnglishQuestion();\n  }\n\n  selectMath() {\n    this.selectingQuestion = false;\n    this.question = getMathQuestion();\n  }\n\n  clearQuestion() {\n    this.selectingQuestion = true;\n    delete this.question;\n  }\n}\n","export default {\"id\":\"NLrH5nEj\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"div\\\"],[9,\\\"class\\\",\\\"container main-container\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[19,0,[\\\"selectingQuestion\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[6,\\\"button\\\"],[9,\\\"type\\\",\\\"button\\\"],[9,\\\"class\\\",\\\"btn btn-danger btn-lg btn-block theme-btn\\\"],[10,\\\"onclick\\\",[25,\\\"action\\\",[[19,0,[\\\"selectEnglish\\\"]]],null],null],[7],[0,\\\"English\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"button\\\"],[9,\\\"type\\\",\\\"button\\\"],[9,\\\"class\\\",\\\"btn btn-primary btn-lg btn-block theme-btn\\\"],[10,\\\"onclick\\\",[25,\\\"action\\\",[[19,0,[\\\"selectMath\\\"]]],null],null],[7],[0,\\\"Math\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[5,\\\"themed-question\\\",[],[[\\\"@question\\\",\\\"@clearQuestion\\\"],[[18,\\\"question\\\"],[25,\\\"action\\\",[[19,0,[\\\"clearQuestion\\\"]]],null]]],{\\\"statements\\\":[],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\"meta\":{\"specifier\":\"template:/erudite-battles-questions/components/erudite-battles-questions\"}};","import Component, { tracked } from '@glimmer/component';\n\nexport default class ThemedQuestion extends Component {\n\n  questionAnswered = false;\n\n  didInsertElement() {\n    window.setTimeout(() => {\n      if (!this.questionAnswered) {\n        alert('TIMEOUT!');\n        this.args.clearQuestion();\n      }\n    }, 20000)\n  }\n\n  selectAnswer(answer) {\n    if (answer === this.args.question.correct) {\n      alert('CORRECT ;)');\n    } else {\n      alert('INCORRECT :(');\n    }\n    this.questionAnswered = true;\n    this.args.clearQuestion();\n  }\n};\n","export default {\"id\":\"dyBJe76+\",\"block\":\"{\\\"symbols\\\":[\\\"answer\\\",\\\"index\\\",\\\"@question\\\"],\\\"statements\\\":[[6,\\\"div\\\"],[9,\\\"class\\\",\\\"row\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"col-12\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"panel panel-default\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"panel-body\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"h1\\\"],[9,\\\"class\\\",\\\"text-center\\\"],[7],[1,[19,3,[\\\"title\\\"]],false],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[19,3,[\\\"answers\\\"]]],[[\\\"key\\\"],[\\\"@index\\\"]],{\\\"statements\\\":[[0,\\\"  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"col-12\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"button\\\"],[9,\\\"type\\\",\\\"button\\\"],[9,\\\"class\\\",\\\"btn btn-primary btn-lg btn-block btn-question\\\"],[10,\\\"onclick\\\",[25,\\\"action\\\",[[19,0,[\\\"selectAnswer\\\"]],[19,2,[]]],null],null],[7],[1,[19,1,[]],false],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1,2]},null],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\"meta\":{\"specifier\":\"template:/erudite-battles-questions/components/themed-question\"}};","import { default as __ui_components_erudite_battles_questions_component__ } from '../src/ui/components/erudite-battles-questions/component';\nimport { default as __ui_components_erudite_battles_questions_get_english_question__ } from '../src/ui/components/erudite-battles-questions/get-english-question';\nimport { default as __ui_components_erudite_battles_questions_get_math_question__ } from '../src/ui/components/erudite-battles-questions/get-math-question';\nimport { default as __ui_components_erudite_battles_questions_template__ } from '../src/ui/components/erudite-battles-questions/template';\nimport { default as __ui_components_themed_question_component__ } from '../src/ui/components/themed-question/component';\nimport { default as __ui_components_themed_question_template__ } from '../src/ui/components/themed-question/template';\nexport default {'component:/erudite-battles-questions/components/erudite-battles-questions': __ui_components_erudite_battles_questions_component__,'component:/erudite-battles-questions/components/erudite-battles-questions/get-english-question': __ui_components_erudite_battles_questions_get_english_question__,'component:/erudite-battles-questions/components/erudite-battles-questions/get-math-question': __ui_components_erudite_battles_questions_get_math_question__,'template:/erudite-battles-questions/components/erudite-battles-questions': __ui_components_erudite_battles_questions_template__,'component:/erudite-battles-questions/components/themed-question': __ui_components_themed_question_component__,'template:/erudite-battles-questions/components/themed-question': __ui_components_themed_question_template__};\n","export default {\"app\":{\"name\":\"erudite-battles-questions\",\"rootName\":\"erudite-battles-questions\"},\"types\":{\"application\":{\"definitiveCollection\":\"main\"},\"component\":{\"definitiveCollection\":\"components\"},\"helper\":{\"definitiveCollection\":\"components\"},\"renderer\":{\"definitiveCollection\":\"main\"},\"template\":{\"definitiveCollection\":\"components\"}},\"collections\":{\"main\":{\"types\":[\"application\",\"renderer\"]},\"components\":{\"group\":\"ui\",\"types\":[\"component\",\"template\",\"helper\"],\"defaultType\":\"component\",\"privateCollections\":[\"utils\"]},\"styles\":{\"group\":\"ui\",\"unresolvable\":true},\"utils\":{\"unresolvable\":true}}};\n","import Application from '@glimmer/application';\nimport Resolver, { BasicModuleRegistry } from '@glimmer/resolver';\nimport moduleMap from '../config/module-map';\nimport resolverConfiguration from '../config/resolver-configuration';\n\nexport default class App extends Application {\n  constructor() {\n    let moduleRegistry = new BasicModuleRegistry(moduleMap);\n    let resolver = new Resolver(resolverConfiguration, moduleRegistry);\n\n    super({\n      rootName: resolverConfiguration.app.rootName,\n      resolver\n    });\n  }\n}\n","import App from './main';\nimport { ComponentManager, setPropertyDidChange } from '@glimmer/component';\n\nconst app = new App();\nconst containerElement = document.getElementById('app');\n\nsetPropertyDidChange(() => {\n  app.scheduleRerender();\n});\n\napp.registerInitializer({\n  initialize(registry) {\n    registry.register(`component-manager:/${app.rootName}/component-managers/main`, ComponentManager);\n  }\n});\n\napp.renderComponent('erudite-battles-questions', containerElement, null);\n\napp.boot();\n"],"names":["unwrap","val","undefined","Error","expect","message","unreachable","debugAssert","test","msg","LogLevel","NullConsole","log","_message","warn","error","trace","ALWAYS","Logger","console","level","f","force","skipped","stackTrace","Trace","debug","Debug","Warn","_console","LOG_LEVEL","objKeys","Object","keys","assign","obj","i","arguments","length","assignment","j","key","fillNulls","count","arr","Array","GUID","initializeGuid","object","_guid","ensureGuid","proto","create","EmptyObject","prototype","dict","DictSet","add","delete","forEach","callback","dictKeys","toArray","Stack","stack","current","push","item","pop","len","isEmpty","ListNode","value","next","prev","LinkedList","clear","fromSlice","slice","list","forEachNode","append","n","clone","head","_head","tail","_tail","out","splice","start","end","reference","before","nextNode","node","prevNode","contains","needle","insertBefore","remove","prepend","ListSlice","toList","EMPTY_SLICE","HAS_NATIVE_WEAKMAP","hasWeakMap","WeakMap","instance","toString","call","HAS_TYPED_ARRAYS","Uint32Array","A","EMPTY_ARRAY","freeze","Register","debugSlice","env","AppendOpcodes","evaluateOpcode","name","evaluate","vm","opcode","type","func","APPEND_OPCODES","AbstractOpcode","toJSON","guid","UpdatingOpcode","CONSTANT","INITIAL","VOLATILE","NaN","RevisionTag","validate","snapshot","id","VALUE","VALIDATE","TagWrapper","inner","register","Type","tag","_tag","CONSTANT_TAG","VOLATILE_TAG","$REVISION","CURRENT_TAG","DirtyableTag","revision","dirty","combineTagged","tagged","optimized","l","_combine","combineSlice","combine","tags","TagsPair","TagsCombinator","CachedTag","lastChecked","lastValue","compute","invalidate","first","second","Math","max","UpdatableTag","lastUpdated","update","CachedReference","lastRevision","MapperReference","mapper","map","ReferenceCache","initialized","peek","initialize","revalidate","NOT_MODIFIED","isModified","ConstReference","isConst","ListItem","iterable","result","valueReferenceFor","retained","seen","memo","memoReferenceFor","updateValueReference","updateMemoReference","shouldRemove","reset","IterationArtifacts","iterator","iterate","has","get","wasSeen","move","ReferenceIterator","artifacts","Phase","IteratorSynchronizer","target","sync","phase","Append","nextAppend","Prune","nextPrune","Done","nextDone","advanceToKey","seek","startPrune","nextRetain","nextMove","nextInsert","retain","found","insert","done","PrimitiveReference","UNDEFINED_REFERENCE","NULL_REFERENCE","TRUE_REFERENCE","FALSE_REFERENCE","ValueReference","StringReference","_key","lengthReference","ConditionalReference","toBool","ConcatReference","parts","castToString","join","String","_helper","op1","helper","constants","getFunction","args","_function","symbol","expr","referenceForSymbol","scope","bindSymbol","_name","getString","locals","getPartialMap","ref","getSelf","symbols","bindCallerScope","op2","pushRootScope","_block","block","getBlock","hasBlock","hasBlockParams","symbolTable","parameters","reverse","Arguments","positional","PositionalArguments","named","NamedArguments","empty","setup","synthetic","names","fromTop","namedCount","positionalCount","at","pos","capture","_references","position","CapturedPositionalArguments","references","valueOf","idx","parseInt","_names","_realNames","indexOf","CapturedNamedArguments","sliceName","_map","pushChildScope","popScope","pushDynamicScope","popDynamicScope","number","other","getOther","primitive","flag","offset","fetchValue","dup","load","fetch","getArray","bindDynamicScope","pushFrame","popFrame","enter","exit","compileDynamic","compiled","compileStatic","_invoker","invoker","invoke","goto","cache","updateWith","Assert","return","ConstTest","_env","SimpleTest","EnvironmentTest","toConditionalReference","_func","operand","throw","expected","JSON","stringify","e","JumpIfNotModifiedOpcode","alwaysRevalidate","didModify","inspect","DidModifyOpcode","LabelOpcode","label","text","elements","appendText","appendComment","openElement","tagName","operations","elementRef","nextSiblingRef","element","nextSibling","isConstReference","pushRemoteElement","popRemoteElement","ClassList","toReference","toClassName","ClassListReference","ret","SimpleElementOperations","opcodes","classList","addStaticAttribute","addClass","getAppendOperations","setAttribute","addStaticAttributeNS","namespace","addDynamicAttribute","isTrusting","attributeManager","attributeFor","attribute","DynamicAttribute","addAttribute","addDynamicAttributeNS","nsAttribute","flush","ComponentElementOperations","attributeNames","attributes","shouldAddAttribute","StaticAttribute","action","expectOperations","expectConstructing","flushElement","closeElement","_value","_namespace","op3","setStaticAttributeNS","setStaticAttribute","_manager","manager","constructing","updateOperations","dynamicScope","modifier","scheduleInstallModifier","destructor","getDestructor","newDestroyable","UpdateModifierOpcode","scheduleUpdateModifier","patch","updateAttribute","PatchElementOpcode","formattedElement","formatElement","toLowerCase","trusting","setDynamicAttributeNS","setDynamicAttribute","operation","_definition","definition","component","ARGS","_state","preparedArgs","prepareArgs","atNames","atName","flags","state","hasDefaultBlock","UpdateComponentOpcode","beginCacheGroup","pushSimpleBlock","didCreateElement","layoutFor","bounds","popBlock","didRenderLayout","didCreate","DidUpdateLayoutOpcode","commitCacheGroup","componentTag","getTag","_vm","didUpdateLayout","didUpdate","Cursor","ConcreteBounds","parentNode","last","parentElement","firstNode","lastNode","SingleNodeBounds","single","parent","removeChild","First","Last","Fragment","ElementStack","elementStack","nextSiblingStack","blockStack","dom","getDOM","defaultOperations","forInitialRender","resume","tracker","pushBlockTracker","method","popElement","topElement","SimpleBlockTracker","pushUpdatableBlock","UpdatableBlockTracker","isRemote","newBounds","pushBlockList","BlockListTracker","finalize","_operations","createElement","pushElement","RemoteBlockTracker","d","string","createTextNode","newNode","comment","createComment","destroyables","nesting","destroy","didDestroy","boundList","_element","_node","_bounds","_d","_stack","COMPONENT_DEFINITION_BRAND","isComponentDefinition","ComponentDefinition","ComponentClass","isSafeString","toHTML","isNode","nodeType","isString","Upsert","cautiousInsert","cursor","TextUpsert","SafeStringUpsert","NodeUpsert","trustingInsert","HTMLUpsert","textNode","_dom","nodeValue","insertHTMLBefore","lastStringValue","stringValue","insertNodeBefore","normalizeTextValue","normalizeTrustedValue","normalizeValue","AppendDynamicOpcode","normalized","normalize","upsert","IsComponentDefinitionReference","UpdateOpcode","OptimizedCautiousAppendOpcode","_reference","OptimizedCautiousUpdateOpcode","OptimizedTrustingAppendOpcode","OptimizedTrustingUpdateOpcode","debugCallback","context","info","ScopeInspector","evalInfo","slot","getSymbol","path","split","evalScope","getEvalScope","reduce","r","part","_symbols","_evalInfo","inspector","template","asPartial","IterablePresenceReference","listRef","iterableFor","enterList","exitList","breaks","tryOpcode","enterItem","Opcodes","is","variant","isArray","Expressions","isUnknown","Unknown","isGet","Get","isConcat","Concat","isHelper","Helper","isHasBlock","HasBlock","isHasBlockParams","HasBlockParams","isUndefined","Undefined","isClientSide","ClientSideExpression","isMaybeLocal","MaybeLocal","isPrimitiveValue","Statements","isText","Text","isAppend","isComment","Comment","isModifier","Modifier","isBlock","Block","isComponent","Component","isOpenElement","OpenElement","isFlushElement","FlushElement","isCloseElement","CloseElement","isStaticAttr","StaticAttr","isDynamicAttr","DynamicAttr","isYield","Yield","isPartial","Partial","isDynamicArg","DynamicArg","isStaticArg","StaticArg","isTrustingAttr","TrustingAttr","isDebugger","Debugger","ClientSideStatement","isAttribute","isArgument","isParameter","getParameterName","s","Ops","CompiledStaticTemplate","CompiledDynamicTemplate","compileLayout","compilable","builder","ComponentLayoutBuilder","compile","wrapLayout","layout","WrappedBuilder","fromLayout","componentName","UnwrappedBuilder","attrs","ComponentTagBuilder","ComponentAttrsBuilder","meta","templateMeta","dynamicTag","getDynamic","staticTag","getStatic","b","startLabels","s1","jumpUnless","pushComponentOperations","openDynamicElement","openElementWithOperations","s0","buffer","invokeStatic","asBlock","stopLabels","hasEval","concat","ATTRS_BLOCK","asLayout","isDynamic","isStatic","staticTagName","dynamicTagName","static","dynamic","ClientSide","FunctionExpression","ComponentBuilder","params","hash","_default","inverse","pushComponentManager","invokeComponent","definitionArgs","getDefinition","a","returnTo","compileArgs","pushDynamicComponentManager","OpcodeBuilderDSL","RawInlineBlock","statements","scan","CompilableTemplate","Labels","labels","targets","index","Target","set","BasicOpcodeBuilder","program","labelsStack","upvars","reserve","pushArgs","createComponent","hasDefault","hasInverse","registerComponentDestructor","beginComponentTransaction","commitComponentTransaction","getComponentSelf","getComponentLayout","getPartialTemplate","resolveMaybeLocal","debugger","array","dynamicContent","Opcode","cautiousAppend","content","trustingAppend","openPrimitiveElement","staticAttr","dynamicAttrNS","dynamicAttr","_comment","putIterator","setVariable","getVariable","getProperty","size","function","sp","nextPos","ra","pushImmediate","_primitive","pushBlock","compileDynamicBlock","invokeDynamic","callerCount","calleeCount","min","fp","testFunc","jump","jumpIf","_string","isCompilableExpression","OpcodeBuilder","guardedAppend","expression","InvokeDynamicLayout","WireFormat","Compilers","funcs","sexp","STATEMENTS","CLIENT_SIDE","_sexp","hasModifier","lookupModifier","OpenComponentElement","DidCreateElement","DidRenderLayout","macros","inlines","returned","E","_template","_inverse","templateBlock","inverseBlock","blocks","bindSelf","bindBlock","lookup","$eval","callerNames","numPositionalArgs","inverseSymbol","defaultSymbol","defaultBlock","bindEvalScope","GlimmerDebug","hasComponentDefinition","child","attrsBlock","getComponentDefinition","stmts","PartialInvoker","outerSymbols","_partial","partial","partialSymbols","outerScope","partialScope","getCallerScope","bind","bindPartialMap","nameRef","hasPartial","lookupPartial","InvokeDynamicYield","pushCallerScope","table","fromBase","to","compileList","EXPRESSIONS","CLIENT_SIDE_EXPRS","hasHelper","lookupHelper","Blocks","addMissing","missing","handled","BLOCKS","Inlines","INLINES","populateBuiltins","_hash","values","_params","expressions","compileStatement","statement","compileStatements","compiledStatic","compiledDynamic","staticBlock","Scanner","scanEntryPoint","scanBlock","scanLayout","newStatements","toplevel","inTopLevel","addFallback","decorateTopLevelElement","attrsSymbol","Constants","strings","arrays","functions","others","getReference","getExpression","getNames","badProtocols","badTags","badTagsForDataURI","badAttributes","badAttributesForDataURI","checkURI","checkDataURI","requiresSanitization","sanitizeAttributeValue","toUpperCase","str","protocol","protocolForURL","normalizeProperty","slotName","lower","preferAttr","ATTR_OVERRIDES","form","propName","innerHTMLWrapper","depth","after","domChanges","document","DOMChangesClass","shouldApplyFix","div","html","parentTag","wrapper","fixInnerHTML","treeConstruction","DOMTreeConstructionClass","referenceNode","wrappedHtml","innerHTML","childNodes","moveNodesBefore","SVG_NAMESPACE","svgNamespace","namespaceURI","fixSVG","TreeConstructionClass","firstChild","svg","createElementNS","uselessComment","didSetUselessComment","nextPrevious","previousSibling","lastChild","mergingTextDiv","insertAdjacentHTML","SVG_INTEGRATION_POINTS","foreignObject","desc","title","BLACKLIST_TABLE","doc","source","DOMOperations","setupUselessElement","uselessElement","isElementInSVGNamespace","isHTMLIntegrationPoint","_parent","data","DOM","TreeConstruction","setAttributeNS","appliedTreeContruction","treeConstructionNodeMergingFix","treeConstructionTableElementFix","treeConstructionSvgElementFix","DOMTreeConstruction","DOMChanges","removeAttribute","removeAttributeNS","isDocumentFragment","insertTextBefore","insertAfter","_useless","_nextSibling","useless","HTMLElement","Node","DOCUMENT_FRAGMENT_NODE","domChangesNodeMergingFix","domChangesTableElementFix","domChangesSvgElementFix","defaultManagers","attr","_isTrusting","isSVG","defaultAttributeManagers","defaultPropertyManagers","SafePropertyManager","isUserInputValue","INPUT_VALUE_PROPERTY_MANAGER","isOptionSelected","OPTION_SELECTED_MANAGER","PropertyManager","SafeAttributeManager","AttributeManager","normalizedValue","normalizeAttributeValue","isAttrRemovalValue","InputValuePropertyManager","input","currentValue","OptionSelectedManager","option","selected","Scope","callerScope","slots","partialMap","root","self","refs","init","sized","RangeError","Transaction","scheduledInstallManagers","scheduledInstallModifiers","scheduledUpdateModifierManagers","scheduledUpdateModifiers","createdComponents","createdManagers","updatedComponents","updatedManagers","destructors","commit","install","Program","_offset","_opcode","Environment","appendOperations","_macros","_transaction","getIdentity","begin","transaction","UpdatingVM","frameStack","execute","handler","try","frame","nextStatement","op","ops","UpdatingVMFrame","handleException","BlockOpcode","children","details","TryOpcode","didInitializeChildren","VM","updating","EvaluationStack","restore","updatingOpcodeStack","json","ListRevalidationDelegate","marker","didInsert","didDelete","vmForInsertion","_item","_memo","entry","ListBlockOpcode","lastIterated","listDidChange","synchronizer","exceptionHandler","RenderResult","rerender","top","items","dynamicScopeStack","scopeStack","cacheGroups","listBlockStack","pc","t0","t1","loadValue","initial","END","guard","didEnter","listBlock","childScope","bindCaller","TemplateIterator","clientId","templateFactory","templateId","parsedBlock","envMeta","newMeta","parse","ScannableTemplate","rawBlock","entryPoint","scanner","render","appendTo","asEntryPoint","compilationMeta","NodeType","EMPTY_CACHE","PathReference","property","chains","lastParentValue","parentValue","_parentValue","ReferenceType","Meta","for","referenceTypeFor","PropertyReference","prop","_getChains","RootReference","chainFor","referenceFromParts","NOOP_DESTROY","ConstPath","_property","chain","notify","ConstRoot","_parts","_prop","ConstMeta","CLASS_META","hasOwnProperty","RootReferenceFactory","DefaultPathReferenceFactory","referenceTypes","propertyMetadata","_meta","isExtensible","MetaToUse","constructor","classMeta","InstanceMetaConstructor","exists","metadataForProperty","addReference","addReferenceTypeFor","removeReference","getReferenceTypes","referencesFor","getSlots","rootCache","_outer","isSpecifierObjectAbsolute","questions","__ui_components_erudite_battles_questions_component__","__ui_components_erudite_battles_questions_get_english_question__","__ui_components_erudite_battles_questions_get_math_question__","__ui_components_erudite_battles_questions_template__","__ui_components_themed_question_component__","__ui_components_themed_question_template__"],"mappings":"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"}